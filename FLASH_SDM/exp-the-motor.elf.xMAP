


# .interrupt_vectorsboot
#>00000000          F_vector_addr (linker command file)
  00000000 00000004 interrupt_vectorsboot.text F_vectboot	(Vectors_c.obj)

# .interrupt_vectors
  00000000 00000086 interrupt_vectors.text F_vect	(Vectors_c.obj)

# .ApplicationCode
#>00000086          F_Pcode_start_addr (linker command file)
  00000086 0000001F .text   FFMSTR_RxQueue	(freemaster_serial_c.obj)
  000000A5 0000002A .text   FFMSTR_RxDequeue	(freemaster_serial_c.obj)
  000000CF 00000041 .text   FFMSTR_ProcessSCI	(freemaster_serial_c.obj)
  00000110 0000001D .text   FFMSTR_Listen	(freemaster_serial_c.obj)
  0000012D 0000000B .text   FFMSTR_SendError	(freemaster_serial_c.obj)
  00000138 0000005A .text   FFMSTR_SendResponse	(freemaster_serial_c.obj)
  00000192 00000032 .text   FFMSTR_Tx	(freemaster_serial_c.obj)
  000001C4 000000AB .text   FFMSTR_Rx	(freemaster_serial_c.obj)
  0000026F 0000000E .text   FFMSTR_InitSerial	(freemaster_serial_c.obj)
  0000027D 00000003 .text   FFMSTR_Poll	(freemaster_serial_c.obj)
  00000280 0000000A .text   FFMSTR_Init	(freemaster_protocol_c.obj)
  0000028A 0000006D .text   FFMSTR_ProtocolDecoder	(freemaster_protocol_c.obj)
  000002F7 00000038 .text   FFMSTR_GetBoardInfo	(freemaster_protocol_c.obj)
  0000032F 00000030 .text   FFMSTR_ReadMem	(freemaster_protocol_c.obj)
  0000035F 00000024 .text   FFMSTR_WriteMem	(freemaster_protocol_c.obj)
  00000383 00000024 .text   FFMSTR_WriteMemMask	(freemaster_protocol_c.obj)
  000003A7 00000007 .text   FFMSTR_Isr	(freemaster_56F8xxx_c.obj)
  000003AE 00000013 .text   FFMSTR_CopyToBuffer	(freemaster_56F8xxx_c.obj)
  000003C1 00000013 .text   FFMSTR_CopyFromBuffer	(freemaster_56F8xxx_c.obj)
  000003D4 0000001D .text   FFMSTR_CopyFromBufferWithMask	(freemaster_56F8xxx_c.obj)
  000003F1 00000006 .text   FFMSTR_SetExAddr	(freemaster_56F8xxx_c.obj)
  000003F7 00000027 .text   FFMSTR_AddressFromBuffer	(freemaster_56F8xxx_c.obj)
  0000041E 000001B8 .text   FeFlexPWM_Init	(eFlexPWM_c.obj)
  000005D6 0000000F .text   FSetCV	(TI2_c.obj)
  000005E5 0000000F .text   FTI2_Init	(TI2_c.obj)
  000005F4 0000000D .text   FTI2_Interrupt	(TI2_c.obj)
  00000601 0000000F .text   FSetCV	(TI1_c.obj)
  00000610 00000018 .text   FSetPV	(TI1_c.obj)
  00000628 00000045 .text   FHWEnDi	(TI1_c.obj)
  0000066D 0000000C .text   FTI1_Enable	(TI1_c.obj)
  00000679 0000000B .text   FTI1_Disable	(TI1_c.obj)
  00000684 00000025 .text   FTI1_Init	(TI1_c.obj)
  000006A9 0000000D .text   FTI1_Interrupt	(TI1_c.obj)
  000006B6 00000014 .text   FQSCI0_Init	(QSCI0_c.obj)
  000006CA 00000011 .text   FPWMC1_InterruptOnReload	(PWMC1_c.obj)
  000006DB 0000003C .text   FPWMC1_InterruptOnFault	(PWMC1_c.obj)
  00000717 00000003 .text   FPWMC1_Init	(PWMC1_c.obj)
  0000071A 0000009E .text   FPWMC1_SetRatio16	(PWMC1_c.obj)
  000007B8 00000003 .text   FFMSTR1_Init	(FMSTR1_c.obj)
  000007BB 00000007 .text   FCpu_Interrupt	(Cpu_c.obj)
  000007C2 0000003D .text   FCpu__ivINT_TMRA1	(Cpu_c.obj)
  000007FF 0000003D .text   FCpu__ivINT_TMRA0	(Cpu_c.obj)
  0000083C 00000042 .text   F_EntryPoint	(Cpu_c.obj)
  0000087E 00000106 .text   FPE_low_level_init	(Cpu_c.obj)
  00000984 00000037 .text   FHWEnDi	(Cap3_c.obj)
  000009BB 0000000B .text   FCap3_GetCaptureValue	(Cap3_c.obj)
  000009C6 00000031 .text   FCap3_Init	(Cap3_c.obj)
  000009F7 0000002A .text   FCap3_Interrupt	(Cap3_c.obj)
  00000A21 0000003B .text   FCap2_Init	(Cap2_c.obj)
  00000A5C 00000008 .text   FCap2_Interrupt	(Cap2_c.obj)
  00000A64 0000001F .text   FHWEnDi	(Cap1_c.obj)
  00000A83 00000022 .text   FCap1_Init	(Cap1_c.obj)
  00000AA5 00000008 .text   FCap1_Interrupt	(Cap1_c.obj)
  00000AAD 00000011 .text   Fmain	(main_c.obj)
  00000ABE 0000008E .text   FPID_Cal	(PID_c.obj)
  00000B4C 00000184 .text   FTI1_OnInterrupt	(Events_c.obj)
  00000CD0 00000144 .text   FCap1_OnCapture	(Events_c.obj)
  00000E14 00000001 .text   FPWMC1_OnReload	(Events_c.obj)
  00000E15 00000001 .text   FPWMC1_OnFault0	(Events_c.obj)
  00000E16 00000001 .text   FPWMC1_OnFault1	(Events_c.obj)
  00000E17 00000001 .text   FPWMC1_OnFault2	(Events_c.obj)
  00000E18 00000001 .text   FPWMC1_OnFault3	(Events_c.obj)
  00000E19 00000392 .text   FCap3_OnCapture	(Events_c.obj)
  000011AB 00000144 .text   FCap2_OnCapture	(Events_c.obj)
  000012EF 00000149 .text   FCap3_OnOverflow	(Events_c.obj)
  00001438 0000005C .text   FTI2_OnInterrupt	(Events_c.obj)
  00001494 00000000 rtlib.text FARTDIVREC_S16	(runtime 56800E smm.lib artdivrec_s32_0)
  00001494 00000000 rtlib.text ARTDIVREC_S16	(runtime 56800E smm.lib artdivrec_s32_0)
  00001494 00000037 rtlib.text rtlib.text	(runtime 56800E smm.lib artdivrec_s32_0)
  0000149B 00000000 rtlib.text ARTDIVREC_U16	(runtime 56800E smm.lib artdivrec_s32_0)
  0000149B 00000000 rtlib.text FARTDIVREC_U16	(runtime 56800E smm.lib artdivrec_s32_0)
  000014A2 00000000 rtlib.text FARTDIVREC_S32	(runtime 56800E smm.lib artdivrec_s32_0)
  000014A2 00000000 rtlib.text ARTDIVREC_S32	(runtime 56800E smm.lib artdivrec_s32_0)
  000014B4 00000000 rtlib.text FARTDIVREC_U32	(runtime 56800E smm.lib artdivrec_s32_0)
  000014B4 00000000 rtlib.text ARTDIVREC_U32	(runtime 56800E smm.lib artdivrec_s32_0)
  000014CB 00000042 rtlib.text rtlib.text	(runtime 56800E smm.lib save_reg.o     )
  000014CB 00000023 rtlib.text INTERRUPT_SAVEALL	(runtime 56800E smm.lib save_reg.o     )
  000014EE 0000001F rtlib.text INTERRUPT_RESTOREALL	(runtime 56800E smm.lib save_reg.o     )
  0000150D 00000000 rtlib.text Ffabs	(MSL C 56800E smm.lib ffabs.o        )
  0000150D 00000003 rtlib.text rtlib.text	(MSL C 56800E smm.lib ffabs.o        )
  00001510 00000045 startup.text Finit_56800_	(56F80xx_init_asm.obj)
  00001510 00000045 startup.text startup.text	(56F80xx_init_asm.obj)
  00001555 00000128 fp_engine.text fp_engine.text	(runtime 56800E smm.lib artaddf32u.o   )
  00001555 00000000 fp_engine.text ARTSUBF32U	(runtime 56800E smm.lib artaddf32u.o   )
  00001586 00000000 fp_engine.text ARTADDF32U	(runtime 56800E smm.lib artaddf32u.o   )
  0000167D 00000000 fp_engine.text FARTEQF32	(runtime 56800E smm.lib artcmpf32.o    )
  0000167D 000000CB fp_engine.text fp_engine.text	(runtime 56800E smm.lib artcmpf32.o    )
  0000167D 00000000 fp_engine.text ARTEQF32	(runtime 56800E smm.lib artcmpf32.o    )
  0000167F 00000000 fp_engine.text ARTNEF32	(runtime 56800E smm.lib artcmpf32.o    )
  0000167F 00000000 fp_engine.text FARTNEF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001681 00000000 fp_engine.text ARTGEF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001681 00000000 fp_engine.text FARTGEF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001683 00000000 fp_engine.text FARTLEF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001683 00000000 fp_engine.text ARTLEF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001685 00000000 fp_engine.text ARTGTF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001685 00000000 fp_engine.text FARTGTF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001687 00000000 fp_engine.text ARTLTF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001687 00000000 fp_engine.text FARTLTF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001689 00000000 fp_engine.text ARTCMPEF32	(runtime 56800E smm.lib artcmpf32.o    )
  0000168B 00000000 fp_engine.text ARTCMPF32	(runtime 56800E smm.lib artcmpf32.o    )
  00001748 000000A3 fp_engine.text fp_engine.text	(runtime 56800E smm.lib artdivf32uz.o  )
  00001759 00000000 fp_engine.text ARTDIVF32UZ	(runtime 56800E smm.lib artdivf32uz.o  )
  000017EB 00000000 fp_engine.text ARTF32_TO_S32U	(runtime 56800E smm.lib artfconv.o     )
  000017EB 00000117 fp_engine.text fp_engine.text	(runtime 56800E smm.lib artfconv.o     )
  000017ED 00000000 fp_engine.text ARTF32_TO_U32U	(runtime 56800E smm.lib artfconv.o     )
  000017EF 00000000 fp_engine.text ARTF32_TO_U16U	(runtime 56800E smm.lib artfconv.o     )
  000017F1 00000000 fp_engine.text ARTF32_TO_S16U	(runtime 56800E smm.lib artfconv.o     )
  00001902 00000000 fp_engine.text ARTMPYF32U	(runtime 56800E smm.lib artmpyf32u.o   )
  00001902 0000006E fp_engine.text fp_engine.text	(runtime 56800E smm.lib artmpyf32u.o   )
  00001970 00000041 fp_engine.text fp_engine.text	(runtime 56800E smm.lib artwconv.o     )
  00001970 00000000 fp_engine.text ARTU16_TO_F32	(runtime 56800E smm.lib artwconv.o     )
  00001973 00000000 fp_engine.text ARTU32_TO_F32	(runtime 56800E smm.lib artwconv.o     )
  00001980 00000000 fp_engine.text ARTS16_TO_F32	(runtime 56800E smm.lib artwconv.o     )
  00001983 00000000 fp_engine.text ARTS32_TO_F32	(runtime 56800E smm.lib artwconv.o     )
  000019B1 00000000 fp_engine.text ARTf_coerce	(runtime 56800E smm.lib fcoerce.o      )
  000019B1 000000A7 fp_engine.text fp_engine.text	(runtime 56800E smm.lib fcoerce.o      )
  00001A58 00000032 fp_engine.text fp_engine.text	(runtime 56800E smm.lib result_is.o    )
  00001A58 00000000 fp_engine.text ARTf_result_is_zero	(runtime 56800E smm.lib result_is.o    )
  00001A60 00000000 fp_engine.text ARTf_result_is_INF	(runtime 56800E smm.lib result_is.o    )
  00001A69 00000000 fp_engine.text ARTf_y_is_NaN	(runtime 56800E smm.lib result_is.o    )
  00001A6D 00000000 fp_engine.text ARTf_result_is_Invalid	(runtime 56800E smm.lib result_is.o    )
  00001A79 00000000 fp_engine.text ARTf_x_and_y_are_NaN	(runtime 56800E smm.lib result_is.o    )
  00001A7F 00000000 fp_engine.text ARTf_x_is_NaN	(runtime 56800E smm.lib result_is.o    )
  00001A8A 00000000 fp_engine.text ARTf_unpack2z	(runtime 56800E smm.lib utilities.o    )
  00001A8A 0000003F fp_engine.text fp_engine.text	(runtime 56800E smm.lib utilities.o    )
  00001A8B 00000000 fp_engine.text ARTf_unpack2	(runtime 56800E smm.lib utilities.o    )
  00001A9D 00000000 fp_engine.text ARTf_unpackA	(runtime 56800E smm.lib utilities.o    )
#>00001AC9          F_Pcode_end_addr (linker command file)
#>00001ACA          __pROM_data_start (linker command file)

# .data_in_p_flash_ROM
#>00000001          __xRAM_data_start (linker command file)
  00000001 00000000 fp_state.data FPE_state	(runtime 56800E smm.lib fp56800e.o     )
  00000001 00000001 fp_state.data fp_state.data	(runtime 56800E smm.lib fp56800e.o     )
  00000002 00000002 .data   Fd	(Events_c.obj)
  00000004 00000002 .data   FD	(Events_c.obj)
  00000006 00000002 .data   FnSet	(Events_c.obj)
  00000008 00000006 .data   Fspeed	(Events_c.obj)
#>0000000E          __xRAM_data_end (linker command file)
#>0000000D          __data_size (linker command file)

# .ApplicationData
#>00000010          F_Xbss_start_addr (linker command file)
#>00000010          _START_BSS (linker command file)
  00000010 00000001 .bss    Fpcm_pRQueueWP	(freemaster_serial_c.obj)
  00000011 00000001 .bss    Fpcm_pRQueueRP	(freemaster_serial_c.obj)
  00000012 00000010 .bss    Fpcm_pRQueueBuffer	(freemaster_serial_c.obj)
  00000022 00000001 .bss    Fpcm_nRxCheckSum	(freemaster_serial_c.obj)
  00000023 00000001 .bss    Fpcm_pRxBuff	(freemaster_serial_c.obj)
  00000024 00000001 .bss    Fpcm_pTxBuff	(freemaster_serial_c.obj)
  00000025 00000001 .bss    Fpcm_nRxTodo	(freemaster_serial_c.obj)
  00000026 00000001 .bss    Fpcm_nTxTodo	(freemaster_serial_c.obj)
  00000027 00000001 .bss    Fpcm_wFlags	(freemaster_serial_c.obj)
  00000028 00000009 .bss    Fpcm_pCommBuffer	(freemaster_serial_c.obj)
  00000031 00000001 .bss    Fpcm_bUseExAddr	(freemaster_56F8xxx_c.obj)
  00000032 00000001 .bss    FCmpVal	(TI2_c.obj)
  00000033 00000001 .bss    FCmpVal	(TI1_c.obj)
  00000034 00000001 .bss    FEnUser	(TI1_c.obj)
  00000035 00000001 .bss    FSR_lock	(Cpu_c.obj)
  00000036 00000001 .bss    FSR_reg	(Cpu_c.obj)
  00000037 00000001 .bss    FEnUser	(Cap3_c.obj)
  00000038 00000001 .bss    FCntrState	(Cap2_c.obj)
  00000039 00000001 .bss    FCntrState	(Cap1_c.obj)
  0000003A 00000001 .bss    FEnUser	(Cap1_c.obj)
  0000003B 00000001 .bss    Foverflowtime	(Events_c.obj)
  0000003C 00000001 .bss    Ftime	(Events_c.obj)
  0000003D 00000001 .bss    FspeedCount	(Events_c.obj)
  0000003E 00000010 .bss    FPID	(Events_c.obj)
  0000004E 00000004 .bss    FnRecord	(Events_c.obj)
  00000052 00000002 .bss    FT	(Events_c.obj)
  00000054 00000002 .bss    Fn	(Events_c.obj)
  00000056 00000003 .bss    Fcount	(Events_c.obj)
  00000059 00000001 .bss    Findex	(Events_c.obj)
  0000005A 00000001 .bss    Frreaderhelper	(Events_c.obj)
  0000005B 00000001 .bss    FC6	(Events_c.obj)
  0000005C 00000001 .bss    FC4	(Events_c.obj)
  0000005D 00000001 .bss    FC3	(Events_c.obj)
  0000005E 00000001 .bss    Ff	(Events_c.obj)
  0000005F 00000001 .bss    Fa	(Events_c.obj)
#>00000060          _END_BSS (linker command file)
#>00000050          F_Xbss_length (linker command file)
#>00000060          _HEAP_ADDR (linker command file)
#>00000100          _HEAP_SIZE (linker command file)
#>00000160          _HEAP_END (linker command file)
#>00000200          _min_stack_size (linker command file)
#>00000160          _stack_addr (linker command file)
#>00000360          _stack_end (linker command file)
#>00000060          F_heap_addr (linker command file)
#>00000160          F_heap_end (linker command file)
#>00000160          F_Lstack_addr (linker command file)
#>00000160          F_StackAddr (linker command file)
#>0000035F          F_StackEndAddr (linker command file)
#>0000000D          F_Ldata_size (linker command file)
#>00000001          F_Ldata_RAM_addr (linker command file)
#>00001ACA          F_Ldata_ROM_addr (linker command file)
#>00000000          F_Livt_size (linker command file)
#>00000000          F_Livt_RAM_addr (linker command file)
#>00000000          F_Livt_ROM_addr (linker command file)
#>00000000          F_xROM_to_xRAM (linker command file)
#>00000001          F_pROM_to_xRAM (linker command file)
#>00000000          F_pROM_to_pRAM (linker command file)
#>00000010          F_start_bss (linker command file)
#>00000060          F_end_bss (linker command file)
#>00000360          __DATA_END (linker command file)
#>0000F000          FArchIO (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  0000F000 0000F000 00000000            .x_Peripherals
  00000000 00000000 00000004 .interrupt_vectorsboot .p_Interruptsboot
  00000000 00000000 00000086 .interrupt_vectors .p_Interrupts
  00000086 00000086 00001A44 .ApplicationCode .p_Code
  00000001 00000001 0000035F .ApplicationData .x_Data
  00001ACA 00000001 0000000D .data_in_p_flash_ROM .p_flash_ROM_data
  00008000 00008000 00001000            .p_internal_RAM

# Link start time: Mon May 31 17:30:36 2021
# Link end time: Mon May 31 17:30:36 2021
