/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : IO_Map.h
**     Project     : exp-the-motor
**     Processor   : MC56F8257
**     Component   : IO_Map
**     Version     : Driver 01.00
**     Compiler    : CodeWarrior DSP C Compiler
**     Date/Time   : 2021-03-22, 15:42, # CodeGen: 0
**     Abstract    :
**         IO_Map.h - implements an IO device's mapping. 
**         This module contains symbol definitions of all peripheral 
**         registers and bits. 
**     Settings    :
**
**     Contents    :
**         No public methods
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file IO_Map.h
** @version 01.00
** @brief
**         IO_Map.h - implements an IO device's mapping. 
**         This module contains symbol definitions of all peripheral 
**         registers and bits. 
*/         
/*!
**  @addtogroup IO_Map_module IO_Map module documentation
**  @{
*/         

#ifndef __IO_Map_H
#define __IO_Map_H

/*lint -save  -e621 Disable MISRA rule (1.4) checking. */

/* Based on CPU DB 56F8257, version 3.00.239 (RegistersPrg V2.33) */
/* DataSheet : MC56F824x/5xPB Rev. 1.0.0, 09/2008; MC56F82XXRM Rev. 0 Draft A 11/2008 */

#include "PE_Types.h"

/******************************************
*** Peripheral TMRA0
*******************************************/
typedef volatile struct {
  /*** TMRA0_COMP1 - Timer A Channel 0 Compare Register #1; 0x0000F000 ***/
  union {
    word Word;
  } TMRA0_COMP1_STR;
  
  #define TMRA0_COMP1                   (*((volatile word *)0x0000F000))


  /*** TMRA0_COMP2 - Timer A Channel 0 Compare Register #2; 0x0000F001 ***/
  union {
    word Word;
  } TMRA0_COMP2_STR;
  
  #define TMRA0_COMP2                   (*((volatile word *)0x0000F001))


  /*** TMRA0_CAPT - Timer A Channel 0 Capture Register; 0x0000F002 ***/
  union {
    word Word;
  } TMRA0_CAPT_STR;
  
  #define TMRA0_CAPT                    (*((volatile word *)0x0000F002))


  /*** TMRA0_LOAD - Timer A Channel 0 Load Register; 0x0000F003 ***/
  union {
    word Word;
  } TMRA0_LOAD_STR;
  
  #define TMRA0_LOAD_LOAD0_MASK         0x01U
  #define TMRA0_LOAD_LOAD1_MASK         0x02U
  #define TMRA0_LOAD_LOAD2_MASK         0x04U
  #define TMRA0_LOAD_LOAD3_MASK         0x08U
  #define TMRA0_LOAD_LOAD4_MASK         0x10U
  #define TMRA0_LOAD_LOAD5_MASK         0x20U
  #define TMRA0_LOAD_LOAD6_MASK         0x40U
  #define TMRA0_LOAD_LOAD7_MASK         0x80U
  #define TMRA0_LOAD_LOAD8_MASK         0x0100U
  #define TMRA0_LOAD_LOAD9_MASK         0x0200U
  #define TMRA0_LOAD_LOAD10_MASK        0x0400U
  #define TMRA0_LOAD_LOAD11_MASK        0x0800U
  #define TMRA0_LOAD_LOAD12_MASK        0x1000U
  #define TMRA0_LOAD_LOAD13_MASK        0x2000U
  #define TMRA0_LOAD_LOAD14_MASK        0x4000U
  #define TMRA0_LOAD_LOAD15_MASK        0x8000U
  #define TMRA0_LOAD                    (*((volatile word *)0x0000F003))


  /*** TMRA0_HOLD - Timer A Channel 0 Hold Register; 0x0000F004 ***/
  union {
    word Word;
  } TMRA0_HOLD_STR;
  
  #define TMRA0_HOLD_HOLD0_MASK         0x01U
  #define TMRA0_HOLD_HOLD1_MASK         0x02U
  #define TMRA0_HOLD_HOLD2_MASK         0x04U
  #define TMRA0_HOLD_HOLD3_MASK         0x08U
  #define TMRA0_HOLD_HOLD4_MASK         0x10U
  #define TMRA0_HOLD_HOLD5_MASK         0x20U
  #define TMRA0_HOLD_HOLD6_MASK         0x40U
  #define TMRA0_HOLD_HOLD7_MASK         0x80U
  #define TMRA0_HOLD_HOLD8_MASK         0x0100U
  #define TMRA0_HOLD_HOLD9_MASK         0x0200U
  #define TMRA0_HOLD_HOLD10_MASK        0x0400U
  #define TMRA0_HOLD_HOLD11_MASK        0x0800U
  #define TMRA0_HOLD_HOLD12_MASK        0x1000U
  #define TMRA0_HOLD_HOLD13_MASK        0x2000U
  #define TMRA0_HOLD_HOLD14_MASK        0x4000U
  #define TMRA0_HOLD_HOLD15_MASK        0x8000U
  #define TMRA0_HOLD                    (*((volatile word *)0x0000F004))


  /*** TMRA0_CNTR - Timer A Channel 0 Counter Register; 0x0000F005 ***/
  union {
    word Word;
  } TMRA0_CNTR_STR;
  
  #define TMRA0_CNTR                    (*((volatile word *)0x0000F005))


  /*** TMRA0_CTRL - Timer A Channel 0 Control Register; 0x0000F006 ***/
  union {
    word Word;
  } TMRA0_CTRL_STR;
  
  #define TMRA0_CTRL_OM0_MASK           0x01U
  #define TMRA0_CTRL_OM1_MASK           0x02U
  #define TMRA0_CTRL_OM2_MASK           0x04U
  #define TMRA0_CTRL_Co_INIT_MASK       0x08U
  #define TMRA0_CTRL_DIR_MASK           0x10U
  #define TMRA0_CTRL_LENGTH_MASK        0x20U
  #define TMRA0_CTRL_ONCE_MASK          0x40U
  #define TMRA0_CTRL_SCS0_MASK          0x80U
  #define TMRA0_CTRL_SCS1_MASK          0x0100U
  #define TMRA0_CTRL_PCS0_MASK          0x0200U
  #define TMRA0_CTRL_PCS1_MASK          0x0400U
  #define TMRA0_CTRL_PCS2_MASK          0x0800U
  #define TMRA0_CTRL_PCS3_MASK          0x1000U
  #define TMRA0_CTRL_CM0_MASK           0x2000U
  #define TMRA0_CTRL_CM1_MASK           0x4000U
  #define TMRA0_CTRL_CM2_MASK           0x8000U
  #define TMRA0_CTRL_OM_MASK            0x07U
  #define TMRA0_CTRL_OM_BITNUM          0x00U
  #define TMRA0_CTRL_SCS_MASK           0x0180U
  #define TMRA0_CTRL_SCS_BITNUM         0x07U
  #define TMRA0_CTRL_PCS_MASK           0x1E00U
  #define TMRA0_CTRL_PCS_BITNUM         0x09U
  #define TMRA0_CTRL_CM_MASK            0xE000U
  #define TMRA0_CTRL_CM_BITNUM          0x0DU
  #define TMRA0_CTRL                    (*((volatile word *)0x0000F006))


  /*** TMRA0_SCTRL - Timer A Channel 0 Status and Control Register; 0x0000F007 ***/
  union {
    word Word;
  } TMRA0_SCTRL_STR;
  
  #define TMRA0_SCTRL_OEN_MASK          0x01U
  #define TMRA0_SCTRL_OPS_MASK          0x02U
  #define TMRA0_SCTRL_FORCE_MASK        0x04U
  #define TMRA0_SCTRL_VAL_MASK          0x08U
  #define TMRA0_SCTRL_EEOF_MASK         0x10U
  #define TMRA0_SCTRL_MSTR_MASK         0x20U
  #define TMRA0_SCTRL_CAPTURE_MODE0_MASK 0x40U
  #define TMRA0_SCTRL_CAPTURE_MODE1_MASK 0x80U
  #define TMRA0_SCTRL_INPUT_MASK        0x0100U
  #define TMRA0_SCTRL_IPS_MASK          0x0200U
  #define TMRA0_SCTRL_IEFIE_MASK        0x0400U
  #define TMRA0_SCTRL_IEF_MASK          0x0800U
  #define TMRA0_SCTRL_TOFIE_MASK        0x1000U
  #define TMRA0_SCTRL_TOF_MASK          0x2000U
  #define TMRA0_SCTRL_TCFIE_MASK        0x4000U
  #define TMRA0_SCTRL_TCF_MASK          0x8000U
  #define TMRA0_SCTRL_CAPTURE_MODE_MASK 0xC0U
  #define TMRA0_SCTRL_CAPTURE_MODE_BITNUM 0x06U
  #define TMRA0_SCTRL                   (*((volatile word *)0x0000F007))


  /*** TMRA0_CMPLD1 - Timer A Channel 0 Comparator Load Register 1; 0x0000F008 ***/
  union {
    word Word;
  } TMRA0_CMPLD1_STR;
  
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRA0_CMPLD1                  (*((volatile word *)0x0000F008))


  /*** TMRA0_CMPLD2 - Timer A Channel 0 Comparator Load Register 2; 0x0000F009 ***/
  union {
    word Word;
  } TMRA0_CMPLD2_STR;
  
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRA0_CMPLD2                  (*((volatile word *)0x0000F009))


  /*** TMRA0_CSCTRL - Timer A Channel 0 Comparator Status and Control Register; 0x0000F00A ***/
  union {
    word Word;
  } TMRA0_CSCTRL_STR;
  
  #define TMRA0_CSCTRL_CL10_MASK        0x01U
  #define TMRA0_CSCTRL_CL11_MASK        0x02U
  #define TMRA0_CSCTRL_CL20_MASK        0x04U
  #define TMRA0_CSCTRL_CL21_MASK        0x08U
  #define TMRA0_CSCTRL_TCF1_MASK        0x10U
  #define TMRA0_CSCTRL_TCF2_MASK        0x20U
  #define TMRA0_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRA0_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRA0_CSCTRL_UP_MASK          0x0200U
  #define TMRA0_CSCTRL_TCI_MASK         0x0400U
  #define TMRA0_CSCTRL_ROC_MASK         0x0800U
  #define TMRA0_CSCTRL_ALT_LOAD_MASK    0x1000U
  #define TMRA0_CSCTRL_FAULT_MASK       0x2000U
  #define TMRA0_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRA0_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRA0_CSCTRL_CL1_MASK         0x03U
  #define TMRA0_CSCTRL_CL1_BITNUM       0x00U
  #define TMRA0_CSCTRL_CL2_MASK         0x0CU
  #define TMRA0_CSCTRL_CL2_BITNUM       0x02U
  #define TMRA0_CSCTRL_TCF_1_MASK       0x30U
  #define TMRA0_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRA0_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRA0_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRA0_CSCTRL                  (*((volatile word *)0x0000F00A))


  /*** TMRA0_FILT - Timer A Channel 0 Input Filter Register; 0x0000F00B ***/
  union {
    word Word;
  } TMRA0_FILT_STR;
  
  #define TMRA0_FILT_FILT_PER0_MASK     0x01U
  #define TMRA0_FILT_FILT_PER1_MASK     0x02U
  #define TMRA0_FILT_FILT_PER2_MASK     0x04U
  #define TMRA0_FILT_FILT_PER3_MASK     0x08U
  #define TMRA0_FILT_FILT_PER4_MASK     0x10U
  #define TMRA0_FILT_FILT_PER5_MASK     0x20U
  #define TMRA0_FILT_FILT_PER6_MASK     0x40U
  #define TMRA0_FILT_FILT_PER7_MASK     0x80U
  #define TMRA0_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRA0_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRA0_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRA0_FILT_FILT_PER_MASK      0xFFU
  #define TMRA0_FILT_FILT_PER_BITNUM    0x00U
  #define TMRA0_FILT_FILT_CNT_MASK      0x0700U
  #define TMRA0_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRA0_FILT                    (*((volatile word *)0x0000F00B))


  word Reserved0[3];                   /* Reserved (unused) registers */
  
  /*** TMRA_ENBL - Timer A Channel Enable Register; 0x0000F00F ***/
  union {
    word Word;
  } TMRA_ENBL_STR;
  
  #define TMRA_ENBL_ENBL0_MASK          0x01U
  #define TMRA_ENBL_ENBL1_MASK          0x02U
  #define TMRA_ENBL_ENBL2_MASK          0x04U
  #define TMRA_ENBL_ENBL3_MASK          0x08U
  #define TMRA_ENBL_ENBL_MASK           0x0FU
  #define TMRA_ENBL_ENBL_BITNUM         0x00U
  #define TMRA_ENBL                     (*((volatile word *)0x0000F00F))


} TMRA0_PRPH;

/******************************************
*** Peripheral TMRA1
*******************************************/
typedef volatile struct {
  /*** TMRA1_COMP1 - Timer A Channel 1 Compare Register #1; 0x0000F010 ***/
  union {
    word Word;
  } TMRA1_COMP1_STR;
  
  #define TMRA1_COMP1                   (*((volatile word *)0x0000F010))


  /*** TMRA1_COMP2 - Timer A Channel 1 Compare Register #2; 0x0000F011 ***/
  union {
    word Word;
  } TMRA1_COMP2_STR;
  
  #define TMRA1_COMP2                   (*((volatile word *)0x0000F011))


  /*** TMRA1_CAPT - Timer A Channel 1 Capture Register; 0x0000F012 ***/
  union {
    word Word;
  } TMRA1_CAPT_STR;
  
  #define TMRA1_CAPT                    (*((volatile word *)0x0000F012))


  /*** TMRA1_LOAD - Timer A Channel 1 Load Register; 0x0000F013 ***/
  union {
    word Word;
  } TMRA1_LOAD_STR;
  
  #define TMRA1_LOAD_LOAD0_MASK         0x01U
  #define TMRA1_LOAD_LOAD1_MASK         0x02U
  #define TMRA1_LOAD_LOAD2_MASK         0x04U
  #define TMRA1_LOAD_LOAD3_MASK         0x08U
  #define TMRA1_LOAD_LOAD4_MASK         0x10U
  #define TMRA1_LOAD_LOAD5_MASK         0x20U
  #define TMRA1_LOAD_LOAD6_MASK         0x40U
  #define TMRA1_LOAD_LOAD7_MASK         0x80U
  #define TMRA1_LOAD_LOAD8_MASK         0x0100U
  #define TMRA1_LOAD_LOAD9_MASK         0x0200U
  #define TMRA1_LOAD_LOAD10_MASK        0x0400U
  #define TMRA1_LOAD_LOAD11_MASK        0x0800U
  #define TMRA1_LOAD_LOAD12_MASK        0x1000U
  #define TMRA1_LOAD_LOAD13_MASK        0x2000U
  #define TMRA1_LOAD_LOAD14_MASK        0x4000U
  #define TMRA1_LOAD_LOAD15_MASK        0x8000U
  #define TMRA1_LOAD                    (*((volatile word *)0x0000F013))


  /*** TMRA1_HOLD - Timer A Channel 1 Hold Register; 0x0000F014 ***/
  union {
    word Word;
  } TMRA1_HOLD_STR;
  
  #define TMRA1_HOLD_HOLD0_MASK         0x01U
  #define TMRA1_HOLD_HOLD1_MASK         0x02U
  #define TMRA1_HOLD_HOLD2_MASK         0x04U
  #define TMRA1_HOLD_HOLD3_MASK         0x08U
  #define TMRA1_HOLD_HOLD4_MASK         0x10U
  #define TMRA1_HOLD_HOLD5_MASK         0x20U
  #define TMRA1_HOLD_HOLD6_MASK         0x40U
  #define TMRA1_HOLD_HOLD7_MASK         0x80U
  #define TMRA1_HOLD_HOLD8_MASK         0x0100U
  #define TMRA1_HOLD_HOLD9_MASK         0x0200U
  #define TMRA1_HOLD_HOLD10_MASK        0x0400U
  #define TMRA1_HOLD_HOLD11_MASK        0x0800U
  #define TMRA1_HOLD_HOLD12_MASK        0x1000U
  #define TMRA1_HOLD_HOLD13_MASK        0x2000U
  #define TMRA1_HOLD_HOLD14_MASK        0x4000U
  #define TMRA1_HOLD_HOLD15_MASK        0x8000U
  #define TMRA1_HOLD                    (*((volatile word *)0x0000F014))


  /*** TMRA1_CNTR - Timer A Channel 1 Counter Register; 0x0000F015 ***/
  union {
    word Word;
  } TMRA1_CNTR_STR;
  
  #define TMRA1_CNTR                    (*((volatile word *)0x0000F015))


  /*** TMRA1_CTRL - Timer A Channel 1 Control Register; 0x0000F016 ***/
  union {
    word Word;
  } TMRA1_CTRL_STR;
  
  #define TMRA1_CTRL_OM0_MASK           0x01U
  #define TMRA1_CTRL_OM1_MASK           0x02U
  #define TMRA1_CTRL_OM2_MASK           0x04U
  #define TMRA1_CTRL_Co_INIT_MASK       0x08U
  #define TMRA1_CTRL_DIR_MASK           0x10U
  #define TMRA1_CTRL_LENGTH_MASK        0x20U
  #define TMRA1_CTRL_ONCE_MASK          0x40U
  #define TMRA1_CTRL_SCS0_MASK          0x80U
  #define TMRA1_CTRL_SCS1_MASK          0x0100U
  #define TMRA1_CTRL_PCS0_MASK          0x0200U
  #define TMRA1_CTRL_PCS1_MASK          0x0400U
  #define TMRA1_CTRL_PCS2_MASK          0x0800U
  #define TMRA1_CTRL_PCS3_MASK          0x1000U
  #define TMRA1_CTRL_CM0_MASK           0x2000U
  #define TMRA1_CTRL_CM1_MASK           0x4000U
  #define TMRA1_CTRL_CM2_MASK           0x8000U
  #define TMRA1_CTRL_OM_MASK            0x07U
  #define TMRA1_CTRL_OM_BITNUM          0x00U
  #define TMRA1_CTRL_SCS_MASK           0x0180U
  #define TMRA1_CTRL_SCS_BITNUM         0x07U
  #define TMRA1_CTRL_PCS_MASK           0x1E00U
  #define TMRA1_CTRL_PCS_BITNUM         0x09U
  #define TMRA1_CTRL_CM_MASK            0xE000U
  #define TMRA1_CTRL_CM_BITNUM          0x0DU
  #define TMRA1_CTRL                    (*((volatile word *)0x0000F016))


  /*** TMRA1_SCTRL - Timer A Channel 1 Status and Control Register; 0x0000F017 ***/
  union {
    word Word;
  } TMRA1_SCTRL_STR;
  
  #define TMRA1_SCTRL_OEN_MASK          0x01U
  #define TMRA1_SCTRL_OPS_MASK          0x02U
  #define TMRA1_SCTRL_FORCE_MASK        0x04U
  #define TMRA1_SCTRL_VAL_MASK          0x08U
  #define TMRA1_SCTRL_EEOF_MASK         0x10U
  #define TMRA1_SCTRL_MSTR_MASK         0x20U
  #define TMRA1_SCTRL_CAPTURE_MODE0_MASK 0x40U
  #define TMRA1_SCTRL_CAPTURE_MODE1_MASK 0x80U
  #define TMRA1_SCTRL_INPUT_MASK        0x0100U
  #define TMRA1_SCTRL_IPS_MASK          0x0200U
  #define TMRA1_SCTRL_IEFIE_MASK        0x0400U
  #define TMRA1_SCTRL_IEF_MASK          0x0800U
  #define TMRA1_SCTRL_TOFIE_MASK        0x1000U
  #define TMRA1_SCTRL_TOF_MASK          0x2000U
  #define TMRA1_SCTRL_TCFIE_MASK        0x4000U
  #define TMRA1_SCTRL_TCF_MASK          0x8000U
  #define TMRA1_SCTRL_CAPTURE_MODE_MASK 0xC0U
  #define TMRA1_SCTRL_CAPTURE_MODE_BITNUM 0x06U
  #define TMRA1_SCTRL                   (*((volatile word *)0x0000F017))


  /*** TMRA1_CMPLD1 - Timer A Channel 1 Comparator Load Register 1; 0x0000F018 ***/
  union {
    word Word;
  } TMRA1_CMPLD1_STR;
  
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRA1_CMPLD1                  (*((volatile word *)0x0000F018))


  /*** TMRA1_CMPLD2 - Timer A Channel 1 Comparator Load Register 2; 0x0000F019 ***/
  union {
    word Word;
  } TMRA1_CMPLD2_STR;
  
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRA1_CMPLD2                  (*((volatile word *)0x0000F019))


  /*** TMRA1_CSCTRL - Timer A Channel 1 Comparator Status and Control Register; 0x0000F01A ***/
  union {
    word Word;
  } TMRA1_CSCTRL_STR;
  
  #define TMRA1_CSCTRL_CL10_MASK        0x01U
  #define TMRA1_CSCTRL_CL11_MASK        0x02U
  #define TMRA1_CSCTRL_CL20_MASK        0x04U
  #define TMRA1_CSCTRL_CL21_MASK        0x08U
  #define TMRA1_CSCTRL_TCF1_MASK        0x10U
  #define TMRA1_CSCTRL_TCF2_MASK        0x20U
  #define TMRA1_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRA1_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRA1_CSCTRL_UP_MASK          0x0200U
  #define TMRA1_CSCTRL_TCI_MASK         0x0400U
  #define TMRA1_CSCTRL_ROC_MASK         0x0800U
  #define TMRA1_CSCTRL_ALT_LOAD_MASK    0x1000U
  #define TMRA1_CSCTRL_FAULT_MASK       0x2000U
  #define TMRA1_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRA1_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRA1_CSCTRL_CL1_MASK         0x03U
  #define TMRA1_CSCTRL_CL1_BITNUM       0x00U
  #define TMRA1_CSCTRL_CL2_MASK         0x0CU
  #define TMRA1_CSCTRL_CL2_BITNUM       0x02U
  #define TMRA1_CSCTRL_TCF_1_MASK       0x30U
  #define TMRA1_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRA1_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRA1_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRA1_CSCTRL                  (*((volatile word *)0x0000F01A))


  /*** TMRA1_FILT - Timer A Channel 1 Input Filter Register; 0x0000F01B ***/
  union {
    word Word;
  } TMRA1_FILT_STR;
  
  #define TMRA1_FILT_FILT_PER0_MASK     0x01U
  #define TMRA1_FILT_FILT_PER1_MASK     0x02U
  #define TMRA1_FILT_FILT_PER2_MASK     0x04U
  #define TMRA1_FILT_FILT_PER3_MASK     0x08U
  #define TMRA1_FILT_FILT_PER4_MASK     0x10U
  #define TMRA1_FILT_FILT_PER5_MASK     0x20U
  #define TMRA1_FILT_FILT_PER6_MASK     0x40U
  #define TMRA1_FILT_FILT_PER7_MASK     0x80U
  #define TMRA1_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRA1_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRA1_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRA1_FILT_FILT_PER_MASK      0xFFU
  #define TMRA1_FILT_FILT_PER_BITNUM    0x00U
  #define TMRA1_FILT_FILT_CNT_MASK      0x0700U
  #define TMRA1_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRA1_FILT                    (*((volatile word *)0x0000F01B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRA1_PRPH;

/******************************************
*** Peripheral TMRA2
*******************************************/
typedef volatile struct {
  /*** TMRA2_COMP1 - Timer A Channel 2 Compare Register #1; 0x0000F020 ***/
  union {
    word Word;
  } TMRA2_COMP1_STR;
  
  #define TMRA2_COMP1                   (*((volatile word *)0x0000F020))


  /*** TMRA2_COMP2 - Timer A Channel 2 Compare Register #2; 0x0000F021 ***/
  union {
    word Word;
  } TMRA2_COMP2_STR;
  
  #define TMRA2_COMP2                   (*((volatile word *)0x0000F021))


  /*** TMRA2_CAPT - Timer A Channel 2 Capture Register; 0x0000F022 ***/
  union {
    word Word;
  } TMRA2_CAPT_STR;
  
  #define TMRA2_CAPT                    (*((volatile word *)0x0000F022))


  /*** TMRA2_LOAD - Timer A Channel 2 Load Register; 0x0000F023 ***/
  union {
    word Word;
  } TMRA2_LOAD_STR;
  
  #define TMRA2_LOAD_LOAD0_MASK         0x01U
  #define TMRA2_LOAD_LOAD1_MASK         0x02U
  #define TMRA2_LOAD_LOAD2_MASK         0x04U
  #define TMRA2_LOAD_LOAD3_MASK         0x08U
  #define TMRA2_LOAD_LOAD4_MASK         0x10U
  #define TMRA2_LOAD_LOAD5_MASK         0x20U
  #define TMRA2_LOAD_LOAD6_MASK         0x40U
  #define TMRA2_LOAD_LOAD7_MASK         0x80U
  #define TMRA2_LOAD_LOAD8_MASK         0x0100U
  #define TMRA2_LOAD_LOAD9_MASK         0x0200U
  #define TMRA2_LOAD_LOAD10_MASK        0x0400U
  #define TMRA2_LOAD_LOAD11_MASK        0x0800U
  #define TMRA2_LOAD_LOAD12_MASK        0x1000U
  #define TMRA2_LOAD_LOAD13_MASK        0x2000U
  #define TMRA2_LOAD_LOAD14_MASK        0x4000U
  #define TMRA2_LOAD_LOAD15_MASK        0x8000U
  #define TMRA2_LOAD                    (*((volatile word *)0x0000F023))


  /*** TMRA2_HOLD - Timer A Channel 2 Hold Register; 0x0000F024 ***/
  union {
    word Word;
  } TMRA2_HOLD_STR;
  
  #define TMRA2_HOLD_HOLD0_MASK         0x01U
  #define TMRA2_HOLD_HOLD1_MASK         0x02U
  #define TMRA2_HOLD_HOLD2_MASK         0x04U
  #define TMRA2_HOLD_HOLD3_MASK         0x08U
  #define TMRA2_HOLD_HOLD4_MASK         0x10U
  #define TMRA2_HOLD_HOLD5_MASK         0x20U
  #define TMRA2_HOLD_HOLD6_MASK         0x40U
  #define TMRA2_HOLD_HOLD7_MASK         0x80U
  #define TMRA2_HOLD_HOLD8_MASK         0x0100U
  #define TMRA2_HOLD_HOLD9_MASK         0x0200U
  #define TMRA2_HOLD_HOLD10_MASK        0x0400U
  #define TMRA2_HOLD_HOLD11_MASK        0x0800U
  #define TMRA2_HOLD_HOLD12_MASK        0x1000U
  #define TMRA2_HOLD_HOLD13_MASK        0x2000U
  #define TMRA2_HOLD_HOLD14_MASK        0x4000U
  #define TMRA2_HOLD_HOLD15_MASK        0x8000U
  #define TMRA2_HOLD                    (*((volatile word *)0x0000F024))


  /*** TMRA2_CNTR - Timer A Channel 2 Counter Register; 0x0000F025 ***/
  union {
    word Word;
  } TMRA2_CNTR_STR;
  
  #define TMRA2_CNTR                    (*((volatile word *)0x0000F025))


  /*** TMRA2_CTRL - Timer A Channel 2 Control Register; 0x0000F026 ***/
  union {
    word Word;
  } TMRA2_CTRL_STR;
  
  #define TMRA2_CTRL_OM0_MASK           0x01U
  #define TMRA2_CTRL_OM1_MASK           0x02U
  #define TMRA2_CTRL_OM2_MASK           0x04U
  #define TMRA2_CTRL_Co_INIT_MASK       0x08U
  #define TMRA2_CTRL_DIR_MASK           0x10U
  #define TMRA2_CTRL_LENGTH_MASK        0x20U
  #define TMRA2_CTRL_ONCE_MASK          0x40U
  #define TMRA2_CTRL_SCS0_MASK          0x80U
  #define TMRA2_CTRL_SCS1_MASK          0x0100U
  #define TMRA2_CTRL_PCS0_MASK          0x0200U
  #define TMRA2_CTRL_PCS1_MASK          0x0400U
  #define TMRA2_CTRL_PCS2_MASK          0x0800U
  #define TMRA2_CTRL_PCS3_MASK          0x1000U
  #define TMRA2_CTRL_CM0_MASK           0x2000U
  #define TMRA2_CTRL_CM1_MASK           0x4000U
  #define TMRA2_CTRL_CM2_MASK           0x8000U
  #define TMRA2_CTRL_OM_MASK            0x07U
  #define TMRA2_CTRL_OM_BITNUM          0x00U
  #define TMRA2_CTRL_SCS_MASK           0x0180U
  #define TMRA2_CTRL_SCS_BITNUM         0x07U
  #define TMRA2_CTRL_PCS_MASK           0x1E00U
  #define TMRA2_CTRL_PCS_BITNUM         0x09U
  #define TMRA2_CTRL_CM_MASK            0xE000U
  #define TMRA2_CTRL_CM_BITNUM          0x0DU
  #define TMRA2_CTRL                    (*((volatile word *)0x0000F026))


  /*** TMRA2_SCTRL - Timer A Channel 2 Status and Control Register; 0x0000F027 ***/
  union {
    word Word;
  } TMRA2_SCTRL_STR;
  
  #define TMRA2_SCTRL_OEN_MASK          0x01U
  #define TMRA2_SCTRL_OPS_MASK          0x02U
  #define TMRA2_SCTRL_FORCE_MASK        0x04U
  #define TMRA2_SCTRL_VAL_MASK          0x08U
  #define TMRA2_SCTRL_EEOF_MASK         0x10U
  #define TMRA2_SCTRL_MSTR_MASK         0x20U
  #define TMRA2_SCTRL_CAPTURE_MODE0_MASK 0x40U
  #define TMRA2_SCTRL_CAPTURE_MODE1_MASK 0x80U
  #define TMRA2_SCTRL_INPUT_MASK        0x0100U
  #define TMRA2_SCTRL_IPS_MASK          0x0200U
  #define TMRA2_SCTRL_IEFIE_MASK        0x0400U
  #define TMRA2_SCTRL_IEF_MASK          0x0800U
  #define TMRA2_SCTRL_TOFIE_MASK        0x1000U
  #define TMRA2_SCTRL_TOF_MASK          0x2000U
  #define TMRA2_SCTRL_TCFIE_MASK        0x4000U
  #define TMRA2_SCTRL_TCF_MASK          0x8000U
  #define TMRA2_SCTRL_CAPTURE_MODE_MASK 0xC0U
  #define TMRA2_SCTRL_CAPTURE_MODE_BITNUM 0x06U
  #define TMRA2_SCTRL                   (*((volatile word *)0x0000F027))


  /*** TMRA2_CMPLD1 - Timer A Channel 2 Comparator Load Register 1; 0x0000F028 ***/
  union {
    word Word;
  } TMRA2_CMPLD1_STR;
  
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRA2_CMPLD1                  (*((volatile word *)0x0000F028))


  /*** TMRA2_CMPLD2 - Timer A Channel 2 Comparator Load Register 2; 0x0000F029 ***/
  union {
    word Word;
  } TMRA2_CMPLD2_STR;
  
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRA2_CMPLD2                  (*((volatile word *)0x0000F029))


  /*** TMRA2_CSCTRL - Timer A Channel 2 Comparator Status and Control Register; 0x0000F02A ***/
  union {
    word Word;
  } TMRA2_CSCTRL_STR;
  
  #define TMRA2_CSCTRL_CL10_MASK        0x01U
  #define TMRA2_CSCTRL_CL11_MASK        0x02U
  #define TMRA2_CSCTRL_CL20_MASK        0x04U
  #define TMRA2_CSCTRL_CL21_MASK        0x08U
  #define TMRA2_CSCTRL_TCF1_MASK        0x10U
  #define TMRA2_CSCTRL_TCF2_MASK        0x20U
  #define TMRA2_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRA2_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRA2_CSCTRL_UP_MASK          0x0200U
  #define TMRA2_CSCTRL_TCI_MASK         0x0400U
  #define TMRA2_CSCTRL_ROC_MASK         0x0800U
  #define TMRA2_CSCTRL_ALT_LOAD_MASK    0x1000U
  #define TMRA2_CSCTRL_FAULT_MASK       0x2000U
  #define TMRA2_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRA2_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRA2_CSCTRL_CL1_MASK         0x03U
  #define TMRA2_CSCTRL_CL1_BITNUM       0x00U
  #define TMRA2_CSCTRL_CL2_MASK         0x0CU
  #define TMRA2_CSCTRL_CL2_BITNUM       0x02U
  #define TMRA2_CSCTRL_TCF_1_MASK       0x30U
  #define TMRA2_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRA2_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRA2_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRA2_CSCTRL                  (*((volatile word *)0x0000F02A))


  /*** TMRA2_FILT - Timer A Channel 2 Input Filter Register; 0x0000F02B ***/
  union {
    word Word;
  } TMRA2_FILT_STR;
  
  #define TMRA2_FILT_FILT_PER0_MASK     0x01U
  #define TMRA2_FILT_FILT_PER1_MASK     0x02U
  #define TMRA2_FILT_FILT_PER2_MASK     0x04U
  #define TMRA2_FILT_FILT_PER3_MASK     0x08U
  #define TMRA2_FILT_FILT_PER4_MASK     0x10U
  #define TMRA2_FILT_FILT_PER5_MASK     0x20U
  #define TMRA2_FILT_FILT_PER6_MASK     0x40U
  #define TMRA2_FILT_FILT_PER7_MASK     0x80U
  #define TMRA2_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRA2_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRA2_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRA2_FILT_FILT_PER_MASK      0xFFU
  #define TMRA2_FILT_FILT_PER_BITNUM    0x00U
  #define TMRA2_FILT_FILT_CNT_MASK      0x0700U
  #define TMRA2_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRA2_FILT                    (*((volatile word *)0x0000F02B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRA2_PRPH;

/******************************************
*** Peripheral TMRA3
*******************************************/
typedef volatile struct {
  /*** TMRA3_COMP1 - Timer A Channel 3 Compare Register #1; 0x0000F030 ***/
  union {
    word Word;
  } TMRA3_COMP1_STR;
  
  #define TMRA3_COMP1                   (*((volatile word *)0x0000F030))


  /*** TMRA3_COMP2 - Timer A Channel 3 Compare Register #2; 0x0000F031 ***/
  union {
    word Word;
  } TMRA3_COMP2_STR;
  
  #define TMRA3_COMP2                   (*((volatile word *)0x0000F031))


  /*** TMRA3_CAPT - Timer A Channel 3 Capture Register; 0x0000F032 ***/
  union {
    word Word;
  } TMRA3_CAPT_STR;
  
  #define TMRA3_CAPT                    (*((volatile word *)0x0000F032))


  /*** TMRA3_LOAD - Timer A Channel 3 Load Register; 0x0000F033 ***/
  union {
    word Word;
  } TMRA3_LOAD_STR;
  
  #define TMRA3_LOAD_LOAD0_MASK         0x01U
  #define TMRA3_LOAD_LOAD1_MASK         0x02U
  #define TMRA3_LOAD_LOAD2_MASK         0x04U
  #define TMRA3_LOAD_LOAD3_MASK         0x08U
  #define TMRA3_LOAD_LOAD4_MASK         0x10U
  #define TMRA3_LOAD_LOAD5_MASK         0x20U
  #define TMRA3_LOAD_LOAD6_MASK         0x40U
  #define TMRA3_LOAD_LOAD7_MASK         0x80U
  #define TMRA3_LOAD_LOAD8_MASK         0x0100U
  #define TMRA3_LOAD_LOAD9_MASK         0x0200U
  #define TMRA3_LOAD_LOAD10_MASK        0x0400U
  #define TMRA3_LOAD_LOAD11_MASK        0x0800U
  #define TMRA3_LOAD_LOAD12_MASK        0x1000U
  #define TMRA3_LOAD_LOAD13_MASK        0x2000U
  #define TMRA3_LOAD_LOAD14_MASK        0x4000U
  #define TMRA3_LOAD_LOAD15_MASK        0x8000U
  #define TMRA3_LOAD                    (*((volatile word *)0x0000F033))


  /*** TMRA3_HOLD - Timer A Channel 3 Hold Register; 0x0000F034 ***/
  union {
    word Word;
  } TMRA3_HOLD_STR;
  
  #define TMRA3_HOLD_HOLD0_MASK         0x01U
  #define TMRA3_HOLD_HOLD1_MASK         0x02U
  #define TMRA3_HOLD_HOLD2_MASK         0x04U
  #define TMRA3_HOLD_HOLD3_MASK         0x08U
  #define TMRA3_HOLD_HOLD4_MASK         0x10U
  #define TMRA3_HOLD_HOLD5_MASK         0x20U
  #define TMRA3_HOLD_HOLD6_MASK         0x40U
  #define TMRA3_HOLD_HOLD7_MASK         0x80U
  #define TMRA3_HOLD_HOLD8_MASK         0x0100U
  #define TMRA3_HOLD_HOLD9_MASK         0x0200U
  #define TMRA3_HOLD_HOLD10_MASK        0x0400U
  #define TMRA3_HOLD_HOLD11_MASK        0x0800U
  #define TMRA3_HOLD_HOLD12_MASK        0x1000U
  #define TMRA3_HOLD_HOLD13_MASK        0x2000U
  #define TMRA3_HOLD_HOLD14_MASK        0x4000U
  #define TMRA3_HOLD_HOLD15_MASK        0x8000U
  #define TMRA3_HOLD                    (*((volatile word *)0x0000F034))


  /*** TMRA3_CNTR - Timer A Channel 3 Counter Register; 0x0000F035 ***/
  union {
    word Word;
  } TMRA3_CNTR_STR;
  
  #define TMRA3_CNTR                    (*((volatile word *)0x0000F035))


  /*** TMRA3_CTRL - Timer A Channel 3 Control Register; 0x0000F036 ***/
  union {
    word Word;
  } TMRA3_CTRL_STR;
  
  #define TMRA3_CTRL_OM0_MASK           0x01U
  #define TMRA3_CTRL_OM1_MASK           0x02U
  #define TMRA3_CTRL_OM2_MASK           0x04U
  #define TMRA3_CTRL_Co_INIT_MASK       0x08U
  #define TMRA3_CTRL_DIR_MASK           0x10U
  #define TMRA3_CTRL_LENGTH_MASK        0x20U
  #define TMRA3_CTRL_ONCE_MASK          0x40U
  #define TMRA3_CTRL_SCS0_MASK          0x80U
  #define TMRA3_CTRL_SCS1_MASK          0x0100U
  #define TMRA3_CTRL_PCS0_MASK          0x0200U
  #define TMRA3_CTRL_PCS1_MASK          0x0400U
  #define TMRA3_CTRL_PCS2_MASK          0x0800U
  #define TMRA3_CTRL_PCS3_MASK          0x1000U
  #define TMRA3_CTRL_CM0_MASK           0x2000U
  #define TMRA3_CTRL_CM1_MASK           0x4000U
  #define TMRA3_CTRL_CM2_MASK           0x8000U
  #define TMRA3_CTRL_OM_MASK            0x07U
  #define TMRA3_CTRL_OM_BITNUM          0x00U
  #define TMRA3_CTRL_SCS_MASK           0x0180U
  #define TMRA3_CTRL_SCS_BITNUM         0x07U
  #define TMRA3_CTRL_PCS_MASK           0x1E00U
  #define TMRA3_CTRL_PCS_BITNUM         0x09U
  #define TMRA3_CTRL_CM_MASK            0xE000U
  #define TMRA3_CTRL_CM_BITNUM          0x0DU
  #define TMRA3_CTRL                    (*((volatile word *)0x0000F036))


  /*** TMRA3_SCTRL - Timer A Channel 3 Status and Control Register; 0x0000F037 ***/
  union {
    word Word;
  } TMRA3_SCTRL_STR;
  
  #define TMRA3_SCTRL_OEN_MASK          0x01U
  #define TMRA3_SCTRL_OPS_MASK          0x02U
  #define TMRA3_SCTRL_FORCE_MASK        0x04U
  #define TMRA3_SCTRL_VAL_MASK          0x08U
  #define TMRA3_SCTRL_EEOF_MASK         0x10U
  #define TMRA3_SCTRL_MSTR_MASK         0x20U
  #define TMRA3_SCTRL_CAPTURE_MODE0_MASK 0x40U
  #define TMRA3_SCTRL_CAPTURE_MODE1_MASK 0x80U
  #define TMRA3_SCTRL_INPUT_MASK        0x0100U
  #define TMRA3_SCTRL_IPS_MASK          0x0200U
  #define TMRA3_SCTRL_IEFIE_MASK        0x0400U
  #define TMRA3_SCTRL_IEF_MASK          0x0800U
  #define TMRA3_SCTRL_TOFIE_MASK        0x1000U
  #define TMRA3_SCTRL_TOF_MASK          0x2000U
  #define TMRA3_SCTRL_TCFIE_MASK        0x4000U
  #define TMRA3_SCTRL_TCF_MASK          0x8000U
  #define TMRA3_SCTRL_CAPTURE_MODE_MASK 0xC0U
  #define TMRA3_SCTRL_CAPTURE_MODE_BITNUM 0x06U
  #define TMRA3_SCTRL                   (*((volatile word *)0x0000F037))


  /*** TMRA3_CMPLD1 - Timer A Channel 3 Comparator Load Register 1; 0x0000F038 ***/
  union {
    word Word;
  } TMRA3_CMPLD1_STR;
  
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRA3_CMPLD1                  (*((volatile word *)0x0000F038))


  /*** TMRA3_CMPLD2 - Timer A Channel 3 Comparator Load Register 2; 0x0000F039 ***/
  union {
    word Word;
  } TMRA3_CMPLD2_STR;
  
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRA3_CMPLD2                  (*((volatile word *)0x0000F039))


  /*** TMRA3_CSCTRL - Timer A Channel 3 Comparator Status and Control Register; 0x0000F03A ***/
  union {
    word Word;
  } TMRA3_CSCTRL_STR;
  
  #define TMRA3_CSCTRL_CL10_MASK        0x01U
  #define TMRA3_CSCTRL_CL11_MASK        0x02U
  #define TMRA3_CSCTRL_CL20_MASK        0x04U
  #define TMRA3_CSCTRL_CL21_MASK        0x08U
  #define TMRA3_CSCTRL_TCF1_MASK        0x10U
  #define TMRA3_CSCTRL_TCF2_MASK        0x20U
  #define TMRA3_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRA3_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRA3_CSCTRL_UP_MASK          0x0200U
  #define TMRA3_CSCTRL_TCI_MASK         0x0400U
  #define TMRA3_CSCTRL_ROC_MASK         0x0800U
  #define TMRA3_CSCTRL_ALT_LOAD_MASK    0x1000U
  #define TMRA3_CSCTRL_FAULT_MASK       0x2000U
  #define TMRA3_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRA3_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRA3_CSCTRL_CL1_MASK         0x03U
  #define TMRA3_CSCTRL_CL1_BITNUM       0x00U
  #define TMRA3_CSCTRL_CL2_MASK         0x0CU
  #define TMRA3_CSCTRL_CL2_BITNUM       0x02U
  #define TMRA3_CSCTRL_TCF_1_MASK       0x30U
  #define TMRA3_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRA3_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRA3_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRA3_CSCTRL                  (*((volatile word *)0x0000F03A))


  /*** TMRA3_FILT - Timer A Channel 3 Input Filter Register; 0x0000F03B ***/
  union {
    word Word;
  } TMRA3_FILT_STR;
  
  #define TMRA3_FILT_FILT_PER0_MASK     0x01U
  #define TMRA3_FILT_FILT_PER1_MASK     0x02U
  #define TMRA3_FILT_FILT_PER2_MASK     0x04U
  #define TMRA3_FILT_FILT_PER3_MASK     0x08U
  #define TMRA3_FILT_FILT_PER4_MASK     0x10U
  #define TMRA3_FILT_FILT_PER5_MASK     0x20U
  #define TMRA3_FILT_FILT_PER6_MASK     0x40U
  #define TMRA3_FILT_FILT_PER7_MASK     0x80U
  #define TMRA3_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRA3_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRA3_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRA3_FILT_FILT_PER_MASK      0xFFU
  #define TMRA3_FILT_FILT_PER_BITNUM    0x00U
  #define TMRA3_FILT_FILT_CNT_MASK      0x0700U
  #define TMRA3_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRA3_FILT                    (*((volatile word *)0x0000F03B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRA3_PRPH;

/******************************************
*** Peripheral TMRB0
*******************************************/
typedef volatile struct {
  /*** TMRB0_COMP1 - Timer B Channel 0 Compare Register #1; 0x0000F040 ***/
  union {
    word Word;
  } TMRB0_COMP1_STR;
  
  #define TMRB0_COMP1                   (*((volatile word *)0x0000F040))


  /*** TMRB0_COMP2 - Timer B Channel 0 Compare Register #2; 0x0000F041 ***/
  union {
    word Word;
  } TMRB0_COMP2_STR;
  
  #define TMRB0_COMP2                   (*((volatile word *)0x0000F041))


  /*** TMRB0_CAPT - Timer B Channel 0 Capture Register; 0x0000F042 ***/
  union {
    word Word;
  } TMRB0_CAPT_STR;
  
  #define TMRB0_CAPT                    (*((volatile word *)0x0000F042))


  /*** TMRB0_LOAD - Timer B Channel 0 Load Register; 0x0000F043 ***/
  union {
    word Word;
  } TMRB0_LOAD_STR;
  
  #define TMRB0_LOAD_LOAD0_MASK         0x01U
  #define TMRB0_LOAD_LOAD1_MASK         0x02U
  #define TMRB0_LOAD_LOAD2_MASK         0x04U
  #define TMRB0_LOAD_LOAD3_MASK         0x08U
  #define TMRB0_LOAD_LOAD4_MASK         0x10U
  #define TMRB0_LOAD_LOAD5_MASK         0x20U
  #define TMRB0_LOAD_LOAD6_MASK         0x40U
  #define TMRB0_LOAD_LOAD7_MASK         0x80U
  #define TMRB0_LOAD_LOAD8_MASK         0x0100U
  #define TMRB0_LOAD_LOAD9_MASK         0x0200U
  #define TMRB0_LOAD_LOAD10_MASK        0x0400U
  #define TMRB0_LOAD_LOAD11_MASK        0x0800U
  #define TMRB0_LOAD_LOAD12_MASK        0x1000U
  #define TMRB0_LOAD_LOAD13_MASK        0x2000U
  #define TMRB0_LOAD_LOAD14_MASK        0x4000U
  #define TMRB0_LOAD_LOAD15_MASK        0x8000U
  #define TMRB0_LOAD                    (*((volatile word *)0x0000F043))


  /*** TMRB0_HOLD - Timer B Channel 0 Hold Register; 0x0000F044 ***/
  union {
    word Word;
  } TMRB0_HOLD_STR;
  
  #define TMRB0_HOLD_HOLD0_MASK         0x01U
  #define TMRB0_HOLD_HOLD1_MASK         0x02U
  #define TMRB0_HOLD_HOLD2_MASK         0x04U
  #define TMRB0_HOLD_HOLD3_MASK         0x08U
  #define TMRB0_HOLD_HOLD4_MASK         0x10U
  #define TMRB0_HOLD_HOLD5_MASK         0x20U
  #define TMRB0_HOLD_HOLD6_MASK         0x40U
  #define TMRB0_HOLD_HOLD7_MASK         0x80U
  #define TMRB0_HOLD_HOLD8_MASK         0x0100U
  #define TMRB0_HOLD_HOLD9_MASK         0x0200U
  #define TMRB0_HOLD_HOLD10_MASK        0x0400U
  #define TMRB0_HOLD_HOLD11_MASK        0x0800U
  #define TMRB0_HOLD_HOLD12_MASK        0x1000U
  #define TMRB0_HOLD_HOLD13_MASK        0x2000U
  #define TMRB0_HOLD_HOLD14_MASK        0x4000U
  #define TMRB0_HOLD_HOLD15_MASK        0x8000U
  #define TMRB0_HOLD                    (*((volatile word *)0x0000F044))


  /*** TMRB0_CNTR - Timer B Channel 0 Counter Register; 0x0000F045 ***/
  union {
    word Word;
  } TMRB0_CNTR_STR;
  
  #define TMRB0_CNTR                    (*((volatile word *)0x0000F045))


  /*** TMRB0_CTRL - Timer B Channel 0 Control Register; 0x0000F046 ***/
  union {
    word Word;
  } TMRB0_CTRL_STR;
  
  #define TMRB0_CTRL_OM0_MASK           0x01U
  #define TMRB0_CTRL_OM1_MASK           0x02U
  #define TMRB0_CTRL_OM2_MASK           0x04U
  #define TMRB0_CTRL_Co_INIT_MASK       0x08U
  #define TMRB0_CTRL_DIR_MASK           0x10U
  #define TMRB0_CTRL_LENGTH_MASK        0x20U
  #define TMRB0_CTRL_ONCE_MASK          0x40U
  #define TMRB0_CTRL_SCS0_MASK          0x80U
  #define TMRB0_CTRL_SCS1_MASK          0x0100U
  #define TMRB0_CTRL_PCS0_MASK          0x0200U
  #define TMRB0_CTRL_PCS1_MASK          0x0400U
  #define TMRB0_CTRL_PCS2_MASK          0x0800U
  #define TMRB0_CTRL_PCS3_MASK          0x1000U
  #define TMRB0_CTRL_CM0_MASK           0x2000U
  #define TMRB0_CTRL_CM1_MASK           0x4000U
  #define TMRB0_CTRL_CM2_MASK           0x8000U
  #define TMRB0_CTRL_OM_MASK            0x07U
  #define TMRB0_CTRL_OM_BITNUM          0x00U
  #define TMRB0_CTRL_SCS_MASK           0x0180U
  #define TMRB0_CTRL_SCS_BITNUM         0x07U
  #define TMRB0_CTRL_PCS_MASK           0x1E00U
  #define TMRB0_CTRL_PCS_BITNUM         0x09U
  #define TMRB0_CTRL_CM_MASK            0xE000U
  #define TMRB0_CTRL_CM_BITNUM          0x0DU
  #define TMRB0_CTRL                    (*((volatile word *)0x0000F046))


  /*** TMRB0_SCTRL - Timer B Channel 0 Status and Control Register; 0x0000F047 ***/
  union {
    word Word;
  } TMRB0_SCTRL_STR;
  
  #define TMRB0_SCTRL_OEN_MASK          0x01U
  #define TMRB0_SCTRL_OPS_MASK          0x02U
  #define TMRB0_SCTRL_FORCE_MASK        0x04U
  #define TMRB0_SCTRL_VAL_MASK          0x08U
  #define TMRB0_SCTRL_EEOF_MASK         0x10U
  #define TMRB0_SCTRL_MSTR_MASK         0x20U
  #define TMRB0_SCTRL_CAPTURE_MODE0_MASK 0x40U
  #define TMRB0_SCTRL_CAPTURE_MODE1_MASK 0x80U
  #define TMRB0_SCTRL_INPUT_MASK        0x0100U
  #define TMRB0_SCTRL_IPS_MASK          0x0200U
  #define TMRB0_SCTRL_IEFIE_MASK        0x0400U
  #define TMRB0_SCTRL_IEF_MASK          0x0800U
  #define TMRB0_SCTRL_TOFIE_MASK        0x1000U
  #define TMRB0_SCTRL_TOF_MASK          0x2000U
  #define TMRB0_SCTRL_TCFIE_MASK        0x4000U
  #define TMRB0_SCTRL_TCF_MASK          0x8000U
  #define TMRB0_SCTRL_CAPTURE_MODE_MASK 0xC0U
  #define TMRB0_SCTRL_CAPTURE_MODE_BITNUM 0x06U
  #define TMRB0_SCTRL                   (*((volatile word *)0x0000F047))


  /*** TMRB0_CMPLD1 - Timer B Channel 0 Comparator Load Register 1; 0x0000F048 ***/
  union {
    word Word;
  } TMRB0_CMPLD1_STR;
  
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRB0_CMPLD1                  (*((volatile word *)0x0000F048))


  /*** TMRB0_CMPLD2 - Timer B Channel 0 Comparator Load Register 2; 0x0000F049 ***/
  union {
    word Word;
  } TMRB0_CMPLD2_STR;
  
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRB0_CMPLD2                  (*((volatile word *)0x0000F049))


  /*** TMRB0_CSCTRL - Timer B Channel 0 Comparator Status and Control Register; 0x0000F04A ***/
  union {
    word Word;
  } TMRB0_CSCTRL_STR;
  
  #define TMRB0_CSCTRL_CL10_MASK        0x01U
  #define TMRB0_CSCTRL_CL11_MASK        0x02U
  #define TMRB0_CSCTRL_CL20_MASK        0x04U
  #define TMRB0_CSCTRL_CL21_MASK        0x08U
  #define TMRB0_CSCTRL_TCF1_MASK        0x10U
  #define TMRB0_CSCTRL_TCF2_MASK        0x20U
  #define TMRB0_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRB0_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRB0_CSCTRL_UP_MASK          0x0200U
  #define TMRB0_CSCTRL_TCI_MASK         0x0400U
  #define TMRB0_CSCTRL_ROC_MASK         0x0800U
  #define TMRB0_CSCTRL_ALT_LOAD_MASK    0x1000U
  #define TMRB0_CSCTRL_FAULT_MASK       0x2000U
  #define TMRB0_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRB0_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRB0_CSCTRL_CL1_MASK         0x03U
  #define TMRB0_CSCTRL_CL1_BITNUM       0x00U
  #define TMRB0_CSCTRL_CL2_MASK         0x0CU
  #define TMRB0_CSCTRL_CL2_BITNUM       0x02U
  #define TMRB0_CSCTRL_TCF_1_MASK       0x30U
  #define TMRB0_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRB0_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRB0_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRB0_CSCTRL                  (*((volatile word *)0x0000F04A))


  /*** TMRB0_FILT - Timer B Channel 0 Input Filter Register; 0x0000F04B ***/
  union {
    word Word;
  } TMRB0_FILT_STR;
  
  #define TMRB0_FILT_FILT_PER0_MASK     0x01U
  #define TMRB0_FILT_FILT_PER1_MASK     0x02U
  #define TMRB0_FILT_FILT_PER2_MASK     0x04U
  #define TMRB0_FILT_FILT_PER3_MASK     0x08U
  #define TMRB0_FILT_FILT_PER4_MASK     0x10U
  #define TMRB0_FILT_FILT_PER5_MASK     0x20U
  #define TMRB0_FILT_FILT_PER6_MASK     0x40U
  #define TMRB0_FILT_FILT_PER7_MASK     0x80U
  #define TMRB0_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRB0_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRB0_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRB0_FILT_FILT_PER_MASK      0xFFU
  #define TMRB0_FILT_FILT_PER_BITNUM    0x00U
  #define TMRB0_FILT_FILT_CNT_MASK      0x0700U
  #define TMRB0_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRB0_FILT                    (*((volatile word *)0x0000F04B))


  word Reserved0[3];                   /* Reserved (unused) registers */
  
  /*** TMRB_ENBL - Timer B Channel Enable Register; 0x0000F04F ***/
  union {
    word Word;
  } TMRB_ENBL_STR;
  
  #define TMRB_ENBL_ENBL0_MASK          0x01U
  #define TMRB_ENBL_ENBL1_MASK          0x02U
  #define TMRB_ENBL_ENBL2_MASK          0x04U
  #define TMRB_ENBL_ENBL3_MASK          0x08U
  #define TMRB_ENBL_ENBL_MASK           0x0FU
  #define TMRB_ENBL_ENBL_BITNUM         0x00U
  #define TMRB_ENBL                     (*((volatile word *)0x0000F04F))


} TMRB0_PRPH;

/******************************************
*** Peripheral TMRB1
*******************************************/
typedef volatile struct {
  /*** TMRB1_COMP1 - Timer B Channel 1 Compare Register #1; 0x0000F050 ***/
  union {
    word Word;
  } TMRB1_COMP1_STR;
  
  #define TMRB1_COMP1                   (*((volatile word *)0x0000F050))


  /*** TMRB1_COMP2 - Timer B Channel 1 Compare Register #2; 0x0000F051 ***/
  union {
    word Word;
  } TMRB1_COMP2_STR;
  
  #define TMRB1_COMP2                   (*((volatile word *)0x0000F051))


  /*** TMRB1_CAPT - Timer B Channel 1 Capture Register; 0x0000F052 ***/
  union {
    word Word;
  } TMRB1_CAPT_STR;
  
  #define TMRB1_CAPT                    (*((volatile word *)0x0000F052))


  /*** TMRB1_LOAD - Timer B Channel 1 Load Register; 0x0000F053 ***/
  union {
    word Word;
  } TMRB1_LOAD_STR;
  
  #define TMRB1_LOAD_LOAD0_MASK         0x01U
  #define TMRB1_LOAD_LOAD1_MASK         0x02U
  #define TMRB1_LOAD_LOAD2_MASK         0x04U
  #define TMRB1_LOAD_LOAD3_MASK         0x08U
  #define TMRB1_LOAD_LOAD4_MASK         0x10U
  #define TMRB1_LOAD_LOAD5_MASK         0x20U
  #define TMRB1_LOAD_LOAD6_MASK         0x40U
  #define TMRB1_LOAD_LOAD7_MASK         0x80U
  #define TMRB1_LOAD_LOAD8_MASK         0x0100U
  #define TMRB1_LOAD_LOAD9_MASK         0x0200U
  #define TMRB1_LOAD_LOAD10_MASK        0x0400U
  #define TMRB1_LOAD_LOAD11_MASK        0x0800U
  #define TMRB1_LOAD_LOAD12_MASK        0x1000U
  #define TMRB1_LOAD_LOAD13_MASK        0x2000U
  #define TMRB1_LOAD_LOAD14_MASK        0x4000U
  #define TMRB1_LOAD_LOAD15_MASK        0x8000U
  #define TMRB1_LOAD                    (*((volatile word *)0x0000F053))


  /*** TMRB1_HOLD - Timer B Channel 1 Hold Register; 0x0000F054 ***/
  union {
    word Word;
  } TMRB1_HOLD_STR;
  
  #define TMRB1_HOLD_HOLD0_MASK         0x01U
  #define TMRB1_HOLD_HOLD1_MASK         0x02U
  #define TMRB1_HOLD_HOLD2_MASK         0x04U
  #define TMRB1_HOLD_HOLD3_MASK         0x08U
  #define TMRB1_HOLD_HOLD4_MASK         0x10U
  #define TMRB1_HOLD_HOLD5_MASK         0x20U
  #define TMRB1_HOLD_HOLD6_MASK         0x40U
  #define TMRB1_HOLD_HOLD7_MASK         0x80U
  #define TMRB1_HOLD_HOLD8_MASK         0x0100U
  #define TMRB1_HOLD_HOLD9_MASK         0x0200U
  #define TMRB1_HOLD_HOLD10_MASK        0x0400U
  #define TMRB1_HOLD_HOLD11_MASK        0x0800U
  #define TMRB1_HOLD_HOLD12_MASK        0x1000U
  #define TMRB1_HOLD_HOLD13_MASK        0x2000U
  #define TMRB1_HOLD_HOLD14_MASK        0x4000U
  #define TMRB1_HOLD_HOLD15_MASK        0x8000U
  #define TMRB1_HOLD                    (*((volatile word *)0x0000F054))


  /*** TMRB1_CNTR - Timer B Channel 1 Counter Register; 0x0000F055 ***/
  union {
    word Word;
  } TMRB1_CNTR_STR;
  
  #define TMRB1_CNTR                    (*((volatile word *)0x0000F055))


  /*** TMRB1_CTRL - Timer B Channel 1 Control Register; 0x0000F056 ***/
  union {
    word Word;
  } TMRB1_CTRL_STR;
  
  #define TMRB1_CTRL_OM0_MASK           0x01U
  #define TMRB1_CTRL_OM1_MASK           0x02U
  #define TMRB1_CTRL_OM2_MASK           0x04U
  #define TMRB1_CTRL_Co_INIT_MASK       0x08U
  #define TMRB1_CTRL_DIR_MASK           0x10U
  #define TMRB1_CTRL_LENGTH_MASK        0x20U
  #define TMRB1_CTRL_ONCE_MASK          0x40U
  #define TMRB1_CTRL_SCS0_MASK          0x80U
  #define TMRB1_CTRL_SCS1_MASK          0x0100U
  #define TMRB1_CTRL_PCS0_MASK          0x0200U
  #define TMRB1_CTRL_PCS1_MASK          0x0400U
  #define TMRB1_CTRL_PCS2_MASK          0x0800U
  #define TMRB1_CTRL_PCS3_MASK          0x1000U
  #define TMRB1_CTRL_CM0_MASK           0x2000U
  #define TMRB1_CTRL_CM1_MASK           0x4000U
  #define TMRB1_CTRL_CM2_MASK           0x8000U
  #define TMRB1_CTRL_OM_MASK            0x07U
  #define TMRB1_CTRL_OM_BITNUM          0x00U
  #define TMRB1_CTRL_SCS_MASK           0x0180U
  #define TMRB1_CTRL_SCS_BITNUM         0x07U
  #define TMRB1_CTRL_PCS_MASK           0x1E00U
  #define TMRB1_CTRL_PCS_BITNUM         0x09U
  #define TMRB1_CTRL_CM_MASK            0xE000U
  #define TMRB1_CTRL_CM_BITNUM          0x0DU
  #define TMRB1_CTRL                    (*((volatile word *)0x0000F056))


  /*** TMRB1_SCTRL - Timer B Channel 1 Status and Control Register; 0x0000F057 ***/
  union {
    word Word;
  } TMRB1_SCTRL_STR;
  
  #define TMRB1_SCTRL_OEN_MASK          0x01U
  #define TMRB1_SCTRL_OPS_MASK          0x02U
  #define TMRB1_SCTRL_FORCE_MASK        0x04U
  #define TMRB1_SCTRL_VAL_MASK          0x08U
  #define TMRB1_SCTRL_EEOF_MASK         0x10U
  #define TMRB1_SCTRL_MSTR_MASK         0x20U
  #define TMRB1_SCTRL_CAPTURE_MODE0_MASK 0x40U
  #define TMRB1_SCTRL_CAPTURE_MODE1_MASK 0x80U
  #define TMRB1_SCTRL_INPUT_MASK        0x0100U
  #define TMRB1_SCTRL_IPS_MASK          0x0200U
  #define TMRB1_SCTRL_IEFIE_MASK        0x0400U
  #define TMRB1_SCTRL_IEF_MASK          0x0800U
  #define TMRB1_SCTRL_TOFIE_MASK        0x1000U
  #define TMRB1_SCTRL_TOF_MASK          0x2000U
  #define TMRB1_SCTRL_TCFIE_MASK        0x4000U
  #define TMRB1_SCTRL_TCF_MASK          0x8000U
  #define TMRB1_SCTRL_CAPTURE_MODE_MASK 0xC0U
  #define TMRB1_SCTRL_CAPTURE_MODE_BITNUM 0x06U
  #define TMRB1_SCTRL                   (*((volatile word *)0x0000F057))


  /*** TMRB1_CMPLD1 - Timer B Channel 1 Comparator Load Register 1; 0x0000F058 ***/
  union {
    word Word;
  } TMRB1_CMPLD1_STR;
  
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRB1_CMPLD1                  (*((volatile word *)0x0000F058))


  /*** TMRB1_CMPLD2 - Timer B Channel 1 Comparator Load Register 2; 0x0000F059 ***/
  union {
    word Word;
  } TMRB1_CMPLD2_STR;
  
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRB1_CMPLD2                  (*((volatile word *)0x0000F059))


  /*** TMRB1_CSCTRL - Timer B Channel 1 Comparator Status and Control Register; 0x0000F05A ***/
  union {
    word Word;
  } TMRB1_CSCTRL_STR;
  
  #define TMRB1_CSCTRL_CL10_MASK        0x01U
  #define TMRB1_CSCTRL_CL11_MASK        0x02U
  #define TMRB1_CSCTRL_CL20_MASK        0x04U
  #define TMRB1_CSCTRL_CL21_MASK        0x08U
  #define TMRB1_CSCTRL_TCF1_MASK        0x10U
  #define TMRB1_CSCTRL_TCF2_MASK        0x20U
  #define TMRB1_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRB1_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRB1_CSCTRL_UP_MASK          0x0200U
  #define TMRB1_CSCTRL_TCI_MASK         0x0400U
  #define TMRB1_CSCTRL_ROC_MASK         0x0800U
  #define TMRB1_CSCTRL_ALT_LOAD_MASK    0x1000U
  #define TMRB1_CSCTRL_FAULT_MASK       0x2000U
  #define TMRB1_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRB1_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRB1_CSCTRL_CL1_MASK         0x03U
  #define TMRB1_CSCTRL_CL1_BITNUM       0x00U
  #define TMRB1_CSCTRL_CL2_MASK         0x0CU
  #define TMRB1_CSCTRL_CL2_BITNUM       0x02U
  #define TMRB1_CSCTRL_TCF_1_MASK       0x30U
  #define TMRB1_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRB1_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRB1_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRB1_CSCTRL                  (*((volatile word *)0x0000F05A))


  /*** TMRB1_FILT - Timer B Channel 1 Input Filter Register; 0x0000F05B ***/
  union {
    word Word;
  } TMRB1_FILT_STR;
  
  #define TMRB1_FILT_FILT_PER0_MASK     0x01U
  #define TMRB1_FILT_FILT_PER1_MASK     0x02U
  #define TMRB1_FILT_FILT_PER2_MASK     0x04U
  #define TMRB1_FILT_FILT_PER3_MASK     0x08U
  #define TMRB1_FILT_FILT_PER4_MASK     0x10U
  #define TMRB1_FILT_FILT_PER5_MASK     0x20U
  #define TMRB1_FILT_FILT_PER6_MASK     0x40U
  #define TMRB1_FILT_FILT_PER7_MASK     0x80U
  #define TMRB1_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRB1_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRB1_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRB1_FILT_FILT_PER_MASK      0xFFU
  #define TMRB1_FILT_FILT_PER_BITNUM    0x00U
  #define TMRB1_FILT_FILT_CNT_MASK      0x0700U
  #define TMRB1_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRB1_FILT                    (*((volatile word *)0x0000F05B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRB1_PRPH;

/******************************************
*** Peripheral TMRB2
*******************************************/
typedef volatile struct {
  /*** TMRB2_COMP1 - Timer B Channel 2 Compare Register #1; 0x0000F060 ***/
  union {
    word Word;
  } TMRB2_COMP1_STR;
  
  #define TMRB2_COMP1                   (*((volatile word *)0x0000F060))


  /*** TMRB2_COMP2 - Timer B Channel 2 Compare Register #2; 0x0000F061 ***/
  union {
    word Word;
  } TMRB2_COMP2_STR;
  
  #define TMRB2_COMP2                   (*((volatile word *)0x0000F061))


  /*** TMRB2_CAPT - Timer B Channel 2 Capture Register; 0x0000F062 ***/
  union {
    word Word;
  } TMRB2_CAPT_STR;
  
  #define TMRB2_CAPT                    (*((volatile word *)0x0000F062))


  /*** TMRB2_LOAD - Timer B Channel 2 Load Register; 0x0000F063 ***/
  union {
    word Word;
  } TMRB2_LOAD_STR;
  
  #define TMRB2_LOAD_LOAD0_MASK         0x01U
  #define TMRB2_LOAD_LOAD1_MASK         0x02U
  #define TMRB2_LOAD_LOAD2_MASK         0x04U
  #define TMRB2_LOAD_LOAD3_MASK         0x08U
  #define TMRB2_LOAD_LOAD4_MASK         0x10U
  #define TMRB2_LOAD_LOAD5_MASK         0x20U
  #define TMRB2_LOAD_LOAD6_MASK         0x40U
  #define TMRB2_LOAD_LOAD7_MASK         0x80U
  #define TMRB2_LOAD_LOAD8_MASK         0x0100U
  #define TMRB2_LOAD_LOAD9_MASK         0x0200U
  #define TMRB2_LOAD_LOAD10_MASK        0x0400U
  #define TMRB2_LOAD_LOAD11_MASK        0x0800U
  #define TMRB2_LOAD_LOAD12_MASK        0x1000U
  #define TMRB2_LOAD_LOAD13_MASK        0x2000U
  #define TMRB2_LOAD_LOAD14_MASK        0x4000U
  #define TMRB2_LOAD_LOAD15_MASK        0x8000U
  #define TMRB2_LOAD                    (*((volatile word *)0x0000F063))


  /*** TMRB2_HOLD - Timer B Channel 2 Hold Register; 0x0000F064 ***/
  union {
    word Word;
  } TMRB2_HOLD_STR;
  
  #define TMRB2_HOLD_HOLD0_MASK         0x01U
  #define TMRB2_HOLD_HOLD1_MASK         0x02U
  #define TMRB2_HOLD_HOLD2_MASK         0x04U
  #define TMRB2_HOLD_HOLD3_MASK         0x08U
  #define TMRB2_HOLD_HOLD4_MASK         0x10U
  #define TMRB2_HOLD_HOLD5_MASK         0x20U
  #define TMRB2_HOLD_HOLD6_MASK         0x40U
  #define TMRB2_HOLD_HOLD7_MASK         0x80U
  #define TMRB2_HOLD_HOLD8_MASK         0x0100U
  #define TMRB2_HOLD_HOLD9_MASK         0x0200U
  #define TMRB2_HOLD_HOLD10_MASK        0x0400U
  #define TMRB2_HOLD_HOLD11_MASK        0x0800U
  #define TMRB2_HOLD_HOLD12_MASK        0x1000U
  #define TMRB2_HOLD_HOLD13_MASK        0x2000U
  #define TMRB2_HOLD_HOLD14_MASK        0x4000U
  #define TMRB2_HOLD_HOLD15_MASK        0x8000U
  #define TMRB2_HOLD                    (*((volatile word *)0x0000F064))


  /*** TMRB2_CNTR - Timer B Channel 2 Counter Register; 0x0000F065 ***/
  union {
    word Word;
  } TMRB2_CNTR_STR;
  
  #define TMRB2_CNTR                    (*((volatile word *)0x0000F065))


  /*** TMRB2_CTRL - Timer B Channel 2 Control Register; 0x0000F066 ***/
  union {
    word Word;
  } TMRB2_CTRL_STR;
  
  #define TMRB2_CTRL_OM0_MASK           0x01U
  #define TMRB2_CTRL_OM1_MASK           0x02U
  #define TMRB2_CTRL_OM2_MASK           0x04U
  #define TMRB2_CTRL_Co_INIT_MASK       0x08U
  #define TMRB2_CTRL_DIR_MASK           0x10U
  #define TMRB2_CTRL_LENGTH_MASK        0x20U
  #define TMRB2_CTRL_ONCE_MASK          0x40U
  #define TMRB2_CTRL_SCS0_MASK          0x80U
  #define TMRB2_CTRL_SCS1_MASK          0x0100U
  #define TMRB2_CTRL_PCS0_MASK          0x0200U
  #define TMRB2_CTRL_PCS1_MASK          0x0400U
  #define TMRB2_CTRL_PCS2_MASK          0x0800U
  #define TMRB2_CTRL_PCS3_MASK          0x1000U
  #define TMRB2_CTRL_CM0_MASK           0x2000U
  #define TMRB2_CTRL_CM1_MASK           0x4000U
  #define TMRB2_CTRL_CM2_MASK           0x8000U
  #define TMRB2_CTRL_OM_MASK            0x07U
  #define TMRB2_CTRL_OM_BITNUM          0x00U
  #define TMRB2_CTRL_SCS_MASK           0x0180U
  #define TMRB2_CTRL_SCS_BITNUM         0x07U
  #define TMRB2_CTRL_PCS_MASK           0x1E00U
  #define TMRB2_CTRL_PCS_BITNUM         0x09U
  #define TMRB2_CTRL_CM_MASK            0xE000U
  #define TMRB2_CTRL_CM_BITNUM          0x0DU
  #define TMRB2_CTRL                    (*((volatile word *)0x0000F066))


  /*** TMRB2_SCTRL - Timer B Channel 2 Status and Control Register; 0x0000F067 ***/
  union {
    word Word;
  } TMRB2_SCTRL_STR;
  
  #define TMRB2_SCTRL_OEN_MASK          0x01U
  #define TMRB2_SCTRL_OPS_MASK          0x02U
  #define TMRB2_SCTRL_FORCE_MASK        0x04U
  #define TMRB2_SCTRL_VAL_MASK          0x08U
  #define TMRB2_SCTRL_EEOF_MASK         0x10U
  #define TMRB2_SCTRL_MSTR_MASK         0x20U
  #define TMRB2_SCTRL_CAPTURE_MODE0_MASK 0x40U
  #define TMRB2_SCTRL_CAPTURE_MODE1_MASK 0x80U
  #define TMRB2_SCTRL_INPUT_MASK        0x0100U
  #define TMRB2_SCTRL_IPS_MASK          0x0200U
  #define TMRB2_SCTRL_IEFIE_MASK        0x0400U
  #define TMRB2_SCTRL_IEF_MASK          0x0800U
  #define TMRB2_SCTRL_TOFIE_MASK        0x1000U
  #define TMRB2_SCTRL_TOF_MASK          0x2000U
  #define TMRB2_SCTRL_TCFIE_MASK        0x4000U
  #define TMRB2_SCTRL_TCF_MASK          0x8000U
  #define TMRB2_SCTRL_CAPTURE_MODE_MASK 0xC0U
  #define TMRB2_SCTRL_CAPTURE_MODE_BITNUM 0x06U
  #define TMRB2_SCTRL                   (*((volatile word *)0x0000F067))


  /*** TMRB2_CMPLD1 - Timer B Channel 2 Comparator Load Register 1; 0x0000F068 ***/
  union {
    word Word;
  } TMRB2_CMPLD1_STR;
  
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRB2_CMPLD1                  (*((volatile word *)0x0000F068))


  /*** TMRB2_CMPLD2 - Timer B Channel 2 Comparator Load Register 2; 0x0000F069 ***/
  union {
    word Word;
  } TMRB2_CMPLD2_STR;
  
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRB2_CMPLD2                  (*((volatile word *)0x0000F069))


  /*** TMRB2_CSCTRL - Timer B Channel 2 Comparator Status and Control Register; 0x0000F06A ***/
  union {
    word Word;
  } TMRB2_CSCTRL_STR;
  
  #define TMRB2_CSCTRL_CL10_MASK        0x01U
  #define TMRB2_CSCTRL_CL11_MASK        0x02U
  #define TMRB2_CSCTRL_CL20_MASK        0x04U
  #define TMRB2_CSCTRL_CL21_MASK        0x08U
  #define TMRB2_CSCTRL_TCF1_MASK        0x10U
  #define TMRB2_CSCTRL_TCF2_MASK        0x20U
  #define TMRB2_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRB2_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRB2_CSCTRL_UP_MASK          0x0200U
  #define TMRB2_CSCTRL_TCI_MASK         0x0400U
  #define TMRB2_CSCTRL_ROC_MASK         0x0800U
  #define TMRB2_CSCTRL_ALT_LOAD_MASK    0x1000U
  #define TMRB2_CSCTRL_FAULT_MASK       0x2000U
  #define TMRB2_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRB2_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRB2_CSCTRL_CL1_MASK         0x03U
  #define TMRB2_CSCTRL_CL1_BITNUM       0x00U
  #define TMRB2_CSCTRL_CL2_MASK         0x0CU
  #define TMRB2_CSCTRL_CL2_BITNUM       0x02U
  #define TMRB2_CSCTRL_TCF_1_MASK       0x30U
  #define TMRB2_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRB2_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRB2_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRB2_CSCTRL                  (*((volatile word *)0x0000F06A))


  /*** TMRB2_FILT - Timer B Channel 2 Input Filter Register; 0x0000F06B ***/
  union {
    word Word;
  } TMRB2_FILT_STR;
  
  #define TMRB2_FILT_FILT_PER0_MASK     0x01U
  #define TMRB2_FILT_FILT_PER1_MASK     0x02U
  #define TMRB2_FILT_FILT_PER2_MASK     0x04U
  #define TMRB2_FILT_FILT_PER3_MASK     0x08U
  #define TMRB2_FILT_FILT_PER4_MASK     0x10U
  #define TMRB2_FILT_FILT_PER5_MASK     0x20U
  #define TMRB2_FILT_FILT_PER6_MASK     0x40U
  #define TMRB2_FILT_FILT_PER7_MASK     0x80U
  #define TMRB2_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRB2_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRB2_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRB2_FILT_FILT_PER_MASK      0xFFU
  #define TMRB2_FILT_FILT_PER_BITNUM    0x00U
  #define TMRB2_FILT_FILT_CNT_MASK      0x0700U
  #define TMRB2_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRB2_FILT                    (*((volatile word *)0x0000F06B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRB2_PRPH;

/******************************************
*** Peripheral TMRB3
*******************************************/
typedef volatile struct {
  /*** TMRB3_COMP1 - Timer B Channel 3 Compare Register #1; 0x0000F070 ***/
  union {
    word Word;
  } TMRB3_COMP1_STR;
  
  #define TMRB3_COMP1                   (*((volatile word *)0x0000F070))


  /*** TMRB3_COMP2 - Timer B Channel 3 Compare Register #2; 0x0000F071 ***/
  union {
    word Word;
  } TMRB3_COMP2_STR;
  
  #define TMRB3_COMP2                   (*((volatile word *)0x0000F071))


  /*** TMRB3_CAPT - Timer B Channel 3 Capture Register; 0x0000F072 ***/
  union {
    word Word;
  } TMRB3_CAPT_STR;
  
  #define TMRB3_CAPT                    (*((volatile word *)0x0000F072))


  /*** TMRB3_LOAD - Timer B Channel 3 Load Register; 0x0000F073 ***/
  union {
    word Word;
  } TMRB3_LOAD_STR;
  
  #define TMRB3_LOAD_LOAD0_MASK         0x01U
  #define TMRB3_LOAD_LOAD1_MASK         0x02U
  #define TMRB3_LOAD_LOAD2_MASK         0x04U
  #define TMRB3_LOAD_LOAD3_MASK         0x08U
  #define TMRB3_LOAD_LOAD4_MASK         0x10U
  #define TMRB3_LOAD_LOAD5_MASK         0x20U
  #define TMRB3_LOAD_LOAD6_MASK         0x40U
  #define TMRB3_LOAD_LOAD7_MASK         0x80U
  #define TMRB3_LOAD_LOAD8_MASK         0x0100U
  #define TMRB3_LOAD_LOAD9_MASK         0x0200U
  #define TMRB3_LOAD_LOAD10_MASK        0x0400U
  #define TMRB3_LOAD_LOAD11_MASK        0x0800U
  #define TMRB3_LOAD_LOAD12_MASK        0x1000U
  #define TMRB3_LOAD_LOAD13_MASK        0x2000U
  #define TMRB3_LOAD_LOAD14_MASK        0x4000U
  #define TMRB3_LOAD_LOAD15_MASK        0x8000U
  #define TMRB3_LOAD                    (*((volatile word *)0x0000F073))


  /*** TMRB3_HOLD - Timer B Channel 3 Hold Register; 0x0000F074 ***/
  union {
    word Word;
  } TMRB3_HOLD_STR;
  
  #define TMRB3_HOLD_HOLD0_MASK         0x01U
  #define TMRB3_HOLD_HOLD1_MASK         0x02U
  #define TMRB3_HOLD_HOLD2_MASK         0x04U
  #define TMRB3_HOLD_HOLD3_MASK         0x08U
  #define TMRB3_HOLD_HOLD4_MASK         0x10U
  #define TMRB3_HOLD_HOLD5_MASK         0x20U
  #define TMRB3_HOLD_HOLD6_MASK         0x40U
  #define TMRB3_HOLD_HOLD7_MASK         0x80U
  #define TMRB3_HOLD_HOLD8_MASK         0x0100U
  #define TMRB3_HOLD_HOLD9_MASK         0x0200U
  #define TMRB3_HOLD_HOLD10_MASK        0x0400U
  #define TMRB3_HOLD_HOLD11_MASK        0x0800U
  #define TMRB3_HOLD_HOLD12_MASK        0x1000U
  #define TMRB3_HOLD_HOLD13_MASK        0x2000U
  #define TMRB3_HOLD_HOLD14_MASK        0x4000U
  #define TMRB3_HOLD_HOLD15_MASK        0x8000U
  #define TMRB3_HOLD                    (*((volatile word *)0x0000F074))


  /*** TMRB3_CNTR - Timer B Channel 3 Counter Register; 0x0000F075 ***/
  union {
    word Word;
  } TMRB3_CNTR_STR;
  
  #define TMRB3_CNTR                    (*((volatile word *)0x0000F075))


  /*** TMRB3_CTRL - Timer B Channel 3 Control Register; 0x0000F076 ***/
  union {
    word Word;
  } TMRB3_CTRL_STR;
  
  #define TMRB3_CTRL_OM0_MASK           0x01U
  #define TMRB3_CTRL_OM1_MASK           0x02U
  #define TMRB3_CTRL_OM2_MASK           0x04U
  #define TMRB3_CTRL_Co_INIT_MASK       0x08U
  #define TMRB3_CTRL_DIR_MASK           0x10U
  #define TMRB3_CTRL_LENGTH_MASK        0x20U
  #define TMRB3_CTRL_ONCE_MASK          0x40U
  #define TMRB3_CTRL_SCS0_MASK          0x80U
  #define TMRB3_CTRL_SCS1_MASK          0x0100U
  #define TMRB3_CTRL_PCS0_MASK          0x0200U
  #define TMRB3_CTRL_PCS1_MASK          0x0400U
  #define TMRB3_CTRL_PCS2_MASK          0x0800U
  #define TMRB3_CTRL_PCS3_MASK          0x1000U
  #define TMRB3_CTRL_CM0_MASK           0x2000U
  #define TMRB3_CTRL_CM1_MASK           0x4000U
  #define TMRB3_CTRL_CM2_MASK           0x8000U
  #define TMRB3_CTRL_OM_MASK            0x07U
  #define TMRB3_CTRL_OM_BITNUM          0x00U
  #define TMRB3_CTRL_SCS_MASK           0x0180U
  #define TMRB3_CTRL_SCS_BITNUM         0x07U
  #define TMRB3_CTRL_PCS_MASK           0x1E00U
  #define TMRB3_CTRL_PCS_BITNUM         0x09U
  #define TMRB3_CTRL_CM_MASK            0xE000U
  #define TMRB3_CTRL_CM_BITNUM          0x0DU
  #define TMRB3_CTRL                    (*((volatile word *)0x0000F076))


  /*** TMRB3_SCTRL - Timer B Channel 3 Status and Control Register; 0x0000F077 ***/
  union {
    word Word;
  } TMRB3_SCTRL_STR;
  
  #define TMRB3_SCTRL_OEN_MASK          0x01U
  #define TMRB3_SCTRL_OPS_MASK          0x02U
  #define TMRB3_SCTRL_FORCE_MASK        0x04U
  #define TMRB3_SCTRL_VAL_MASK          0x08U
  #define TMRB3_SCTRL_EEOF_MASK         0x10U
  #define TMRB3_SCTRL_MSTR_MASK         0x20U
  #define TMRB3_SCTRL_CAPTURE_MODE0_MASK 0x40U
  #define TMRB3_SCTRL_CAPTURE_MODE1_MASK 0x80U
  #define TMRB3_SCTRL_INPUT_MASK        0x0100U
  #define TMRB3_SCTRL_IPS_MASK          0x0200U
  #define TMRB3_SCTRL_IEFIE_MASK        0x0400U
  #define TMRB3_SCTRL_IEF_MASK          0x0800U
  #define TMRB3_SCTRL_TOFIE_MASK        0x1000U
  #define TMRB3_SCTRL_TOF_MASK          0x2000U
  #define TMRB3_SCTRL_TCFIE_MASK        0x4000U
  #define TMRB3_SCTRL_TCF_MASK          0x8000U
  #define TMRB3_SCTRL_CAPTURE_MODE_MASK 0xC0U
  #define TMRB3_SCTRL_CAPTURE_MODE_BITNUM 0x06U
  #define TMRB3_SCTRL                   (*((volatile word *)0x0000F077))


  /*** TMRB3_CMPLD1 - Timer B Channel 3 Comparator Load Register 1; 0x0000F078 ***/
  union {
    word Word;
  } TMRB3_CMPLD1_STR;
  
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRB3_CMPLD1                  (*((volatile word *)0x0000F078))


  /*** TMRB3_CMPLD2 - Timer B Channel 3 Comparator Load Register 2; 0x0000F079 ***/
  union {
    word Word;
  } TMRB3_CMPLD2_STR;
  
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRB3_CMPLD2                  (*((volatile word *)0x0000F079))


  /*** TMRB3_CSCTRL - Timer B Channel 3 Comparator Status and Control Register; 0x0000F07A ***/
  union {
    word Word;
  } TMRB3_CSCTRL_STR;
  
  #define TMRB3_CSCTRL_CL10_MASK        0x01U
  #define TMRB3_CSCTRL_CL11_MASK        0x02U
  #define TMRB3_CSCTRL_CL20_MASK        0x04U
  #define TMRB3_CSCTRL_CL21_MASK        0x08U
  #define TMRB3_CSCTRL_TCF1_MASK        0x10U
  #define TMRB3_CSCTRL_TCF2_MASK        0x20U
  #define TMRB3_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRB3_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRB3_CSCTRL_UP_MASK          0x0200U
  #define TMRB3_CSCTRL_TCI_MASK         0x0400U
  #define TMRB3_CSCTRL_ROC_MASK         0x0800U
  #define TMRB3_CSCTRL_ALT_LOAD_MASK    0x1000U
  #define TMRB3_CSCTRL_FAULT_MASK       0x2000U
  #define TMRB3_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRB3_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRB3_CSCTRL_CL1_MASK         0x03U
  #define TMRB3_CSCTRL_CL1_BITNUM       0x00U
  #define TMRB3_CSCTRL_CL2_MASK         0x0CU
  #define TMRB3_CSCTRL_CL2_BITNUM       0x02U
  #define TMRB3_CSCTRL_TCF_1_MASK       0x30U
  #define TMRB3_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRB3_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRB3_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRB3_CSCTRL                  (*((volatile word *)0x0000F07A))


  /*** TMRB3_FILT - Timer B Channel 3 Input Filter Register; 0x0000F07B ***/
  union {
    word Word;
  } TMRB3_FILT_STR;
  
  #define TMRB3_FILT_FILT_PER0_MASK     0x01U
  #define TMRB3_FILT_FILT_PER1_MASK     0x02U
  #define TMRB3_FILT_FILT_PER2_MASK     0x04U
  #define TMRB3_FILT_FILT_PER3_MASK     0x08U
  #define TMRB3_FILT_FILT_PER4_MASK     0x10U
  #define TMRB3_FILT_FILT_PER5_MASK     0x20U
  #define TMRB3_FILT_FILT_PER6_MASK     0x40U
  #define TMRB3_FILT_FILT_PER7_MASK     0x80U
  #define TMRB3_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRB3_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRB3_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRB3_FILT_FILT_PER_MASK      0xFFU
  #define TMRB3_FILT_FILT_PER_BITNUM    0x00U
  #define TMRB3_FILT_FILT_CNT_MASK      0x0700U
  #define TMRB3_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRB3_FILT                    (*((volatile word *)0x0000F07B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRB3_PRPH;

/******************************************
*** Peripheral ADC
*******************************************/
typedef volatile struct {
  /*** ADC_CTRL1 - ADC Control Register; 0x0000F080 ***/
  union {
    word Word;
  } ADC_CTRL1_STR;
  
  #define ADC_CTRL1_SMODE0_MASK         0x01U
  #define ADC_CTRL1_SMODE1_MASK         0x02U
  #define ADC_CTRL1_SMODE2_MASK         0x04U
  #define ADC_CTRL1_CHNCFG_L0_MASK      0x10U
  #define ADC_CTRL1_CHNCFG_L1_MASK      0x20U
  #define ADC_CTRL1_CHNCFG_L2_MASK      0x40U
  #define ADC_CTRL1_CHNCFG_L3_MASK      0x80U
  #define ADC_CTRL1_HLMTIE_MASK         0x0100U
  #define ADC_CTRL1_LLMTIE_MASK         0x0200U
  #define ADC_CTRL1_ZCIE_MASK           0x0400U
  #define ADC_CTRL1_EOSIE0_MASK         0x0800U
  #define ADC_CTRL1_SYNC0_MASK          0x1000U
  #define ADC_CTRL1_START0_MASK         0x2000U
  #define ADC_CTRL1_STOP0_MASK          0x4000U
  #define ADC_CTRL1_SMODE_MASK          0x07U
  #define ADC_CTRL1_SMODE_BITNUM        0x00U
  #define ADC_CTRL1_CHNCFG_L_MASK       0xF0U
  #define ADC_CTRL1_CHNCFG_L_BITNUM     0x04U
  #define ADC_CTRL1                     (*((volatile word *)0x0000F080))


  /*** ADC_CTRL2 - ADC Control Register 2; 0x0000F081 ***/
  union {
    word Word;
  } ADC_CTRL2_STR;
  
  #define ADC_CTRL2_DIV0_MASK           0x01U
  #define ADC_CTRL2_DIV1_MASK           0x02U
  #define ADC_CTRL2_DIV2_MASK           0x04U
  #define ADC_CTRL2_DIV3_MASK           0x08U
  #define ADC_CTRL2_DIV4_MASK           0x10U
  #define ADC_CTRL2_SIMULT_MASK         0x20U
  #define ADC_CTRL2_CHNCFG_H0_MASK      0x40U
  #define ADC_CTRL2_CHNCFG_H1_MASK      0x80U
  #define ADC_CTRL2_CHNCFG_H2_MASK      0x0100U
  #define ADC_CTRL2_CHNCFG_H3_MASK      0x0200U
  #define ADC_CTRL2_EOSIE1_MASK         0x0800U
  #define ADC_CTRL2_SYNC1_MASK          0x1000U
  #define ADC_CTRL2_START1_MASK         0x2000U
  #define ADC_CTRL2_STOP1_MASK          0x4000U
  #define ADC_CTRL2_DIV_MASK            0x1FU
  #define ADC_CTRL2_DIV_BITNUM          0x00U
  #define ADC_CTRL2_CHNCFG_H_MASK       0x03C0U
  #define ADC_CTRL2_CHNCFG_H_BITNUM     0x06U
  #define ADC_CTRL2                     (*((volatile word *)0x0000F081))


  /*** ADC_ZXCTRL - ADC Zero Crossing Control Register; 0x0000F082 ***/
  union {
    word Word;
  } ADC_ZXCTRL_STR;
  
  #define ADC_ZXCTRL_ZCE00_MASK         0x01U
  #define ADC_ZXCTRL_ZCE01_MASK         0x02U
  #define ADC_ZXCTRL_ZCE10_MASK         0x04U
  #define ADC_ZXCTRL_ZCE11_MASK         0x08U
  #define ADC_ZXCTRL_ZCE20_MASK         0x10U
  #define ADC_ZXCTRL_ZCE21_MASK         0x20U
  #define ADC_ZXCTRL_ZCE30_MASK         0x40U
  #define ADC_ZXCTRL_ZCE31_MASK         0x80U
  #define ADC_ZXCTRL_ZCE40_MASK         0x0100U
  #define ADC_ZXCTRL_ZCE41_MASK         0x0200U
  #define ADC_ZXCTRL_ZCE50_MASK         0x0400U
  #define ADC_ZXCTRL_ZCE51_MASK         0x0800U
  #define ADC_ZXCTRL_ZCE60_MASK         0x1000U
  #define ADC_ZXCTRL_ZCE61_MASK         0x2000U
  #define ADC_ZXCTRL_ZCE70_MASK         0x4000U
  #define ADC_ZXCTRL_ZCE71_MASK         0x8000U
  #define ADC_ZXCTRL_ZCE0_MASK          0x03U
  #define ADC_ZXCTRL_ZCE0_BITNUM        0x00U
  #define ADC_ZXCTRL_ZCE1_MASK          0x0CU
  #define ADC_ZXCTRL_ZCE1_BITNUM        0x02U
  #define ADC_ZXCTRL_ZCE2_MASK          0x30U
  #define ADC_ZXCTRL_ZCE2_BITNUM        0x04U
  #define ADC_ZXCTRL_ZCE3_MASK          0xC0U
  #define ADC_ZXCTRL_ZCE3_BITNUM        0x06U
  #define ADC_ZXCTRL_ZCE4_MASK          0x0300U
  #define ADC_ZXCTRL_ZCE4_BITNUM        0x08U
  #define ADC_ZXCTRL_ZCE5_MASK          0x0C00U
  #define ADC_ZXCTRL_ZCE5_BITNUM        0x0AU
  #define ADC_ZXCTRL_ZCE6_MASK          0x3000U
  #define ADC_ZXCTRL_ZCE6_BITNUM        0x0CU
  #define ADC_ZXCTRL_ZCE7_MASK          0xC000U
  #define ADC_ZXCTRL_ZCE7_BITNUM        0x0EU
  #define ADC_ZXCTRL                    (*((volatile word *)0x0000F082))


  /*** ADC_CLIST1 - ADC Channel List Register 1; 0x0000F083 ***/
  union {
    word Word;
  } ADC_CLIST1_STR;
  
  #define ADC_CLIST1_SAMPLE00_MASK      0x01U
  #define ADC_CLIST1_SAMPLE01_MASK      0x02U
  #define ADC_CLIST1_SAMPLE02_MASK      0x04U
  #define ADC_CLIST1_SAMPLE03_MASK      0x08U
  #define ADC_CLIST1_SAMPLE10_MASK      0x10U
  #define ADC_CLIST1_SAMPLE11_MASK      0x20U
  #define ADC_CLIST1_SAMPLE12_MASK      0x40U
  #define ADC_CLIST1_SAMPLE13_MASK      0x80U
  #define ADC_CLIST1_SAMPLE20_MASK      0x0100U
  #define ADC_CLIST1_SAMPLE21_MASK      0x0200U
  #define ADC_CLIST1_SAMPLE22_MASK      0x0400U
  #define ADC_CLIST1_SAMPLE23_MASK      0x0800U
  #define ADC_CLIST1_SAMPLE30_MASK      0x1000U
  #define ADC_CLIST1_SAMPLE31_MASK      0x2000U
  #define ADC_CLIST1_SAMPLE32_MASK      0x4000U
  #define ADC_CLIST1_SAMPLE33_MASK      0x8000U
  #define ADC_CLIST1_SAMPLE0_MASK       0x0FU
  #define ADC_CLIST1_SAMPLE0_BITNUM     0x00U
  #define ADC_CLIST1_SAMPLE1_MASK       0xF0U
  #define ADC_CLIST1_SAMPLE1_BITNUM     0x04U
  #define ADC_CLIST1_SAMPLE2_MASK       0x0F00U
  #define ADC_CLIST1_SAMPLE2_BITNUM     0x08U
  #define ADC_CLIST1_SAMPLE3_MASK       0xF000U
  #define ADC_CLIST1_SAMPLE3_BITNUM     0x0CU
  #define ADC_CLIST1                    (*((volatile word *)0x0000F083))


  /*** ADC_CLIST2 - ADC Channel List Register 2; 0x0000F084 ***/
  union {
    word Word;
  } ADC_CLIST2_STR;
  
  #define ADC_CLIST2_SAMPLE40_MASK      0x01U
  #define ADC_CLIST2_SAMPLE41_MASK      0x02U
  #define ADC_CLIST2_SAMPLE42_MASK      0x04U
  #define ADC_CLIST2_SAMPLE43_MASK      0x08U
  #define ADC_CLIST2_SAMPLE50_MASK      0x10U
  #define ADC_CLIST2_SAMPLE51_MASK      0x20U
  #define ADC_CLIST2_SAMPLE52_MASK      0x40U
  #define ADC_CLIST2_SAMPLE53_MASK      0x80U
  #define ADC_CLIST2_SAMPLE60_MASK      0x0100U
  #define ADC_CLIST2_SAMPLE61_MASK      0x0200U
  #define ADC_CLIST2_SAMPLE62_MASK      0x0400U
  #define ADC_CLIST2_SAMPLE63_MASK      0x0800U
  #define ADC_CLIST2_SAMPLE70_MASK      0x1000U
  #define ADC_CLIST2_SAMPLE71_MASK      0x2000U
  #define ADC_CLIST2_SAMPLE72_MASK      0x4000U
  #define ADC_CLIST2_SAMPLE73_MASK      0x8000U
  #define ADC_CLIST2_SAMPLE4_MASK       0x0FU
  #define ADC_CLIST2_SAMPLE4_BITNUM     0x00U
  #define ADC_CLIST2_SAMPLE5_MASK       0xF0U
  #define ADC_CLIST2_SAMPLE5_BITNUM     0x04U
  #define ADC_CLIST2_SAMPLE6_MASK       0x0F00U
  #define ADC_CLIST2_SAMPLE6_BITNUM     0x08U
  #define ADC_CLIST2_SAMPLE7_MASK       0xF000U
  #define ADC_CLIST2_SAMPLE7_BITNUM     0x0CU
  #define ADC_CLIST2                    (*((volatile word *)0x0000F084))


  /*** ADC_CLIST3 - ADC Channel List Register 3; 0x0000F085 ***/
  union {
    word Word;
  } ADC_CLIST3_STR;
  
  #define ADC_CLIST3_SAMPLE80_MASK      0x01U
  #define ADC_CLIST3_SAMPLE81_MASK      0x02U
  #define ADC_CLIST3_SAMPLE82_MASK      0x04U
  #define ADC_CLIST3_SAMPLE83_MASK      0x08U
  #define ADC_CLIST3_SAMPLE90_MASK      0x10U
  #define ADC_CLIST3_SAMPLE91_MASK      0x20U
  #define ADC_CLIST3_SAMPLE92_MASK      0x40U
  #define ADC_CLIST3_SAMPLE93_MASK      0x80U
  #define ADC_CLIST3_SAMPLE100_MASK     0x0100U
  #define ADC_CLIST3_SAMPLE101_MASK     0x0200U
  #define ADC_CLIST3_SAMPLE102_MASK     0x0400U
  #define ADC_CLIST3_SAMPLE103_MASK     0x0800U
  #define ADC_CLIST3_SAMPLE110_MASK     0x1000U
  #define ADC_CLIST3_SAMPLE111_MASK     0x2000U
  #define ADC_CLIST3_SAMPLE112_MASK     0x4000U
  #define ADC_CLIST3_SAMPLE113_MASK     0x8000U
  #define ADC_CLIST3_SAMPLE8_MASK       0x0FU
  #define ADC_CLIST3_SAMPLE8_BITNUM     0x00U
  #define ADC_CLIST3_SAMPLE9_MASK       0xF0U
  #define ADC_CLIST3_SAMPLE9_BITNUM     0x04U
  #define ADC_CLIST3_SAMPLE10_MASK      0x0F00U
  #define ADC_CLIST3_SAMPLE10_BITNUM    0x08U
  #define ADC_CLIST3_SAMPLE11_MASK      0xF000U
  #define ADC_CLIST3_SAMPLE11_BITNUM    0x0CU
  #define ADC_CLIST3                    (*((volatile word *)0x0000F085))


  /*** ADC_CLIST4 - ADC Channel List Register 4; 0x0000F086 ***/
  union {
    word Word;
  } ADC_CLIST4_STR;
  
  #define ADC_CLIST4_SAMPLE120_MASK     0x01U
  #define ADC_CLIST4_SAMPLE121_MASK     0x02U
  #define ADC_CLIST4_SAMPLE122_MASK     0x04U
  #define ADC_CLIST4_SAMPLE123_MASK     0x08U
  #define ADC_CLIST4_SAMPLE130_MASK     0x10U
  #define ADC_CLIST4_SAMPLE131_MASK     0x20U
  #define ADC_CLIST4_SAMPLE132_MASK     0x40U
  #define ADC_CLIST4_SAMPLE133_MASK     0x80U
  #define ADC_CLIST4_SAMPLE140_MASK     0x0100U
  #define ADC_CLIST4_SAMPLE141_MASK     0x0200U
  #define ADC_CLIST4_SAMPLE142_MASK     0x0400U
  #define ADC_CLIST4_SAMPLE143_MASK     0x0800U
  #define ADC_CLIST4_SAMPLE150_MASK     0x1000U
  #define ADC_CLIST4_SAMPLE151_MASK     0x2000U
  #define ADC_CLIST4_SAMPLE152_MASK     0x4000U
  #define ADC_CLIST4_SAMPLE153_MASK     0x8000U
  #define ADC_CLIST4_SAMPLE12_MASK      0x0FU
  #define ADC_CLIST4_SAMPLE12_BITNUM    0x00U
  #define ADC_CLIST4_SAMPLE13_MASK      0xF0U
  #define ADC_CLIST4_SAMPLE13_BITNUM    0x04U
  #define ADC_CLIST4_SAMPLE14_MASK      0x0F00U
  #define ADC_CLIST4_SAMPLE14_BITNUM    0x08U
  #define ADC_CLIST4_SAMPLE15_MASK      0xF000U
  #define ADC_CLIST4_SAMPLE15_BITNUM    0x0CU
  #define ADC_CLIST4                    (*((volatile word *)0x0000F086))


  /*** ADC_SDIS - ADC Sample Disable Register; 0x0000F087 ***/
  union {
    word Word;
  } ADC_SDIS_STR;
  
  #define ADC_SDIS_DS0_MASK             0x01U
  #define ADC_SDIS_DS1_MASK             0x02U
  #define ADC_SDIS_DS2_MASK             0x04U
  #define ADC_SDIS_DS3_MASK             0x08U
  #define ADC_SDIS_DS4_MASK             0x10U
  #define ADC_SDIS_DS5_MASK             0x20U
  #define ADC_SDIS_DS6_MASK             0x40U
  #define ADC_SDIS_DS7_MASK             0x80U
  #define ADC_SDIS_DS8_MASK             0x0100U
  #define ADC_SDIS_DS9_MASK             0x0200U
  #define ADC_SDIS_DS10_MASK            0x0400U
  #define ADC_SDIS_DS11_MASK            0x0800U
  #define ADC_SDIS_DS12_MASK            0x1000U
  #define ADC_SDIS_DS13_MASK            0x2000U
  #define ADC_SDIS_DS14_MASK            0x4000U
  #define ADC_SDIS_DS15_MASK            0x8000U
  #define ADC_SDIS                      (*((volatile word *)0x0000F087))


  /*** ADC_STAT - ADC Status Register; 0x0000F088 ***/
  union {
    word Word;
  } ADC_STAT_STR;
  
  #define ADC_STAT_RDY0_MASK            0x01U
  #define ADC_STAT_RDY1_MASK            0x02U
  #define ADC_STAT_RDY2_MASK            0x04U
  #define ADC_STAT_RDY3_MASK            0x08U
  #define ADC_STAT_RDY4_MASK            0x10U
  #define ADC_STAT_RDY5_MASK            0x20U
  #define ADC_STAT_RDY6_MASK            0x40U
  #define ADC_STAT_RDY7_MASK            0x80U
  #define ADC_STAT_HLMTI_MASK           0x0100U
  #define ADC_STAT_LLMTI_MASK           0x0200U
  #define ADC_STAT_ZCI_MASK             0x0400U
  #define ADC_STAT_EOSI0_MASK           0x0800U
  #define ADC_STAT_EOSI1_MASK           0x1000U
  #define ADC_STAT_CIP1_MASK            0x4000U
  #define ADC_STAT_CIP0_MASK            0x8000U
  #define ADC_STAT_RDY_MASK             0xFFU
  #define ADC_STAT_RDY_BITNUM           0x00U
  #define ADC_STAT_EOSI_MASK            0x1800U
  #define ADC_STAT_EOSI_BITNUM          0x0BU
  #define ADC_STAT                      (*((volatile word *)0x0000F088))


  /*** ADC_RDY - ADC Conversion Ready Register; 0x0000F089 ***/
  union {
    word Word;
  } ADC_RDY_STR;
  
  #define ADC_RDY_RDY0_MASK             0x01U
  #define ADC_RDY_RDY1_MASK             0x02U
  #define ADC_RDY_RDY2_MASK             0x04U
  #define ADC_RDY_RDY3_MASK             0x08U
  #define ADC_RDY_RDY4_MASK             0x10U
  #define ADC_RDY_RDY5_MASK             0x20U
  #define ADC_RDY_RDY6_MASK             0x40U
  #define ADC_RDY_RDY7_MASK             0x80U
  #define ADC_RDY_RDY8_MASK             0x0100U
  #define ADC_RDY_RDY9_MASK             0x0200U
  #define ADC_RDY_RDY10_MASK            0x0400U
  #define ADC_RDY_RDY11_MASK            0x0800U
  #define ADC_RDY_RDY12_MASK            0x1000U
  #define ADC_RDY_RDY13_MASK            0x2000U
  #define ADC_RDY_RDY14_MASK            0x4000U
  #define ADC_RDY_RDY15_MASK            0x8000U
  #define ADC_RDY                       (*((volatile word *)0x0000F089))


  /*** ADC_LIMSTAT - ADC Limit Status Register; 0x0000F08A ***/
  union {
    word Word;
  } ADC_LIMSTAT_STR;
  
  #define ADC_LIMSTAT_LLS0_MASK         0x01U
  #define ADC_LIMSTAT_LLS1_MASK         0x02U
  #define ADC_LIMSTAT_LLS2_MASK         0x04U
  #define ADC_LIMSTAT_LLS3_MASK         0x08U
  #define ADC_LIMSTAT_LLS4_MASK         0x10U
  #define ADC_LIMSTAT_LLS5_MASK         0x20U
  #define ADC_LIMSTAT_LLS6_MASK         0x40U
  #define ADC_LIMSTAT_LLS7_MASK         0x80U
  #define ADC_LIMSTAT_HLS0_MASK         0x0100U
  #define ADC_LIMSTAT_HLS1_MASK         0x0200U
  #define ADC_LIMSTAT_HLS2_MASK         0x0400U
  #define ADC_LIMSTAT_HLS3_MASK         0x0800U
  #define ADC_LIMSTAT_HLS4_MASK         0x1000U
  #define ADC_LIMSTAT_HLS5_MASK         0x2000U
  #define ADC_LIMSTAT_HLS6_MASK         0x4000U
  #define ADC_LIMSTAT_HLS7_MASK         0x8000U
  #define ADC_LIMSTAT_LLS_MASK          0xFFU
  #define ADC_LIMSTAT_LLS_BITNUM        0x00U
  #define ADC_LIMSTAT_HLS_MASK          0xFF00U
  #define ADC_LIMSTAT_HLS_BITNUM        0x08U
  #define ADC_LIMSTAT                   (*((volatile word *)0x0000F08A))


  /*** ADC_ZXSTAT - ADC Zero Crossing Status Register; 0x0000F08B ***/
  union {
    word Word;
  } ADC_ZXSTAT_STR;
  
  #define ADC_ZXSTAT_ZCS0_MASK          0x01U
  #define ADC_ZXSTAT_ZCS1_MASK          0x02U
  #define ADC_ZXSTAT_ZCS2_MASK          0x04U
  #define ADC_ZXSTAT_ZCS3_MASK          0x08U
  #define ADC_ZXSTAT_ZCS4_MASK          0x10U
  #define ADC_ZXSTAT_ZCS5_MASK          0x20U
  #define ADC_ZXSTAT_ZCS6_MASK          0x40U
  #define ADC_ZXSTAT_ZCS7_MASK          0x80U
  #define ADC_ZXSTAT_ZCS_MASK           0xFFU
  #define ADC_ZXSTAT_ZCS_BITNUM         0x00U
  #define ADC_ZXSTAT                    (*((volatile word *)0x0000F08B))


  /*** ADC_RSLT0 - ADC Result Register 0; 0x0000F08C ***/
  union {
    word Word;
  } ADC_RSLT0_STR;
  
  #define ADC_RSLT0_RSLT0_MASK          0x08U
  #define ADC_RSLT0_RSLT1_MASK          0x10U
  #define ADC_RSLT0_RSLT2_MASK          0x20U
  #define ADC_RSLT0_RSLT3_MASK          0x40U
  #define ADC_RSLT0_RSLT4_MASK          0x80U
  #define ADC_RSLT0_RSLT5_MASK          0x0100U
  #define ADC_RSLT0_RSLT6_MASK          0x0200U
  #define ADC_RSLT0_RSLT7_MASK          0x0400U
  #define ADC_RSLT0_RSLT8_MASK          0x0800U
  #define ADC_RSLT0_RSLT9_MASK          0x1000U
  #define ADC_RSLT0_RSLT10_MASK         0x2000U
  #define ADC_RSLT0_RSLT11_MASK         0x4000U
  #define ADC_RSLT0_SEXT_MASK           0x8000U
  #define ADC_RSLT0_RSLT_MASK           0x7FF8U
  #define ADC_RSLT0_RSLT_BITNUM         0x03U
  #define ADC_RSLT0                     (*((volatile word *)0x0000F08C))


  /*** ADC_RSLT1 - ADC Result Register 1; 0x0000F08D ***/
  union {
    word Word;
  } ADC_RSLT1_STR;
  
  #define ADC_RSLT1_RSLT0_MASK          0x08U
  #define ADC_RSLT1_RSLT1_MASK          0x10U
  #define ADC_RSLT1_RSLT2_MASK          0x20U
  #define ADC_RSLT1_RSLT3_MASK          0x40U
  #define ADC_RSLT1_RSLT4_MASK          0x80U
  #define ADC_RSLT1_RSLT5_MASK          0x0100U
  #define ADC_RSLT1_RSLT6_MASK          0x0200U
  #define ADC_RSLT1_RSLT7_MASK          0x0400U
  #define ADC_RSLT1_RSLT8_MASK          0x0800U
  #define ADC_RSLT1_RSLT9_MASK          0x1000U
  #define ADC_RSLT1_RSLT10_MASK         0x2000U
  #define ADC_RSLT1_RSLT11_MASK         0x4000U
  #define ADC_RSLT1_SEXT_MASK           0x8000U
  #define ADC_RSLT1_RSLT_MASK           0x7FF8U
  #define ADC_RSLT1_RSLT_BITNUM         0x03U
  #define ADC_RSLT1                     (*((volatile word *)0x0000F08D))


  /*** ADC_RSLT2 - ADC Result Register 2; 0x0000F08E ***/
  union {
    word Word;
  } ADC_RSLT2_STR;
  
  #define ADC_RSLT2_RSLT0_MASK          0x08U
  #define ADC_RSLT2_RSLT1_MASK          0x10U
  #define ADC_RSLT2_RSLT2_MASK          0x20U
  #define ADC_RSLT2_RSLT3_MASK          0x40U
  #define ADC_RSLT2_RSLT4_MASK          0x80U
  #define ADC_RSLT2_RSLT5_MASK          0x0100U
  #define ADC_RSLT2_RSLT6_MASK          0x0200U
  #define ADC_RSLT2_RSLT7_MASK          0x0400U
  #define ADC_RSLT2_RSLT8_MASK          0x0800U
  #define ADC_RSLT2_RSLT9_MASK          0x1000U
  #define ADC_RSLT2_RSLT10_MASK         0x2000U
  #define ADC_RSLT2_RSLT11_MASK         0x4000U
  #define ADC_RSLT2_SEXT_MASK           0x8000U
  #define ADC_RSLT2_RSLT_MASK           0x7FF8U
  #define ADC_RSLT2_RSLT_BITNUM         0x03U
  #define ADC_RSLT2                     (*((volatile word *)0x0000F08E))


  /*** ADC_RSLT3 - ADC Result Register 3; 0x0000F08F ***/
  union {
    word Word;
  } ADC_RSLT3_STR;
  
  #define ADC_RSLT3_RSLT0_MASK          0x08U
  #define ADC_RSLT3_RSLT1_MASK          0x10U
  #define ADC_RSLT3_RSLT2_MASK          0x20U
  #define ADC_RSLT3_RSLT3_MASK          0x40U
  #define ADC_RSLT3_RSLT4_MASK          0x80U
  #define ADC_RSLT3_RSLT5_MASK          0x0100U
  #define ADC_RSLT3_RSLT6_MASK          0x0200U
  #define ADC_RSLT3_RSLT7_MASK          0x0400U
  #define ADC_RSLT3_RSLT8_MASK          0x0800U
  #define ADC_RSLT3_RSLT9_MASK          0x1000U
  #define ADC_RSLT3_RSLT10_MASK         0x2000U
  #define ADC_RSLT3_RSLT11_MASK         0x4000U
  #define ADC_RSLT3_SEXT_MASK           0x8000U
  #define ADC_RSLT3_RSLT_MASK           0x7FF8U
  #define ADC_RSLT3_RSLT_BITNUM         0x03U
  #define ADC_RSLT3                     (*((volatile word *)0x0000F08F))


  /*** ADC_RSLT4 - ADC Result Register 4; 0x0000F090 ***/
  union {
    word Word;
  } ADC_RSLT4_STR;
  
  #define ADC_RSLT4_RSLT0_MASK          0x08U
  #define ADC_RSLT4_RSLT1_MASK          0x10U
  #define ADC_RSLT4_RSLT2_MASK          0x20U
  #define ADC_RSLT4_RSLT3_MASK          0x40U
  #define ADC_RSLT4_RSLT4_MASK          0x80U
  #define ADC_RSLT4_RSLT5_MASK          0x0100U
  #define ADC_RSLT4_RSLT6_MASK          0x0200U
  #define ADC_RSLT4_RSLT7_MASK          0x0400U
  #define ADC_RSLT4_RSLT8_MASK          0x0800U
  #define ADC_RSLT4_RSLT9_MASK          0x1000U
  #define ADC_RSLT4_RSLT10_MASK         0x2000U
  #define ADC_RSLT4_RSLT11_MASK         0x4000U
  #define ADC_RSLT4_SEXT_MASK           0x8000U
  #define ADC_RSLT4_RSLT_MASK           0x7FF8U
  #define ADC_RSLT4_RSLT_BITNUM         0x03U
  #define ADC_RSLT4                     (*((volatile word *)0x0000F090))


  /*** ADC_RSLT5 - ADC Result Register 5; 0x0000F091 ***/
  union {
    word Word;
  } ADC_RSLT5_STR;
  
  #define ADC_RSLT5_RSLT0_MASK          0x08U
  #define ADC_RSLT5_RSLT1_MASK          0x10U
  #define ADC_RSLT5_RSLT2_MASK          0x20U
  #define ADC_RSLT5_RSLT3_MASK          0x40U
  #define ADC_RSLT5_RSLT4_MASK          0x80U
  #define ADC_RSLT5_RSLT5_MASK          0x0100U
  #define ADC_RSLT5_RSLT6_MASK          0x0200U
  #define ADC_RSLT5_RSLT7_MASK          0x0400U
  #define ADC_RSLT5_RSLT8_MASK          0x0800U
  #define ADC_RSLT5_RSLT9_MASK          0x1000U
  #define ADC_RSLT5_RSLT10_MASK         0x2000U
  #define ADC_RSLT5_RSLT11_MASK         0x4000U
  #define ADC_RSLT5_SEXT_MASK           0x8000U
  #define ADC_RSLT5_RSLT_MASK           0x7FF8U
  #define ADC_RSLT5_RSLT_BITNUM         0x03U
  #define ADC_RSLT5                     (*((volatile word *)0x0000F091))


  /*** ADC_RSLT6 - ADC Result Register 6; 0x0000F092 ***/
  union {
    word Word;
  } ADC_RSLT6_STR;
  
  #define ADC_RSLT6_RSLT0_MASK          0x08U
  #define ADC_RSLT6_RSLT1_MASK          0x10U
  #define ADC_RSLT6_RSLT2_MASK          0x20U
  #define ADC_RSLT6_RSLT3_MASK          0x40U
  #define ADC_RSLT6_RSLT4_MASK          0x80U
  #define ADC_RSLT6_RSLT5_MASK          0x0100U
  #define ADC_RSLT6_RSLT6_MASK          0x0200U
  #define ADC_RSLT6_RSLT7_MASK          0x0400U
  #define ADC_RSLT6_RSLT8_MASK          0x0800U
  #define ADC_RSLT6_RSLT9_MASK          0x1000U
  #define ADC_RSLT6_RSLT10_MASK         0x2000U
  #define ADC_RSLT6_RSLT11_MASK         0x4000U
  #define ADC_RSLT6_SEXT_MASK           0x8000U
  #define ADC_RSLT6_RSLT_MASK           0x7FF8U
  #define ADC_RSLT6_RSLT_BITNUM         0x03U
  #define ADC_RSLT6                     (*((volatile word *)0x0000F092))


  /*** ADC_RSLT7 - ADC Result Register 7; 0x0000F093 ***/
  union {
    word Word;
  } ADC_RSLT7_STR;
  
  #define ADC_RSLT7_RSLT0_MASK          0x08U
  #define ADC_RSLT7_RSLT1_MASK          0x10U
  #define ADC_RSLT7_RSLT2_MASK          0x20U
  #define ADC_RSLT7_RSLT3_MASK          0x40U
  #define ADC_RSLT7_RSLT4_MASK          0x80U
  #define ADC_RSLT7_RSLT5_MASK          0x0100U
  #define ADC_RSLT7_RSLT6_MASK          0x0200U
  #define ADC_RSLT7_RSLT7_MASK          0x0400U
  #define ADC_RSLT7_RSLT8_MASK          0x0800U
  #define ADC_RSLT7_RSLT9_MASK          0x1000U
  #define ADC_RSLT7_RSLT10_MASK         0x2000U
  #define ADC_RSLT7_RSLT11_MASK         0x4000U
  #define ADC_RSLT7_SEXT_MASK           0x8000U
  #define ADC_RSLT7_RSLT_MASK           0x7FF8U
  #define ADC_RSLT7_RSLT_BITNUM         0x03U
  #define ADC_RSLT7                     (*((volatile word *)0x0000F093))


  /*** ADC_RSLT8 - ADC Result Register 8; 0x0000F094 ***/
  union {
    word Word;
  } ADC_RSLT8_STR;
  
  #define ADC_RSLT8_RSLT0_MASK          0x08U
  #define ADC_RSLT8_RSLT1_MASK          0x10U
  #define ADC_RSLT8_RSLT2_MASK          0x20U
  #define ADC_RSLT8_RSLT3_MASK          0x40U
  #define ADC_RSLT8_RSLT4_MASK          0x80U
  #define ADC_RSLT8_RSLT5_MASK          0x0100U
  #define ADC_RSLT8_RSLT6_MASK          0x0200U
  #define ADC_RSLT8_RSLT7_MASK          0x0400U
  #define ADC_RSLT8_RSLT8_MASK          0x0800U
  #define ADC_RSLT8_RSLT9_MASK          0x1000U
  #define ADC_RSLT8_RSLT10_MASK         0x2000U
  #define ADC_RSLT8_RSLT11_MASK         0x4000U
  #define ADC_RSLT8_RSLT_MASK           0x7FF8U
  #define ADC_RSLT8_RSLT_BITNUM         0x03U
  #define ADC_RSLT8                     (*((volatile word *)0x0000F094))


  /*** ADC_RSLT9 - ADC Result Register 9; 0x0000F095 ***/
  union {
    word Word;
  } ADC_RSLT9_STR;
  
  #define ADC_RSLT9_RSLT0_MASK          0x08U
  #define ADC_RSLT9_RSLT1_MASK          0x10U
  #define ADC_RSLT9_RSLT2_MASK          0x20U
  #define ADC_RSLT9_RSLT3_MASK          0x40U
  #define ADC_RSLT9_RSLT4_MASK          0x80U
  #define ADC_RSLT9_RSLT5_MASK          0x0100U
  #define ADC_RSLT9_RSLT6_MASK          0x0200U
  #define ADC_RSLT9_RSLT7_MASK          0x0400U
  #define ADC_RSLT9_RSLT8_MASK          0x0800U
  #define ADC_RSLT9_RSLT9_MASK          0x1000U
  #define ADC_RSLT9_RSLT10_MASK         0x2000U
  #define ADC_RSLT9_RSLT11_MASK         0x4000U
  #define ADC_RSLT9_RSLT_MASK           0x7FF8U
  #define ADC_RSLT9_RSLT_BITNUM         0x03U
  #define ADC_RSLT9                     (*((volatile word *)0x0000F095))


  /*** ADC_RSLT10 - ADC Result Register 10; 0x0000F096 ***/
  union {
    word Word;
  } ADC_RSLT10_STR;
  
  #define ADC_RSLT10_RSLT0_MASK         0x08U
  #define ADC_RSLT10_RSLT1_MASK         0x10U
  #define ADC_RSLT10_RSLT2_MASK         0x20U
  #define ADC_RSLT10_RSLT3_MASK         0x40U
  #define ADC_RSLT10_RSLT4_MASK         0x80U
  #define ADC_RSLT10_RSLT5_MASK         0x0100U
  #define ADC_RSLT10_RSLT6_MASK         0x0200U
  #define ADC_RSLT10_RSLT7_MASK         0x0400U
  #define ADC_RSLT10_RSLT8_MASK         0x0800U
  #define ADC_RSLT10_RSLT9_MASK         0x1000U
  #define ADC_RSLT10_RSLT10_MASK        0x2000U
  #define ADC_RSLT10_RSLT11_MASK        0x4000U
  #define ADC_RSLT10_RSLT_MASK          0x7FF8U
  #define ADC_RSLT10_RSLT_BITNUM        0x03U
  #define ADC_RSLT10                    (*((volatile word *)0x0000F096))


  /*** ADC_RSLT11 - ADC Result Register 11; 0x0000F097 ***/
  union {
    word Word;
  } ADC_RSLT11_STR;
  
  #define ADC_RSLT11_RSLT0_MASK         0x08U
  #define ADC_RSLT11_RSLT1_MASK         0x10U
  #define ADC_RSLT11_RSLT2_MASK         0x20U
  #define ADC_RSLT11_RSLT3_MASK         0x40U
  #define ADC_RSLT11_RSLT4_MASK         0x80U
  #define ADC_RSLT11_RSLT5_MASK         0x0100U
  #define ADC_RSLT11_RSLT6_MASK         0x0200U
  #define ADC_RSLT11_RSLT7_MASK         0x0400U
  #define ADC_RSLT11_RSLT8_MASK         0x0800U
  #define ADC_RSLT11_RSLT9_MASK         0x1000U
  #define ADC_RSLT11_RSLT10_MASK        0x2000U
  #define ADC_RSLT11_RSLT11_MASK        0x4000U
  #define ADC_RSLT11_RSLT_MASK          0x7FF8U
  #define ADC_RSLT11_RSLT_BITNUM        0x03U
  #define ADC_RSLT11                    (*((volatile word *)0x0000F097))


  /*** ADC_RSLT12 - ADC Result Register 12; 0x0000F098 ***/
  union {
    word Word;
  } ADC_RSLT12_STR;
  
  #define ADC_RSLT12_RSLT0_MASK         0x08U
  #define ADC_RSLT12_RSLT1_MASK         0x10U
  #define ADC_RSLT12_RSLT2_MASK         0x20U
  #define ADC_RSLT12_RSLT3_MASK         0x40U
  #define ADC_RSLT12_RSLT4_MASK         0x80U
  #define ADC_RSLT12_RSLT5_MASK         0x0100U
  #define ADC_RSLT12_RSLT6_MASK         0x0200U
  #define ADC_RSLT12_RSLT7_MASK         0x0400U
  #define ADC_RSLT12_RSLT8_MASK         0x0800U
  #define ADC_RSLT12_RSLT9_MASK         0x1000U
  #define ADC_RSLT12_RSLT10_MASK        0x2000U
  #define ADC_RSLT12_RSLT11_MASK        0x4000U
  #define ADC_RSLT12_RSLT_MASK          0x7FF8U
  #define ADC_RSLT12_RSLT_BITNUM        0x03U
  #define ADC_RSLT12                    (*((volatile word *)0x0000F098))


  /*** ADC_RSLT13 - ADC Result Register 13; 0x0000F099 ***/
  union {
    word Word;
  } ADC_RSLT13_STR;
  
  #define ADC_RSLT13_RSLT0_MASK         0x08U
  #define ADC_RSLT13_RSLT1_MASK         0x10U
  #define ADC_RSLT13_RSLT2_MASK         0x20U
  #define ADC_RSLT13_RSLT3_MASK         0x40U
  #define ADC_RSLT13_RSLT4_MASK         0x80U
  #define ADC_RSLT13_RSLT5_MASK         0x0100U
  #define ADC_RSLT13_RSLT6_MASK         0x0200U
  #define ADC_RSLT13_RSLT7_MASK         0x0400U
  #define ADC_RSLT13_RSLT8_MASK         0x0800U
  #define ADC_RSLT13_RSLT9_MASK         0x1000U
  #define ADC_RSLT13_RSLT10_MASK        0x2000U
  #define ADC_RSLT13_RSLT11_MASK        0x4000U
  #define ADC_RSLT13_RSLT_MASK          0x7FF8U
  #define ADC_RSLT13_RSLT_BITNUM        0x03U
  #define ADC_RSLT13                    (*((volatile word *)0x0000F099))


  /*** ADC_RSLT14 - ADC Result Register 14; 0x0000F09A ***/
  union {
    word Word;
  } ADC_RSLT14_STR;
  
  #define ADC_RSLT14_RSLT0_MASK         0x08U
  #define ADC_RSLT14_RSLT1_MASK         0x10U
  #define ADC_RSLT14_RSLT2_MASK         0x20U
  #define ADC_RSLT14_RSLT3_MASK         0x40U
  #define ADC_RSLT14_RSLT4_MASK         0x80U
  #define ADC_RSLT14_RSLT5_MASK         0x0100U
  #define ADC_RSLT14_RSLT6_MASK         0x0200U
  #define ADC_RSLT14_RSLT7_MASK         0x0400U
  #define ADC_RSLT14_RSLT8_MASK         0x0800U
  #define ADC_RSLT14_RSLT9_MASK         0x1000U
  #define ADC_RSLT14_RSLT10_MASK        0x2000U
  #define ADC_RSLT14_RSLT11_MASK        0x4000U
  #define ADC_RSLT14_RSLT_MASK          0x7FF8U
  #define ADC_RSLT14_RSLT_BITNUM        0x03U
  #define ADC_RSLT14                    (*((volatile word *)0x0000F09A))


  /*** ADC_RSLT15 - ADC Result Register 15; 0x0000F09B ***/
  union {
    word Word;
  } ADC_RSLT15_STR;
  
  #define ADC_RSLT15_RSLT0_MASK         0x08U
  #define ADC_RSLT15_RSLT1_MASK         0x10U
  #define ADC_RSLT15_RSLT2_MASK         0x20U
  #define ADC_RSLT15_RSLT3_MASK         0x40U
  #define ADC_RSLT15_RSLT4_MASK         0x80U
  #define ADC_RSLT15_RSLT5_MASK         0x0100U
  #define ADC_RSLT15_RSLT6_MASK         0x0200U
  #define ADC_RSLT15_RSLT7_MASK         0x0400U
  #define ADC_RSLT15_RSLT8_MASK         0x0800U
  #define ADC_RSLT15_RSLT9_MASK         0x1000U
  #define ADC_RSLT15_RSLT10_MASK        0x2000U
  #define ADC_RSLT15_RSLT11_MASK        0x4000U
  #define ADC_RSLT15_RSLT_MASK          0x7FF8U
  #define ADC_RSLT15_RSLT_BITNUM        0x03U
  #define ADC_RSLT15                    (*((volatile word *)0x0000F09B))


  /*** ADC_LOLIM0 - ADC Low Limit Register 0; 0x0000F09C ***/
  union {
    word Word;
  } ADC_LOLIM0_STR;
  
  #define ADC_LOLIM0_LLMT0_MASK         0x08U
  #define ADC_LOLIM0_LLMT1_MASK         0x10U
  #define ADC_LOLIM0_LLMT2_MASK         0x20U
  #define ADC_LOLIM0_LLMT3_MASK         0x40U
  #define ADC_LOLIM0_LLMT4_MASK         0x80U
  #define ADC_LOLIM0_LLMT5_MASK         0x0100U
  #define ADC_LOLIM0_LLMT6_MASK         0x0200U
  #define ADC_LOLIM0_LLMT7_MASK         0x0400U
  #define ADC_LOLIM0_LLMT8_MASK         0x0800U
  #define ADC_LOLIM0_LLMT9_MASK         0x1000U
  #define ADC_LOLIM0_LLMT10_MASK        0x2000U
  #define ADC_LOLIM0_LLMT11_MASK        0x4000U
  #define ADC_LOLIM0_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM0_LLMT_BITNUM        0x03U
  #define ADC_LOLIM0                    (*((volatile word *)0x0000F09C))


  /*** ADC_LOLIM1 - ADC Low Limit Register 1; 0x0000F09D ***/
  union {
    word Word;
  } ADC_LOLIM1_STR;
  
  #define ADC_LOLIM1_LLMT0_MASK         0x08U
  #define ADC_LOLIM1_LLMT1_MASK         0x10U
  #define ADC_LOLIM1_LLMT2_MASK         0x20U
  #define ADC_LOLIM1_LLMT3_MASK         0x40U
  #define ADC_LOLIM1_LLMT4_MASK         0x80U
  #define ADC_LOLIM1_LLMT5_MASK         0x0100U
  #define ADC_LOLIM1_LLMT6_MASK         0x0200U
  #define ADC_LOLIM1_LLMT7_MASK         0x0400U
  #define ADC_LOLIM1_LLMT8_MASK         0x0800U
  #define ADC_LOLIM1_LLMT9_MASK         0x1000U
  #define ADC_LOLIM1_LLMT10_MASK        0x2000U
  #define ADC_LOLIM1_LLMT11_MASK        0x4000U
  #define ADC_LOLIM1_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM1_LLMT_BITNUM        0x03U
  #define ADC_LOLIM1                    (*((volatile word *)0x0000F09D))


  /*** ADC_LOLIM2 - ADC Low Limit Register 2; 0x0000F09E ***/
  union {
    word Word;
  } ADC_LOLIM2_STR;
  
  #define ADC_LOLIM2_LLMT0_MASK         0x08U
  #define ADC_LOLIM2_LLMT1_MASK         0x10U
  #define ADC_LOLIM2_LLMT2_MASK         0x20U
  #define ADC_LOLIM2_LLMT3_MASK         0x40U
  #define ADC_LOLIM2_LLMT4_MASK         0x80U
  #define ADC_LOLIM2_LLMT5_MASK         0x0100U
  #define ADC_LOLIM2_LLMT6_MASK         0x0200U
  #define ADC_LOLIM2_LLMT7_MASK         0x0400U
  #define ADC_LOLIM2_LLMT8_MASK         0x0800U
  #define ADC_LOLIM2_LLMT9_MASK         0x1000U
  #define ADC_LOLIM2_LLMT10_MASK        0x2000U
  #define ADC_LOLIM2_LLMT11_MASK        0x4000U
  #define ADC_LOLIM2_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM2_LLMT_BITNUM        0x03U
  #define ADC_LOLIM2                    (*((volatile word *)0x0000F09E))


  /*** ADC_LOLIM3 - ADC Low Limit Register 3; 0x0000F09F ***/
  union {
    word Word;
  } ADC_LOLIM3_STR;
  
  #define ADC_LOLIM3_LLMT0_MASK         0x08U
  #define ADC_LOLIM3_LLMT1_MASK         0x10U
  #define ADC_LOLIM3_LLMT2_MASK         0x20U
  #define ADC_LOLIM3_LLMT3_MASK         0x40U
  #define ADC_LOLIM3_LLMT4_MASK         0x80U
  #define ADC_LOLIM3_LLMT5_MASK         0x0100U
  #define ADC_LOLIM3_LLMT6_MASK         0x0200U
  #define ADC_LOLIM3_LLMT7_MASK         0x0400U
  #define ADC_LOLIM3_LLMT8_MASK         0x0800U
  #define ADC_LOLIM3_LLMT9_MASK         0x1000U
  #define ADC_LOLIM3_LLMT10_MASK        0x2000U
  #define ADC_LOLIM3_LLMT11_MASK        0x4000U
  #define ADC_LOLIM3_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM3_LLMT_BITNUM        0x03U
  #define ADC_LOLIM3                    (*((volatile word *)0x0000F09F))


  /*** ADC_LOLIM4 - ADC Low Limit Register 4; 0x0000F0A0 ***/
  union {
    word Word;
  } ADC_LOLIM4_STR;
  
  #define ADC_LOLIM4_LLMT0_MASK         0x08U
  #define ADC_LOLIM4_LLMT1_MASK         0x10U
  #define ADC_LOLIM4_LLMT2_MASK         0x20U
  #define ADC_LOLIM4_LLMT3_MASK         0x40U
  #define ADC_LOLIM4_LLMT4_MASK         0x80U
  #define ADC_LOLIM4_LLMT5_MASK         0x0100U
  #define ADC_LOLIM4_LLMT6_MASK         0x0200U
  #define ADC_LOLIM4_LLMT7_MASK         0x0400U
  #define ADC_LOLIM4_LLMT8_MASK         0x0800U
  #define ADC_LOLIM4_LLMT9_MASK         0x1000U
  #define ADC_LOLIM4_LLMT10_MASK        0x2000U
  #define ADC_LOLIM4_LLMT11_MASK        0x4000U
  #define ADC_LOLIM4_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM4_LLMT_BITNUM        0x03U
  #define ADC_LOLIM4                    (*((volatile word *)0x0000F0A0))


  /*** ADC_LOLIM5 - ADC Low Limit Register 5; 0x0000F0A1 ***/
  union {
    word Word;
  } ADC_LOLIM5_STR;
  
  #define ADC_LOLIM5_LLMT0_MASK         0x08U
  #define ADC_LOLIM5_LLMT1_MASK         0x10U
  #define ADC_LOLIM5_LLMT2_MASK         0x20U
  #define ADC_LOLIM5_LLMT3_MASK         0x40U
  #define ADC_LOLIM5_LLMT4_MASK         0x80U
  #define ADC_LOLIM5_LLMT5_MASK         0x0100U
  #define ADC_LOLIM5_LLMT6_MASK         0x0200U
  #define ADC_LOLIM5_LLMT7_MASK         0x0400U
  #define ADC_LOLIM5_LLMT8_MASK         0x0800U
  #define ADC_LOLIM5_LLMT9_MASK         0x1000U
  #define ADC_LOLIM5_LLMT10_MASK        0x2000U
  #define ADC_LOLIM5_LLMT11_MASK        0x4000U
  #define ADC_LOLIM5_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM5_LLMT_BITNUM        0x03U
  #define ADC_LOLIM5                    (*((volatile word *)0x0000F0A1))


  /*** ADC_LOLIM6 - ADC Low Limit Register 6; 0x0000F0A2 ***/
  union {
    word Word;
  } ADC_LOLIM6_STR;
  
  #define ADC_LOLIM6_LLMT0_MASK         0x08U
  #define ADC_LOLIM6_LLMT1_MASK         0x10U
  #define ADC_LOLIM6_LLMT2_MASK         0x20U
  #define ADC_LOLIM6_LLMT3_MASK         0x40U
  #define ADC_LOLIM6_LLMT4_MASK         0x80U
  #define ADC_LOLIM6_LLMT5_MASK         0x0100U
  #define ADC_LOLIM6_LLMT6_MASK         0x0200U
  #define ADC_LOLIM6_LLMT7_MASK         0x0400U
  #define ADC_LOLIM6_LLMT8_MASK         0x0800U
  #define ADC_LOLIM6_LLMT9_MASK         0x1000U
  #define ADC_LOLIM6_LLMT10_MASK        0x2000U
  #define ADC_LOLIM6_LLMT11_MASK        0x4000U
  #define ADC_LOLIM6_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM6_LLMT_BITNUM        0x03U
  #define ADC_LOLIM6                    (*((volatile word *)0x0000F0A2))


  /*** ADC_LOLIM7 - ADC Low Limit Register 7; 0x0000F0A3 ***/
  union {
    word Word;
  } ADC_LOLIM7_STR;
  
  #define ADC_LOLIM7_LLMT0_MASK         0x08U
  #define ADC_LOLIM7_LLMT1_MASK         0x10U
  #define ADC_LOLIM7_LLMT2_MASK         0x20U
  #define ADC_LOLIM7_LLMT3_MASK         0x40U
  #define ADC_LOLIM7_LLMT4_MASK         0x80U
  #define ADC_LOLIM7_LLMT5_MASK         0x0100U
  #define ADC_LOLIM7_LLMT6_MASK         0x0200U
  #define ADC_LOLIM7_LLMT7_MASK         0x0400U
  #define ADC_LOLIM7_LLMT8_MASK         0x0800U
  #define ADC_LOLIM7_LLMT9_MASK         0x1000U
  #define ADC_LOLIM7_LLMT10_MASK        0x2000U
  #define ADC_LOLIM7_LLMT11_MASK        0x4000U
  #define ADC_LOLIM7_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM7_LLMT_BITNUM        0x03U
  #define ADC_LOLIM7                    (*((volatile word *)0x0000F0A3))


  /*** ADC_HILIM0 - ADC High Limit Register 0; 0x0000F0A4 ***/
  union {
    word Word;
  } ADC_HILIM0_STR;
  
  #define ADC_HILIM0_HLMT0_MASK         0x08U
  #define ADC_HILIM0_HLMT1_MASK         0x10U
  #define ADC_HILIM0_HLMT2_MASK         0x20U
  #define ADC_HILIM0_HLMT3_MASK         0x40U
  #define ADC_HILIM0_HLMT4_MASK         0x80U
  #define ADC_HILIM0_HLMT5_MASK         0x0100U
  #define ADC_HILIM0_HLMT6_MASK         0x0200U
  #define ADC_HILIM0_HLMT7_MASK         0x0400U
  #define ADC_HILIM0_HLMT8_MASK         0x0800U
  #define ADC_HILIM0_HLMT9_MASK         0x1000U
  #define ADC_HILIM0_HLMT10_MASK        0x2000U
  #define ADC_HILIM0_HLMT11_MASK        0x4000U
  #define ADC_HILIM0_HLMT_MASK          0x7FF8U
  #define ADC_HILIM0_HLMT_BITNUM        0x03U
  #define ADC_HILIM0                    (*((volatile word *)0x0000F0A4))


  /*** ADC_HILIM1 - ADC High Limit Register 1; 0x0000F0A5 ***/
  union {
    word Word;
  } ADC_HILIM1_STR;
  
  #define ADC_HILIM1_HLMT0_MASK         0x08U
  #define ADC_HILIM1_HLMT1_MASK         0x10U
  #define ADC_HILIM1_HLMT2_MASK         0x20U
  #define ADC_HILIM1_HLMT3_MASK         0x40U
  #define ADC_HILIM1_HLMT4_MASK         0x80U
  #define ADC_HILIM1_HLMT5_MASK         0x0100U
  #define ADC_HILIM1_HLMT6_MASK         0x0200U
  #define ADC_HILIM1_HLMT7_MASK         0x0400U
  #define ADC_HILIM1_HLMT8_MASK         0x0800U
  #define ADC_HILIM1_HLMT9_MASK         0x1000U
  #define ADC_HILIM1_HLMT10_MASK        0x2000U
  #define ADC_HILIM1_HLMT11_MASK        0x4000U
  #define ADC_HILIM1_HLMT_MASK          0x7FF8U
  #define ADC_HILIM1_HLMT_BITNUM        0x03U
  #define ADC_HILIM1                    (*((volatile word *)0x0000F0A5))


  /*** ADC_HILIM2 - ADC High Limit Register 2; 0x0000F0A6 ***/
  union {
    word Word;
  } ADC_HILIM2_STR;
  
  #define ADC_HILIM2_HLMT0_MASK         0x08U
  #define ADC_HILIM2_HLMT1_MASK         0x10U
  #define ADC_HILIM2_HLMT2_MASK         0x20U
  #define ADC_HILIM2_HLMT3_MASK         0x40U
  #define ADC_HILIM2_HLMT4_MASK         0x80U
  #define ADC_HILIM2_HLMT5_MASK         0x0100U
  #define ADC_HILIM2_HLMT6_MASK         0x0200U
  #define ADC_HILIM2_HLMT7_MASK         0x0400U
  #define ADC_HILIM2_HLMT8_MASK         0x0800U
  #define ADC_HILIM2_HLMT9_MASK         0x1000U
  #define ADC_HILIM2_HLMT10_MASK        0x2000U
  #define ADC_HILIM2_HLMT11_MASK        0x4000U
  #define ADC_HILIM2_HLMT_MASK          0x7FF8U
  #define ADC_HILIM2_HLMT_BITNUM        0x03U
  #define ADC_HILIM2                    (*((volatile word *)0x0000F0A6))


  /*** ADC_HILIM3 - ADC High Limit Register 3; 0x0000F0A7 ***/
  union {
    word Word;
  } ADC_HILIM3_STR;
  
  #define ADC_HILIM3_HLMT0_MASK         0x08U
  #define ADC_HILIM3_HLMT1_MASK         0x10U
  #define ADC_HILIM3_HLMT2_MASK         0x20U
  #define ADC_HILIM3_HLMT3_MASK         0x40U
  #define ADC_HILIM3_HLMT4_MASK         0x80U
  #define ADC_HILIM3_HLMT5_MASK         0x0100U
  #define ADC_HILIM3_HLMT6_MASK         0x0200U
  #define ADC_HILIM3_HLMT7_MASK         0x0400U
  #define ADC_HILIM3_HLMT8_MASK         0x0800U
  #define ADC_HILIM3_HLMT9_MASK         0x1000U
  #define ADC_HILIM3_HLMT10_MASK        0x2000U
  #define ADC_HILIM3_HLMT11_MASK        0x4000U
  #define ADC_HILIM3_HLMT_MASK          0x7FF8U
  #define ADC_HILIM3_HLMT_BITNUM        0x03U
  #define ADC_HILIM3                    (*((volatile word *)0x0000F0A7))


  /*** ADC_HILIM4 - ADC High Limit Register 4; 0x0000F0A8 ***/
  union {
    word Word;
  } ADC_HILIM4_STR;
  
  #define ADC_HILIM4_HLMT0_MASK         0x08U
  #define ADC_HILIM4_HLMT1_MASK         0x10U
  #define ADC_HILIM4_HLMT2_MASK         0x20U
  #define ADC_HILIM4_HLMT3_MASK         0x40U
  #define ADC_HILIM4_HLMT4_MASK         0x80U
  #define ADC_HILIM4_HLMT5_MASK         0x0100U
  #define ADC_HILIM4_HLMT6_MASK         0x0200U
  #define ADC_HILIM4_HLMT7_MASK         0x0400U
  #define ADC_HILIM4_HLMT8_MASK         0x0800U
  #define ADC_HILIM4_HLMT9_MASK         0x1000U
  #define ADC_HILIM4_HLMT10_MASK        0x2000U
  #define ADC_HILIM4_HLMT11_MASK        0x4000U
  #define ADC_HILIM4_HLMT_MASK          0x7FF8U
  #define ADC_HILIM4_HLMT_BITNUM        0x03U
  #define ADC_HILIM4                    (*((volatile word *)0x0000F0A8))


  /*** ADC_HILIM5 - ADC High Limit Register 5; 0x0000F0A9 ***/
  union {
    word Word;
  } ADC_HILIM5_STR;
  
  #define ADC_HILIM5_HLMT0_MASK         0x08U
  #define ADC_HILIM5_HLMT1_MASK         0x10U
  #define ADC_HILIM5_HLMT2_MASK         0x20U
  #define ADC_HILIM5_HLMT3_MASK         0x40U
  #define ADC_HILIM5_HLMT4_MASK         0x80U
  #define ADC_HILIM5_HLMT5_MASK         0x0100U
  #define ADC_HILIM5_HLMT6_MASK         0x0200U
  #define ADC_HILIM5_HLMT7_MASK         0x0400U
  #define ADC_HILIM5_HLMT8_MASK         0x0800U
  #define ADC_HILIM5_HLMT9_MASK         0x1000U
  #define ADC_HILIM5_HLMT10_MASK        0x2000U
  #define ADC_HILIM5_HLMT11_MASK        0x4000U
  #define ADC_HILIM5_HLMT_MASK          0x7FF8U
  #define ADC_HILIM5_HLMT_BITNUM        0x03U
  #define ADC_HILIM5                    (*((volatile word *)0x0000F0A9))


  /*** ADC_HILIM6 - ADC High Limit Register 6; 0x0000F0AA ***/
  union {
    word Word;
  } ADC_HILIM6_STR;
  
  #define ADC_HILIM6_HLMT0_MASK         0x08U
  #define ADC_HILIM6_HLMT1_MASK         0x10U
  #define ADC_HILIM6_HLMT2_MASK         0x20U
  #define ADC_HILIM6_HLMT3_MASK         0x40U
  #define ADC_HILIM6_HLMT4_MASK         0x80U
  #define ADC_HILIM6_HLMT5_MASK         0x0100U
  #define ADC_HILIM6_HLMT6_MASK         0x0200U
  #define ADC_HILIM6_HLMT7_MASK         0x0400U
  #define ADC_HILIM6_HLMT8_MASK         0x0800U
  #define ADC_HILIM6_HLMT9_MASK         0x1000U
  #define ADC_HILIM6_HLMT10_MASK        0x2000U
  #define ADC_HILIM6_HLMT11_MASK        0x4000U
  #define ADC_HILIM6_HLMT_MASK          0x7FF8U
  #define ADC_HILIM6_HLMT_BITNUM        0x03U
  #define ADC_HILIM6                    (*((volatile word *)0x0000F0AA))


  /*** ADC_HILIM7 - ADC High Limit Register 7; 0x0000F0AB ***/
  union {
    word Word;
  } ADC_HILIM7_STR;
  
  #define ADC_HILIM7_HLMT0_MASK         0x08U
  #define ADC_HILIM7_HLMT1_MASK         0x10U
  #define ADC_HILIM7_HLMT2_MASK         0x20U
  #define ADC_HILIM7_HLMT3_MASK         0x40U
  #define ADC_HILIM7_HLMT4_MASK         0x80U
  #define ADC_HILIM7_HLMT5_MASK         0x0100U
  #define ADC_HILIM7_HLMT6_MASK         0x0200U
  #define ADC_HILIM7_HLMT7_MASK         0x0400U
  #define ADC_HILIM7_HLMT8_MASK         0x0800U
  #define ADC_HILIM7_HLMT9_MASK         0x1000U
  #define ADC_HILIM7_HLMT10_MASK        0x2000U
  #define ADC_HILIM7_HLMT11_MASK        0x4000U
  #define ADC_HILIM7_HLMT_MASK          0x7FF8U
  #define ADC_HILIM7_HLMT_BITNUM        0x03U
  #define ADC_HILIM7                    (*((volatile word *)0x0000F0AB))


  /*** ADC_OFFST0 - ADC Offset Register 0; 0x0000F0AC ***/
  union {
    word Word;
  } ADC_OFFST0_STR;
  
  #define ADC_OFFST0_OFFSET0_MASK       0x08U
  #define ADC_OFFST0_OFFSET1_MASK       0x10U
  #define ADC_OFFST0_OFFSET2_MASK       0x20U
  #define ADC_OFFST0_OFFSET3_MASK       0x40U
  #define ADC_OFFST0_OFFSET4_MASK       0x80U
  #define ADC_OFFST0_OFFSET5_MASK       0x0100U
  #define ADC_OFFST0_OFFSET6_MASK       0x0200U
  #define ADC_OFFST0_OFFSET7_MASK       0x0400U
  #define ADC_OFFST0_OFFSET8_MASK       0x0800U
  #define ADC_OFFST0_OFFSET9_MASK       0x1000U
  #define ADC_OFFST0_OFFSET10_MASK      0x2000U
  #define ADC_OFFST0_OFFSET11_MASK      0x4000U
  #define ADC_OFFST0_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST0_OFFSET_BITNUM      0x03U
  #define ADC_OFFST0                    (*((volatile word *)0x0000F0AC))


  /*** ADC_OFFST1 - ADC Offset Register 1; 0x0000F0AD ***/
  union {
    word Word;
  } ADC_OFFST1_STR;
  
  #define ADC_OFFST1_OFFSET0_MASK       0x08U
  #define ADC_OFFST1_OFFSET1_MASK       0x10U
  #define ADC_OFFST1_OFFSET2_MASK       0x20U
  #define ADC_OFFST1_OFFSET3_MASK       0x40U
  #define ADC_OFFST1_OFFSET4_MASK       0x80U
  #define ADC_OFFST1_OFFSET5_MASK       0x0100U
  #define ADC_OFFST1_OFFSET6_MASK       0x0200U
  #define ADC_OFFST1_OFFSET7_MASK       0x0400U
  #define ADC_OFFST1_OFFSET8_MASK       0x0800U
  #define ADC_OFFST1_OFFSET9_MASK       0x1000U
  #define ADC_OFFST1_OFFSET10_MASK      0x2000U
  #define ADC_OFFST1_OFFSET11_MASK      0x4000U
  #define ADC_OFFST1_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST1_OFFSET_BITNUM      0x03U
  #define ADC_OFFST1                    (*((volatile word *)0x0000F0AD))


  /*** ADC_OFFST2 - ADC Offset Register 2; 0x0000F0AE ***/
  union {
    word Word;
  } ADC_OFFST2_STR;
  
  #define ADC_OFFST2_OFFSET0_MASK       0x08U
  #define ADC_OFFST2_OFFSET1_MASK       0x10U
  #define ADC_OFFST2_OFFSET2_MASK       0x20U
  #define ADC_OFFST2_OFFSET3_MASK       0x40U
  #define ADC_OFFST2_OFFSET4_MASK       0x80U
  #define ADC_OFFST2_OFFSET5_MASK       0x0100U
  #define ADC_OFFST2_OFFSET6_MASK       0x0200U
  #define ADC_OFFST2_OFFSET7_MASK       0x0400U
  #define ADC_OFFST2_OFFSET8_MASK       0x0800U
  #define ADC_OFFST2_OFFSET9_MASK       0x1000U
  #define ADC_OFFST2_OFFSET10_MASK      0x2000U
  #define ADC_OFFST2_OFFSET11_MASK      0x4000U
  #define ADC_OFFST2_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST2_OFFSET_BITNUM      0x03U
  #define ADC_OFFST2                    (*((volatile word *)0x0000F0AE))


  /*** ADC_OFFST3 - ADC Offset Register 3; 0x0000F0AF ***/
  union {
    word Word;
  } ADC_OFFST3_STR;
  
  #define ADC_OFFST3_OFFSET0_MASK       0x08U
  #define ADC_OFFST3_OFFSET1_MASK       0x10U
  #define ADC_OFFST3_OFFSET2_MASK       0x20U
  #define ADC_OFFST3_OFFSET3_MASK       0x40U
  #define ADC_OFFST3_OFFSET4_MASK       0x80U
  #define ADC_OFFST3_OFFSET5_MASK       0x0100U
  #define ADC_OFFST3_OFFSET6_MASK       0x0200U
  #define ADC_OFFST3_OFFSET7_MASK       0x0400U
  #define ADC_OFFST3_OFFSET8_MASK       0x0800U
  #define ADC_OFFST3_OFFSET9_MASK       0x1000U
  #define ADC_OFFST3_OFFSET10_MASK      0x2000U
  #define ADC_OFFST3_OFFSET11_MASK      0x4000U
  #define ADC_OFFST3_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST3_OFFSET_BITNUM      0x03U
  #define ADC_OFFST3                    (*((volatile word *)0x0000F0AF))


  /*** ADC_OFFST4 - ADC Offset Register 4; 0x0000F0B0 ***/
  union {
    word Word;
  } ADC_OFFST4_STR;
  
  #define ADC_OFFST4_OFFSET0_MASK       0x08U
  #define ADC_OFFST4_OFFSET1_MASK       0x10U
  #define ADC_OFFST4_OFFSET2_MASK       0x20U
  #define ADC_OFFST4_OFFSET3_MASK       0x40U
  #define ADC_OFFST4_OFFSET4_MASK       0x80U
  #define ADC_OFFST4_OFFSET5_MASK       0x0100U
  #define ADC_OFFST4_OFFSET6_MASK       0x0200U
  #define ADC_OFFST4_OFFSET7_MASK       0x0400U
  #define ADC_OFFST4_OFFSET8_MASK       0x0800U
  #define ADC_OFFST4_OFFSET9_MASK       0x1000U
  #define ADC_OFFST4_OFFSET10_MASK      0x2000U
  #define ADC_OFFST4_OFFSET11_MASK      0x4000U
  #define ADC_OFFST4_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST4_OFFSET_BITNUM      0x03U
  #define ADC_OFFST4                    (*((volatile word *)0x0000F0B0))


  /*** ADC_OFFST5 - ADC Offset Register 5; 0x0000F0B1 ***/
  union {
    word Word;
  } ADC_OFFST5_STR;
  
  #define ADC_OFFST5_OFFSET0_MASK       0x08U
  #define ADC_OFFST5_OFFSET1_MASK       0x10U
  #define ADC_OFFST5_OFFSET2_MASK       0x20U
  #define ADC_OFFST5_OFFSET3_MASK       0x40U
  #define ADC_OFFST5_OFFSET4_MASK       0x80U
  #define ADC_OFFST5_OFFSET5_MASK       0x0100U
  #define ADC_OFFST5_OFFSET6_MASK       0x0200U
  #define ADC_OFFST5_OFFSET7_MASK       0x0400U
  #define ADC_OFFST5_OFFSET8_MASK       0x0800U
  #define ADC_OFFST5_OFFSET9_MASK       0x1000U
  #define ADC_OFFST5_OFFSET10_MASK      0x2000U
  #define ADC_OFFST5_OFFSET11_MASK      0x4000U
  #define ADC_OFFST5_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST5_OFFSET_BITNUM      0x03U
  #define ADC_OFFST5                    (*((volatile word *)0x0000F0B1))


  /*** ADC_OFFST6 - ADC Offset Register 6; 0x0000F0B2 ***/
  union {
    word Word;
  } ADC_OFFST6_STR;
  
  #define ADC_OFFST6_OFFSET0_MASK       0x08U
  #define ADC_OFFST6_OFFSET1_MASK       0x10U
  #define ADC_OFFST6_OFFSET2_MASK       0x20U
  #define ADC_OFFST6_OFFSET3_MASK       0x40U
  #define ADC_OFFST6_OFFSET4_MASK       0x80U
  #define ADC_OFFST6_OFFSET5_MASK       0x0100U
  #define ADC_OFFST6_OFFSET6_MASK       0x0200U
  #define ADC_OFFST6_OFFSET7_MASK       0x0400U
  #define ADC_OFFST6_OFFSET8_MASK       0x0800U
  #define ADC_OFFST6_OFFSET9_MASK       0x1000U
  #define ADC_OFFST6_OFFSET10_MASK      0x2000U
  #define ADC_OFFST6_OFFSET11_MASK      0x4000U
  #define ADC_OFFST6_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST6_OFFSET_BITNUM      0x03U
  #define ADC_OFFST6                    (*((volatile word *)0x0000F0B2))


  /*** ADC_OFFST7 - ADC Offset Register 7; 0x0000F0B3 ***/
  union {
    word Word;
  } ADC_OFFST7_STR;
  
  #define ADC_OFFST7_OFFSET0_MASK       0x08U
  #define ADC_OFFST7_OFFSET1_MASK       0x10U
  #define ADC_OFFST7_OFFSET2_MASK       0x20U
  #define ADC_OFFST7_OFFSET3_MASK       0x40U
  #define ADC_OFFST7_OFFSET4_MASK       0x80U
  #define ADC_OFFST7_OFFSET5_MASK       0x0100U
  #define ADC_OFFST7_OFFSET6_MASK       0x0200U
  #define ADC_OFFST7_OFFSET7_MASK       0x0400U
  #define ADC_OFFST7_OFFSET8_MASK       0x0800U
  #define ADC_OFFST7_OFFSET9_MASK       0x1000U
  #define ADC_OFFST7_OFFSET10_MASK      0x2000U
  #define ADC_OFFST7_OFFSET11_MASK      0x4000U
  #define ADC_OFFST7_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST7_OFFSET_BITNUM      0x03U
  #define ADC_OFFST7                    (*((volatile word *)0x0000F0B3))


  /*** ADC_PWR - ADC Power Control Register; 0x0000F0B4 ***/
  union {
    word Word;
  } ADC_PWR_STR;
  
  #define ADC_PWR_PD0_MASK              0x01U
  #define ADC_PWR_PD1_MASK              0x02U
  #define ADC_PWR_APD_MASK              0x08U
  #define ADC_PWR_PUDELAY0_MASK         0x10U
  #define ADC_PWR_PUDELAY1_MASK         0x20U
  #define ADC_PWR_PUDELAY2_MASK         0x40U
  #define ADC_PWR_PUDELAY3_MASK         0x80U
  #define ADC_PWR_PUDELAY4_MASK         0x0100U
  #define ADC_PWR_PUDELAY5_MASK         0x0200U
  #define ADC_PWR_PSTS0_MASK            0x0400U
  #define ADC_PWR_PSTS1_MASK            0x0800U
  #define ADC_PWR_ASB_MASK              0x8000U
  #define ADC_PWR_PD_MASK               0x03U
  #define ADC_PWR_PD_BITNUM             0x00U
  #define ADC_PWR_PUDELAY_MASK          0x03F0U
  #define ADC_PWR_PUDELAY_BITNUM        0x04U
  #define ADC_PWR_PSTS_MASK             0x0C00U
  #define ADC_PWR_PSTS_BITNUM           0x0AU
  #define ADC_PWR                       (*((volatile word *)0x0000F0B4))


  /*** ADC_CAL - ADC Calibration Register; 0x0000F0B5 ***/
  union {
    word Word;
  } ADC_CAL_STR;
  
  #define ADC_CAL_SEL_DAC_A_MASK        0x01U
  #define ADC_CAL_SEL_DAC_B_MASK        0x02U
  #define ADC_CAL_SEL_VREFLO_A_MASK     0x1000U
  #define ADC_CAL_SEL_VREFH_A_MASK      0x2000U
  #define ADC_CAL_SEL_VREFLO_B_MASK     0x4000U
  #define ADC_CAL_SEL_VREFH_B_MASK      0x8000U
  #define ADC_CAL_SEL_DAC_x_MASK        0x03U
  #define ADC_CAL_SEL_DAC_x_BITNUM      0x00U
  #define ADC_CAL                       (*((volatile word *)0x0000F0B5))


  /*** ADC_GC1 - ADC Gain Control 1 Register; 0x0000F0B6 ***/
  union {
    word Word;
  } ADC_GC1_STR;
  
  #define ADC_GC1_GAIN00_MASK           0x01U
  #define ADC_GC1_GAIN01_MASK           0x02U
  #define ADC_GC1_GAIN10_MASK           0x04U
  #define ADC_GC1_GAIN11_MASK           0x08U
  #define ADC_GC1_GAIN20_MASK           0x10U
  #define ADC_GC1_GAIN21_MASK           0x20U
  #define ADC_GC1_GAIN30_MASK           0x40U
  #define ADC_GC1_GAIN31_MASK           0x80U
  #define ADC_GC1_GAIN40_MASK           0x0100U
  #define ADC_GC1_GAIN41_MASK           0x0200U
  #define ADC_GC1_GAIN50_MASK           0x0400U
  #define ADC_GC1_GAIN51_MASK           0x0800U
  #define ADC_GC1_GAIN60_MASK           0x1000U
  #define ADC_GC1_GAIN61_MASK           0x2000U
  #define ADC_GC1_GAIN70_MASK           0x4000U
  #define ADC_GC1_GAIN71_MASK           0x8000U
  #define ADC_GC1_GAIN0_MASK            0x03U
  #define ADC_GC1_GAIN0_BITNUM          0x00U
  #define ADC_GC1_GAIN1_MASK            0x0CU
  #define ADC_GC1_GAIN1_BITNUM          0x02U
  #define ADC_GC1_GAIN2_MASK            0x30U
  #define ADC_GC1_GAIN2_BITNUM          0x04U
  #define ADC_GC1_GAIN3_MASK            0xC0U
  #define ADC_GC1_GAIN3_BITNUM          0x06U
  #define ADC_GC1_GAIN4_MASK            0x0300U
  #define ADC_GC1_GAIN4_BITNUM          0x08U
  #define ADC_GC1_GAIN5_MASK            0x0C00U
  #define ADC_GC1_GAIN5_BITNUM          0x0AU
  #define ADC_GC1_GAIN6_MASK            0x3000U
  #define ADC_GC1_GAIN6_BITNUM          0x0CU
  #define ADC_GC1_GAIN7_MASK            0xC000U
  #define ADC_GC1_GAIN7_BITNUM          0x0EU
  #define ADC_GC1                       (*((volatile word *)0x0000F0B6))


  /*** ADC_GC2 - ADC Gain Control 2 Register; 0x0000F0B7 ***/
  union {
    word Word;
  } ADC_GC2_STR;
  
  #define ADC_GC2_GAIN80_MASK           0x01U
  #define ADC_GC2_GAIN81_MASK           0x02U
  #define ADC_GC2_GAIN90_MASK           0x04U
  #define ADC_GC2_GAIN91_MASK           0x08U
  #define ADC_GC2_GAIN100_MASK          0x10U
  #define ADC_GC2_GAIN101_MASK          0x20U
  #define ADC_GC2_GAIN110_MASK          0x40U
  #define ADC_GC2_GAIN111_MASK          0x80U
  #define ADC_GC2_GAIN120_MASK          0x0100U
  #define ADC_GC2_GAIN121_MASK          0x0200U
  #define ADC_GC2_GAIN130_MASK          0x0400U
  #define ADC_GC2_GAIN131_MASK          0x0800U
  #define ADC_GC2_GAIN140_MASK          0x1000U
  #define ADC_GC2_GAIN141_MASK          0x2000U
  #define ADC_GC2_GAIN150_MASK          0x4000U
  #define ADC_GC2_GAIN151_MASK          0x8000U
  #define ADC_GC2_GAIN8_MASK            0x03U
  #define ADC_GC2_GAIN8_BITNUM          0x00U
  #define ADC_GC2_GAIN9_MASK            0x0CU
  #define ADC_GC2_GAIN9_BITNUM          0x02U
  #define ADC_GC2_GAIN10_MASK           0x30U
  #define ADC_GC2_GAIN10_BITNUM         0x04U
  #define ADC_GC2_GAIN11_MASK           0xC0U
  #define ADC_GC2_GAIN11_BITNUM         0x06U
  #define ADC_GC2_GAIN12_MASK           0x0300U
  #define ADC_GC2_GAIN12_BITNUM         0x08U
  #define ADC_GC2_GAIN13_MASK           0x0C00U
  #define ADC_GC2_GAIN13_BITNUM         0x0AU
  #define ADC_GC2_GAIN14_MASK           0x3000U
  #define ADC_GC2_GAIN14_BITNUM         0x0CU
  #define ADC_GC2_GAIN15_MASK           0xC000U
  #define ADC_GC2_GAIN15_BITNUM         0x0EU
  #define ADC_GC2                       (*((volatile word *)0x0000F0B7))


  /*** ADC_SCTRL - ADC Scan Control Register; 0x0000F0B8 ***/
  union {
    word Word;
  } ADC_SCTRL_STR;
  
  #define ADC_SCTRL_SC0_MASK            0x01U
  #define ADC_SCTRL_SC1_MASK            0x02U
  #define ADC_SCTRL_SC2_MASK            0x04U
  #define ADC_SCTRL_SC3_MASK            0x08U
  #define ADC_SCTRL_SC4_MASK            0x10U
  #define ADC_SCTRL_SC5_MASK            0x20U
  #define ADC_SCTRL_SC6_MASK            0x40U
  #define ADC_SCTRL_SC7_MASK            0x80U
  #define ADC_SCTRL_SC8_MASK            0x0100U
  #define ADC_SCTRL_SC9_MASK            0x0200U
  #define ADC_SCTRL_SC10_MASK           0x0400U
  #define ADC_SCTRL_SC11_MASK           0x0800U
  #define ADC_SCTRL_SC12_MASK           0x1000U
  #define ADC_SCTRL_SC13_MASK           0x2000U
  #define ADC_SCTRL_SC14_MASK           0x4000U
  #define ADC_SCTRL_SC15_MASK           0x8000U
  #define ADC_SCTRL                     (*((volatile word *)0x0000F0B8))


  /*** ADC_PWR2 - ADC Power Control 2 Register; 0x0000F0B9 ***/
  union {
    word Word;
  } ADC_PWR2_STR;
  
  #define ADC_PWR2_SPEEDA0_MASK         0x01U
  #define ADC_PWR2_SPEEDA1_MASK         0x02U
  #define ADC_PWR2_SPEEDB0_MASK         0x04U
  #define ADC_PWR2_SPEEDB1_MASK         0x08U
  #define ADC_PWR2_DIV10_MASK           0x0100U
  #define ADC_PWR2_DIV11_MASK           0x0200U
  #define ADC_PWR2_DIV12_MASK           0x0400U
  #define ADC_PWR2_DIV13_MASK           0x0800U
  #define ADC_PWR2_DIV14_MASK           0x1000U
  #define ADC_PWR2_SPEEDA_MASK          0x03U
  #define ADC_PWR2_SPEEDA_BITNUM        0x00U
  #define ADC_PWR2_SPEEDB_MASK          0x0CU
  #define ADC_PWR2_SPEEDB_BITNUM        0x02U
  #define ADC_PWR2_DIV1_MASK            0x1F00U
  #define ADC_PWR2_DIV1_BITNUM          0x08U
  #define ADC_PWR2                      (*((volatile word *)0x0000F0B9))


  word Reserved0[6];                   /* Reserved (unused) registers */

} ADC_PRPH;

/******************************************
*** Peripheral INTC
*******************************************/
typedef volatile struct {
  /*** INTC_IPR0 - Interrupt Priority Register 0; 0x0000F0C0 ***/
  union {
    word Word;
  } INTC_IPR0_STR;
  
  #define INTC_IPR0_STPCNT_IPL0_MASK    0x01U
  #define INTC_IPR0_STPCNT_IPL1_MASK    0x02U
  #define INTC_IPR0_BKPT_IPL0_MASK      0x04U
  #define INTC_IPR0_BKPT_IPL1_MASK      0x08U
  #define INTC_IPR0_TRBUF_IPL0_MASK     0x10U
  #define INTC_IPR0_TRBUF_IPL1_MASK     0x20U
  #define INTC_IPR0_TX_REG_IPL0_MASK    0x40U
  #define INTC_IPR0_TX_REG_IPL1_MASK    0x80U
  #define INTC_IPR0_RX_REG_IPL0_MASK    0x0100U
  #define INTC_IPR0_RX_REG_IPL1_MASK    0x0200U
  #define INTC_IPR0_LVI_IPL0_MASK       0x0400U
  #define INTC_IPR0_LVI_IPL1_MASK       0x0800U
  #define INTC_IPR0_OCSS_IPL0_MASK      0x1000U
  #define INTC_IPR0_OCSS_IPL1_MASK      0x2000U
  #define INTC_IPR0_TMRB_3_IPL0_MASK    0x4000U
  #define INTC_IPR0_TMRB_3_IPL1_MASK    0x8000U
  #define INTC_IPR0_STPCNT_IPL_MASK     0x03U
  #define INTC_IPR0_STPCNT_IPL_BITNUM   0x00U
  #define INTC_IPR0_BKPT_IPL_MASK       0x0CU
  #define INTC_IPR0_BKPT_IPL_BITNUM     0x02U
  #define INTC_IPR0_TRBUF_IPL_MASK      0x30U
  #define INTC_IPR0_TRBUF_IPL_BITNUM    0x04U
  #define INTC_IPR0_TX_REG_IPL_MASK     0xC0U
  #define INTC_IPR0_TX_REG_IPL_BITNUM   0x06U
  #define INTC_IPR0_RX_REG_IPL_MASK     0x0300U
  #define INTC_IPR0_RX_REG_IPL_BITNUM   0x08U
  #define INTC_IPR0_LVI_IPL_MASK        0x0C00U
  #define INTC_IPR0_LVI_IPL_BITNUM      0x0AU
  #define INTC_IPR0_OCSS_IPL_MASK       0x3000U
  #define INTC_IPR0_OCSS_IPL_BITNUM     0x0CU
  #define INTC_IPR0_TMRB_3_IPL_MASK     0xC000U
  #define INTC_IPR0_TMRB_3_IPL_BITNUM   0x0EU
  #define INTC_IPR0                     (*((volatile word *)0x0000F0C0))


  /*** INTC_IPR1 - Interrupt Priority Register 1; 0x0000F0C1 ***/
  union {
    word Word;
  } INTC_IPR1_STR;
  
  #define INTC_IPR1_TMRB_2_IPL0_MASK    0x01U
  #define INTC_IPR1_TMRB_2_IPL1_MASK    0x02U
  #define INTC_IPR1_TMRB_1_IPL0_MASK    0x04U
  #define INTC_IPR1_TMRB_1_IPL1_MASK    0x08U
  #define INTC_IPR1_TMRB_0_IPL0_MASK    0x10U
  #define INTC_IPR1_TMRB_0_IPL1_MASK    0x20U
  #define INTC_IPR1_ADC_CC1_IPL0_MASK   0x40U
  #define INTC_IPR1_ADC_CC1_IPL1_MASK   0x80U
  #define INTC_IPR1_ADC_CC0_IPL0_MASK   0x0100U
  #define INTC_IPR1_ADC_CC0_IPL1_MASK   0x0200U
  #define INTC_IPR1_ADC_ERR_IPL0_MASK   0x0400U
  #define INTC_IPR1_ADC_ERR_IPL1_MASK   0x0800U
  #define INTC_IPR1_CAN_TX_IPL0_MASK    0x1000U
  #define INTC_IPR1_CAN_TX_IPL1_MASK    0x2000U
  #define INTC_IPR1_CAN_RX_IPL0_MASK    0x4000U
  #define INTC_IPR1_CAN_RX_IPL1_MASK    0x8000U
  #define INTC_IPR1_TMRB_2_IPL_MASK     0x03U
  #define INTC_IPR1_TMRB_2_IPL_BITNUM   0x00U
  #define INTC_IPR1_TMRB_1_IPL_MASK     0x0CU
  #define INTC_IPR1_TMRB_1_IPL_BITNUM   0x02U
  #define INTC_IPR1_TMRB_0_IPL_MASK     0x30U
  #define INTC_IPR1_TMRB_0_IPL_BITNUM   0x04U
  #define INTC_IPR1_ADC_CC1_IPL_MASK    0xC0U
  #define INTC_IPR1_ADC_CC1_IPL_BITNUM  0x06U
  #define INTC_IPR1_ADC_CC0_IPL_MASK    0x0300U
  #define INTC_IPR1_ADC_CC0_IPL_BITNUM  0x08U
  #define INTC_IPR1_ADC_ERR_IPL_MASK    0x0C00U
  #define INTC_IPR1_ADC_ERR_IPL_BITNUM  0x0AU
  #define INTC_IPR1_CAN_TX_IPL_MASK     0x3000U
  #define INTC_IPR1_CAN_TX_IPL_BITNUM   0x0CU
  #define INTC_IPR1_CAN_RX_IPL_MASK     0xC000U
  #define INTC_IPR1_CAN_RX_IPL_BITNUM   0x0EU
  #define INTC_IPR1                     (*((volatile word *)0x0000F0C1))


  /*** INTC_IPR2 - Interrupt Priority Register 2; 0x0000F0C2 ***/
  union {
    word Word;
  } INTC_IPR2_STR;
  
  #define INTC_IPR2_CAN_ERR_IPL0_MASK   0x01U
  #define INTC_IPR2_CAN_ERR_IPL1_MASK   0x02U
  #define INTC_IPR2_CAN_WAKEUP_IPL0_MASK 0x04U
  #define INTC_IPR2_CAN_WAKEUP_IPL1_MASK 0x08U
  #define INTC_IPR2_QSCI1_RERR_IPL0_MASK 0x10U
  #define INTC_IPR2_QSCI1_RERR_IPL1_MASK 0x20U
  #define INTC_IPR2_QSCI1_RCV_IPL0_MASK 0x40U
  #define INTC_IPR2_QSCI1_RCV_IPL1_MASK 0x80U
  #define INTC_IPR2_QSCI1_TIDLE_IPL0_MASK 0x0100U
  #define INTC_IPR2_QSCI1_TIDLE_IPL1_MASK 0x0200U
  #define INTC_IPR2_QSCI1_TDRE_IPL0_MASK 0x0400U
  #define INTC_IPR2_QSCI1_TDRE_IPL1_MASK 0x0800U
  #define INTC_IPR2_QSCI0_RERR_IPL0_MASK 0x1000U
  #define INTC_IPR2_QSCI0_RERR_IPL1_MASK 0x2000U
  #define INTC_IPR2_QSCI0_RCV_IPL0_MASK 0x4000U
  #define INTC_IPR2_QSCI0_RCV_IPL1_MASK 0x8000U
  #define INTC_IPR2_CAN_ERR_IPL_MASK    0x03U
  #define INTC_IPR2_CAN_ERR_IPL_BITNUM  0x00U
  #define INTC_IPR2_CAN_WAKEUP_IPL_MASK 0x0CU
  #define INTC_IPR2_CAN_WAKEUP_IPL_BITNUM 0x02U
  #define INTC_IPR2_QSCI1_RERR_IPL_MASK 0x30U
  #define INTC_IPR2_QSCI1_RERR_IPL_BITNUM 0x04U
  #define INTC_IPR2_QSCI1_RCV_IPL_MASK  0xC0U
  #define INTC_IPR2_QSCI1_RCV_IPL_BITNUM 0x06U
  #define INTC_IPR2_QSCI1_TIDLE_IPL_MASK 0x0300U
  #define INTC_IPR2_QSCI1_TIDLE_IPL_BITNUM 0x08U
  #define INTC_IPR2_QSCI1_TDRE_IPL_MASK 0x0C00U
  #define INTC_IPR2_QSCI1_TDRE_IPL_BITNUM 0x0AU
  #define INTC_IPR2_QSCI0_RERR_IPL_MASK 0x3000U
  #define INTC_IPR2_QSCI0_RERR_IPL_BITNUM 0x0CU
  #define INTC_IPR2_QSCI0_RCV_IPL_MASK  0xC000U
  #define INTC_IPR2_QSCI0_RCV_IPL_BITNUM 0x0EU
  #define INTC_IPR2                     (*((volatile word *)0x0000F0C2))


  /*** INTC_IPR3 - Interrupt Priority Register 3; 0x0000F0C3 ***/
  union {
    word Word;
  } INTC_IPR3_STR;
  
  #define INTC_IPR3_QSCI0_TIDLE_IPL0_MASK 0x01U
  #define INTC_IPR3_QSCI0_TIDLE_IPL1_MASK 0x02U
  #define INTC_IPR3_QSCI0_TDRE_IPL0_MASK 0x04U
  #define INTC_IPR3_QSCI0_TDRE_IPL1_MASK 0x08U
  #define INTC_IPR3_QSPI_XMIT_IPL0_MASK 0x10U
  #define INTC_IPR3_QSPI_XMIT_IPL1_MASK 0x20U
  #define INTC_IPR3_QSPI_RCV_IPL0_MASK  0x40U
  #define INTC_IPR3_QSPI_RCV_IPL1_MASK  0x80U
  #define INTC_IPR3_IIC1_IPL0_MASK      0x0100U
  #define INTC_IPR3_IIC1_IPL1_MASK      0x0200U
  #define INTC_IPR3_IIC0_IPL0_MASK      0x0400U
  #define INTC_IPR3_IIC0_IPL1_MASK      0x0800U
  #define INTC_IPR3_TMRA_3_IPL0_MASK    0x1000U
  #define INTC_IPR3_TMRA_3_IPL1_MASK    0x2000U
  #define INTC_IPR3_TMRA_2_IPL0_MASK    0x4000U
  #define INTC_IPR3_TMRA_2_IPL1_MASK    0x8000U
  #define INTC_IPR3_QSCI0_TIDLE_IPL_MASK 0x03U
  #define INTC_IPR3_QSCI0_TIDLE_IPL_BITNUM 0x00U
  #define INTC_IPR3_QSCI0_TDRE_IPL_MASK 0x0CU
  #define INTC_IPR3_QSCI0_TDRE_IPL_BITNUM 0x02U
  #define INTC_IPR3_QSPI_XMIT_IPL_MASK  0x30U
  #define INTC_IPR3_QSPI_XMIT_IPL_BITNUM 0x04U
  #define INTC_IPR3_QSPI_RCV_IPL_MASK   0xC0U
  #define INTC_IPR3_QSPI_RCV_IPL_BITNUM 0x06U
  #define INTC_IPR3_IIC1_IPL_MASK       0x0300U
  #define INTC_IPR3_IIC1_IPL_BITNUM     0x08U
  #define INTC_IPR3_IIC0_IPL_MASK       0x0C00U
  #define INTC_IPR3_IIC0_IPL_BITNUM     0x0AU
  #define INTC_IPR3_TMRA_3_IPL_MASK     0x3000U
  #define INTC_IPR3_TMRA_3_IPL_BITNUM   0x0CU
  #define INTC_IPR3_TMRA_2_IPL_MASK     0xC000U
  #define INTC_IPR3_TMRA_2_IPL_BITNUM   0x0EU
  #define INTC_IPR3                     (*((volatile word *)0x0000F0C3))


  /*** INTC_IPR4 - Interrupt Priority Register 4; 0x0000F0C4 ***/
  union {
    word Word;
  } INTC_IPR4_STR;
  
  #define INTC_IPR4_TMRA_1_IPL0_MASK    0x01U
  #define INTC_IPR4_TMRA_1_IPL1_MASK    0x02U
  #define INTC_IPR4_TMRA_0_IPL0_MASK    0x04U
  #define INTC_IPR4_TMRA_0_IPL1_MASK    0x08U
  #define INTC_IPR4_PWM_FAULT_IPL0_MASK 0x10U
  #define INTC_IPR4_PWM_FAULT_IPL1_MASK 0x20U
  #define INTC_IPR4_PWM_RERR_IPL0_MASK  0x40U
  #define INTC_IPR4_PWM_RERR_IPL1_MASK  0x80U
  #define INTC_IPR4_PWM_RELOAD3_IPL0_MASK 0x0100U
  #define INTC_IPR4_PWM_RELOAD3_IPL1_MASK 0x0200U
  #define INTC_IPR4_PWM_CAP3_IPL0_MASK  0x0400U
  #define INTC_IPR4_PWM_CAP3_IPL1_MASK  0x0800U
  #define INTC_IPR4_PWM_CMP3_IPL0_MASK  0x1000U
  #define INTC_IPR4_PWM_CMP3_IPL1_MASK  0x2000U
  #define INTC_IPR4_PWM_RELOAD2_IPL0_MASK 0x4000U
  #define INTC_IPR4_PWM_RELOAD2_IPL1_MASK 0x8000U
  #define INTC_IPR4_TMRA_1_IPL_MASK     0x03U
  #define INTC_IPR4_TMRA_1_IPL_BITNUM   0x00U
  #define INTC_IPR4_TMRA_0_IPL_MASK     0x0CU
  #define INTC_IPR4_TMRA_0_IPL_BITNUM   0x02U
  #define INTC_IPR4_PWM_FAULT_IPL_MASK  0x30U
  #define INTC_IPR4_PWM_FAULT_IPL_BITNUM 0x04U
  #define INTC_IPR4_PWM_RERR_IPL_MASK   0xC0U
  #define INTC_IPR4_PWM_RERR_IPL_BITNUM 0x06U
  #define INTC_IPR4_PWM_RELOAD3_IPL_MASK 0x0300U
  #define INTC_IPR4_PWM_RELOAD3_IPL_BITNUM 0x08U
  #define INTC_IPR4_PWM_CAP3_IPL_MASK   0x0C00U
  #define INTC_IPR4_PWM_CAP3_IPL_BITNUM 0x0AU
  #define INTC_IPR4_PWM_CMP3_IPL_MASK   0x3000U
  #define INTC_IPR4_PWM_CMP3_IPL_BITNUM 0x0CU
  #define INTC_IPR4_PWM_RELOAD2_IPL_MASK 0xC000U
  #define INTC_IPR4_PWM_RELOAD2_IPL_BITNUM 0x0EU
  #define INTC_IPR4                     (*((volatile word *)0x0000F0C4))


  /*** INTC_IPR5 - Interrupt Priority Register 5; 0x0000F0C5 ***/
  union {
    word Word;
  } INTC_IPR5_STR;
  
  #define INTC_IPR5_PWM_CMP2_IPL0_MASK  0x01U
  #define INTC_IPR5_PWM_CMP2_IPL1_MASK  0x02U
  #define INTC_IPR5_PWM_RELOAD1_IPL0_MASK 0x04U
  #define INTC_IPR5_PWM_RELOAD1_IPL1_MASK 0x08U
  #define INTC_IPR5_PWM_CMP1_IPL0_MASK  0x10U
  #define INTC_IPR5_PWM_CMP1_IPL1_MASK  0x20U
  #define INTC_IPR5_PWM_RELOAD0_IPL0_MASK 0x40U
  #define INTC_IPR5_PWM_RELOAD0_IPL1_MASK 0x80U
  #define INTC_IPR5_PWM_CMP0_IPL0_MASK  0x0100U
  #define INTC_IPR5_PWM_CMP0_IPL1_MASK  0x0200U
  #define INTC_IPR5_HFM_ERR_IPL0_MASK   0x0400U
  #define INTC_IPR5_HFM_ERR_IPL1_MASK   0x0800U
  #define INTC_IPR5_HFM_CC_IPL0_MASK    0x1000U
  #define INTC_IPR5_HFM_CC_IPL1_MASK    0x2000U
  #define INTC_IPR5_HFM_CBE_IPL0_MASK   0x4000U
  #define INTC_IPR5_HFM_CBE_IPL1_MASK   0x8000U
  #define INTC_IPR5_PWM_CMP2_IPL_MASK   0x03U
  #define INTC_IPR5_PWM_CMP2_IPL_BITNUM 0x00U
  #define INTC_IPR5_PWM_RELOAD1_IPL_MASK 0x0CU
  #define INTC_IPR5_PWM_RELOAD1_IPL_BITNUM 0x02U
  #define INTC_IPR5_PWM_CMP1_IPL_MASK   0x30U
  #define INTC_IPR5_PWM_CMP1_IPL_BITNUM 0x04U
  #define INTC_IPR5_PWM_RELOAD0_IPL_MASK 0xC0U
  #define INTC_IPR5_PWM_RELOAD0_IPL_BITNUM 0x06U
  #define INTC_IPR5_PWM_CMP0_IPL_MASK   0x0300U
  #define INTC_IPR5_PWM_CMP0_IPL_BITNUM 0x08U
  #define INTC_IPR5_HFM_ERR_IPL_MASK    0x0C00U
  #define INTC_IPR5_HFM_ERR_IPL_BITNUM  0x0AU
  #define INTC_IPR5_HFM_CC_IPL_MASK     0x3000U
  #define INTC_IPR5_HFM_CC_IPL_BITNUM   0x0CU
  #define INTC_IPR5_HFM_CBE_IPL_MASK    0xC000U
  #define INTC_IPR5_HFM_CBE_IPL_BITNUM  0x0EU
  #define INTC_IPR5                     (*((volatile word *)0x0000F0C5))


  /*** INTC_IPR6 - Interrupt Priority Register 6; 0x0000F0C6 ***/
  union {
    word Word;
  } INTC_IPR6_STR;
  
  #define INTC_IPR6_CMPC_IPL0_MASK      0x01U
  #define INTC_IPR6_CMPC_IPL1_MASK      0x02U
  #define INTC_IPR6_CMPB_IPL0_MASK      0x04U
  #define INTC_IPR6_CMPB_IPL1_MASK      0x08U
  #define INTC_IPR6_CMPA_IPL0_MASK      0x10U
  #define INTC_IPR6_CMPA_IPL1_MASK      0x20U
  #define INTC_IPR6_GPIOF_IPL0_MASK     0x40U
  #define INTC_IPR6_GPIOF_IPL1_MASK     0x80U
  #define INTC_IPR6_GPIOE_IPL0_MASK     0x0100U
  #define INTC_IPR6_GPIOE_IPL1_MASK     0x0200U
  #define INTC_IPR6_GPIOD_IPL0_MASK     0x0400U
  #define INTC_IPR6_GPIOD_IPL1_MASK     0x0800U
  #define INTC_IPR6_GPIOC_IPL0_MASK     0x1000U
  #define INTC_IPR6_GPIOC_IPL1_MASK     0x2000U
  #define INTC_IPR6_GPIOB_IPL0_MASK     0x4000U
  #define INTC_IPR6_GPIOB_IPL1_MASK     0x8000U
  #define INTC_IPR6_CMPC_IPL_MASK       0x03U
  #define INTC_IPR6_CMPC_IPL_BITNUM     0x00U
  #define INTC_IPR6_CMPB_IPL_MASK       0x0CU
  #define INTC_IPR6_CMPB_IPL_BITNUM     0x02U
  #define INTC_IPR6_CMPA_IPL_MASK       0x30U
  #define INTC_IPR6_CMPA_IPL_BITNUM     0x04U
  #define INTC_IPR6_GPIOF_IPL_MASK      0xC0U
  #define INTC_IPR6_GPIOF_IPL_BITNUM    0x06U
  #define INTC_IPR6_GPIOE_IPL_MASK      0x0300U
  #define INTC_IPR6_GPIOE_IPL_BITNUM    0x08U
  #define INTC_IPR6_GPIOD_IPL_MASK      0x0C00U
  #define INTC_IPR6_GPIOD_IPL_BITNUM    0x0AU
  #define INTC_IPR6_GPIOC_IPL_MASK      0x3000U
  #define INTC_IPR6_GPIOC_IPL_BITNUM    0x0CU
  #define INTC_IPR6_GPIOB_IPL_MASK      0xC000U
  #define INTC_IPR6_GPIOB_IPL_BITNUM    0x0EU
  #define INTC_IPR6                     (*((volatile word *)0x0000F0C6))


  /*** INTC_IPR7 - Interrupt Priority Register 7; 0x0000F0C7 ***/
  union {
    word Word;
  } INTC_IPR7_STR;
  
  #define INTC_IPR7_GPIOA_IPL0_MASK     0x01U
  #define INTC_IPR7_GPIOA_IPL1_MASK     0x02U
  #define INTC_IPR7_GPIOA_IPL_MASK      0x03U
  #define INTC_IPR7_GPIOA_IPL_BITNUM    0x00U
  #define INTC_IPR7                     (*((volatile word *)0x0000F0C7))


  /*** INTC_VBA - Vector Base Address Register; 0x0000F0C8 ***/
  union {
    word Word;
  } INTC_VBA_STR;
  
  #define INTC_VBA_VECTOR_BASE_ADDRESS0_MASK 0x01U
  #define INTC_VBA_VECTOR_BASE_ADDRESS1_MASK 0x02U
  #define INTC_VBA_VECTOR_BASE_ADDRESS2_MASK 0x04U
  #define INTC_VBA_VECTOR_BASE_ADDRESS3_MASK 0x08U
  #define INTC_VBA_VECTOR_BASE_ADDRESS4_MASK 0x10U
  #define INTC_VBA_VECTOR_BASE_ADDRESS5_MASK 0x20U
  #define INTC_VBA_VECTOR_BASE_ADDRESS6_MASK 0x40U
  #define INTC_VBA_VECTOR_BASE_ADDRESS7_MASK 0x80U
  #define INTC_VBA_VECTOR_BASE_ADDRESS8_MASK 0x0100U
  #define INTC_VBA_VECTOR_BASE_ADDRESS9_MASK 0x0200U
  #define INTC_VBA_VECTOR_BASE_ADDRESS10_MASK 0x0400U
  #define INTC_VBA_VECTOR_BASE_ADDRESS11_MASK 0x0800U
  #define INTC_VBA_VECTOR_BASE_ADDRESS12_MASK 0x1000U
  #define INTC_VBA_VECTOR_BASE_ADDRESS_MASK 0x1FFFU
  #define INTC_VBA_VECTOR_BASE_ADDRESS_BITNUM 0x00U
  #define INTC_VBA                      (*((volatile word *)0x0000F0C8))


  /*** INTC_FIM0 - Fast Interrupt 0 Match Register; 0x0000F0C9 ***/
  union {
    word Word;
  } INTC_FIM0_STR;
  
  #define INTC_FIM0_FAST_INTERRUPT_00_MASK 0x01U
  #define INTC_FIM0_FAST_INTERRUPT_01_MASK 0x02U
  #define INTC_FIM0_FAST_INTERRUPT_02_MASK 0x04U
  #define INTC_FIM0_FAST_INTERRUPT_03_MASK 0x08U
  #define INTC_FIM0_FAST_INTERRUPT_04_MASK 0x10U
  #define INTC_FIM0_FAST_INTERRUPT_05_MASK 0x20U
  #define INTC_FIM0_FAST_INTERRUPT_06_MASK 0x40U
  #define INTC_FIM0_FAST_INTERRUPT_0_MASK 0x7FU
  #define INTC_FIM0_FAST_INTERRUPT_0_BITNUM 0x00U
  #define INTC_FIM0                     (*((volatile word *)0x0000F0C9))


  /*** INTC_FIVAL0 - Fast Interrupt 0 Vector Address Low Register; 0x0000F0CA ***/
  union {
    word Word;
  } INTC_FIVAL0_STR;
  
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW0_MASK 0x01U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW1_MASK 0x02U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW2_MASK 0x04U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW3_MASK 0x08U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW4_MASK 0x10U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW5_MASK 0x20U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW6_MASK 0x40U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW7_MASK 0x80U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW8_MASK 0x0100U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW9_MASK 0x0200U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW10_MASK 0x0400U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW11_MASK 0x0800U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW12_MASK 0x1000U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW13_MASK 0x2000U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW14_MASK 0x4000U
  #define INTC_FIVAL0_FI_0_VECTOR_ADDRESS_LOW15_MASK 0x8000U
  #define INTC_FIVAL0                   (*((volatile word *)0x0000F0CA))


  /*** INTC_FIVAH0 - Fast Interrupt 0 Vector Address High Register; 0x0000F0CB ***/
  union {
    word Word;
  } INTC_FIVAH0_STR;
  
  #define INTC_FIVAH0_FI_0_VECTOR_ADDRESS_HIGH0_MASK 0x01U
  #define INTC_FIVAH0_FI_0_VECTOR_ADDRESS_HIGH1_MASK 0x02U
  #define INTC_FIVAH0_FI_0_VECTOR_ADDRESS_HIGH2_MASK 0x04U
  #define INTC_FIVAH0_FI_0_VECTOR_ADDRESS_HIGH3_MASK 0x08U
  #define INTC_FIVAH0_FI_0_VECTOR_ADDRESS_HIGH4_MASK 0x10U
  #define INTC_FIVAH0_FI_0_VECTOR_ADDRESS_HIGH_MASK 0x1FU
  #define INTC_FIVAH0_FI_0_VECTOR_ADDRESS_HIGH_BITNUM 0x00U
  #define INTC_FIVAH0                   (*((volatile word *)0x0000F0CB))


  /*** INTC_FIM1 - Fast Interrupt 1 Match Register; 0x0000F0CC ***/
  union {
    word Word;
  } INTC_FIM1_STR;
  
  #define INTC_FIM1_FAST_INTERRUPT_10_MASK 0x01U
  #define INTC_FIM1_FAST_INTERRUPT_11_MASK 0x02U
  #define INTC_FIM1_FAST_INTERRUPT_12_MASK 0x04U
  #define INTC_FIM1_FAST_INTERRUPT_13_MASK 0x08U
  #define INTC_FIM1_FAST_INTERRUPT_14_MASK 0x10U
  #define INTC_FIM1_FAST_INTERRUPT_15_MASK 0x20U
  #define INTC_FIM1_FAST_INTERRUPT_16_MASK 0x40U
  #define INTC_FIM1_FAST_INTERRUPT_1_MASK 0x7FU
  #define INTC_FIM1_FAST_INTERRUPT_1_BITNUM 0x00U
  #define INTC_FIM1                     (*((volatile word *)0x0000F0CC))


  /*** INTC_FIVAL1 - Fast Interrupt 1 Vector Address Low Register; 0x0000F0CD ***/
  union {
    word Word;
  } INTC_FIVAL1_STR;
  
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW0_MASK 0x01U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW1_MASK 0x02U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW2_MASK 0x04U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW3_MASK 0x08U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW4_MASK 0x10U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW5_MASK 0x20U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW6_MASK 0x40U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW7_MASK 0x80U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW8_MASK 0x0100U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW9_MASK 0x0200U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW10_MASK 0x0400U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW11_MASK 0x0800U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW12_MASK 0x1000U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW13_MASK 0x2000U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW14_MASK 0x4000U
  #define INTC_FIVAL1_FI_1_VECTOR_ADDRESS_LOW15_MASK 0x8000U
  #define INTC_FIVAL1                   (*((volatile word *)0x0000F0CD))


  /*** INTC_FIVAH1 - Fast Interrupt 1 Vector Address High Register; 0x0000F0CE ***/
  union {
    word Word;
  } INTC_FIVAH1_STR;
  
  #define INTC_FIVAH1_FI_1_VECTOR_ADDRESS_HIGH0_MASK 0x01U
  #define INTC_FIVAH1_FI_1_VECTOR_ADDRESS_HIGH1_MASK 0x02U
  #define INTC_FIVAH1_FI_1_VECTOR_ADDRESS_HIGH2_MASK 0x04U
  #define INTC_FIVAH1_FI_1_VECTOR_ADDRESS_HIGH3_MASK 0x08U
  #define INTC_FIVAH1_FI_1_VECTOR_ADDRESS_HIGH4_MASK 0x10U
  #define INTC_FIVAH1_FI_1_VECTOR_ADDRESS_HIGH_MASK 0x1FU
  #define INTC_FIVAH1_FI_1_VECTOR_ADDRESS_HIGH_BITNUM 0x00U
  #define INTC_FIVAH1                   (*((volatile word *)0x0000F0CE))


  /*** INTC_IRQP0 - IRQ Pending Register 0; 0x0000F0CF ***/
  union {
    word Word;
  } INTC_IRQP0_STR;
  
  #define INTC_IRQP0_PENDING0_MASK      0x02U
  #define INTC_IRQP0_PENDING1_MASK      0x04U
  #define INTC_IRQP0_PENDING2_MASK      0x08U
  #define INTC_IRQP0_PENDING3_MASK      0x10U
  #define INTC_IRQP0_PENDING4_MASK      0x20U
  #define INTC_IRQP0_PENDING5_MASK      0x40U
  #define INTC_IRQP0_PENDING6_MASK      0x80U
  #define INTC_IRQP0_PENDING7_MASK      0x0100U
  #define INTC_IRQP0_PENDING8_MASK      0x0200U
  #define INTC_IRQP0_PENDING9_MASK      0x0400U
  #define INTC_IRQP0_PENDING10_MASK     0x0800U
  #define INTC_IRQP0_PENDING11_MASK     0x1000U
  #define INTC_IRQP0_PENDING12_MASK     0x2000U
  #define INTC_IRQP0_PENDING13_MASK     0x4000U
  #define INTC_IRQP0_PENDING14_MASK     0x8000U
  #define INTC_IRQP0_PENDING_MASK       0xFFFEU
  #define INTC_IRQP0_PENDING_BITNUM     0x01U
  #define INTC_IRQP0                    (*((volatile word *)0x0000F0CF))


  /*** INTC_IRQP1 - IRQ Pending Register 1; 0x0000F0D0 ***/
  union {
    word Word;
  } INTC_IRQP1_STR;
  
  #define INTC_IRQP1_PENDING0_MASK      0x01U
  #define INTC_IRQP1_PENDING1_MASK      0x02U
  #define INTC_IRQP1_PENDING2_MASK      0x04U
  #define INTC_IRQP1_PENDING3_MASK      0x08U
  #define INTC_IRQP1_PENDING4_MASK      0x10U
  #define INTC_IRQP1_PENDING5_MASK      0x20U
  #define INTC_IRQP1_PENDING6_MASK      0x40U
  #define INTC_IRQP1_PENDING7_MASK      0x80U
  #define INTC_IRQP1_PENDING8_MASK      0x0100U
  #define INTC_IRQP1_PENDING9_MASK      0x0200U
  #define INTC_IRQP1_PENDING10_MASK     0x0400U
  #define INTC_IRQP1_PENDING11_MASK     0x0800U
  #define INTC_IRQP1_PENDING12_MASK     0x1000U
  #define INTC_IRQP1_PENDING13_MASK     0x2000U
  #define INTC_IRQP1_PENDING14_MASK     0x4000U
  #define INTC_IRQP1_PENDING15_MASK     0x8000U
  #define INTC_IRQP1                    (*((volatile word *)0x0000F0D0))


  /*** INTC_IRQP2 - IRQ Pending Register 2; 0x0000F0D1 ***/
  union {
    word Word;
  } INTC_IRQP2_STR;
  
  #define INTC_IRQP2_PENDING0_MASK      0x01U
  #define INTC_IRQP2_PENDING1_MASK      0x02U
  #define INTC_IRQP2_PENDING2_MASK      0x04U
  #define INTC_IRQP2_PENDING3_MASK      0x08U
  #define INTC_IRQP2_PENDING4_MASK      0x10U
  #define INTC_IRQP2_PENDING5_MASK      0x20U
  #define INTC_IRQP2_PENDING6_MASK      0x40U
  #define INTC_IRQP2_PENDING7_MASK      0x80U
  #define INTC_IRQP2_PENDING8_MASK      0x0100U
  #define INTC_IRQP2_PENDING9_MASK      0x0200U
  #define INTC_IRQP2_PENDING10_MASK     0x0400U
  #define INTC_IRQP2_PENDING11_MASK     0x0800U
  #define INTC_IRQP2_PENDING12_MASK     0x1000U
  #define INTC_IRQP2_PENDING13_MASK     0x2000U
  #define INTC_IRQP2_PENDING14_MASK     0x4000U
  #define INTC_IRQP2_PENDING15_MASK     0x8000U
  #define INTC_IRQP2                    (*((volatile word *)0x0000F0D1))


  /*** INTC_IRQP3 - IRQ Pending Register 3; 0x0000F0D2 ***/
  union {
    word Word;
  } INTC_IRQP3_STR;
  
  #define INTC_IRQP3_PENDING0_MASK      0x01U
  #define INTC_IRQP3_PENDING1_MASK      0x02U
  #define INTC_IRQP3_PENDING2_MASK      0x04U
  #define INTC_IRQP3_PENDING3_MASK      0x08U
  #define INTC_IRQP3_PENDING4_MASK      0x10U
  #define INTC_IRQP3_PENDING5_MASK      0x20U
  #define INTC_IRQP3_PENDING6_MASK      0x40U
  #define INTC_IRQP3_PENDING7_MASK      0x80U
  #define INTC_IRQP3_PENDING8_MASK      0x0100U
  #define INTC_IRQP3_PENDING9_MASK      0x0200U
  #define INTC_IRQP3_PENDING10_MASK     0x0400U
  #define INTC_IRQP3_PENDING11_MASK     0x0800U
  #define INTC_IRQP3_PENDING12_MASK     0x1000U
  #define INTC_IRQP3_PENDING13_MASK     0x2000U
  #define INTC_IRQP3_PENDING14_MASK     0x4000U
  #define INTC_IRQP3_PENDING15_MASK     0x8000U
  #define INTC_IRQP3                    (*((volatile word *)0x0000F0D2))


  /*** INTC_IRQP4 - IRQ Pending Register 4; 0x0000F0D3 ***/
  union {
    word Word;
  } INTC_IRQP4_STR;
  
  #define INTC_IRQP4_PENDING0_MASK      0x01U
  #define INTC_IRQP4_PENDING1_MASK      0x02U
  #define INTC_IRQP4_PENDING_MASK       0x03U
  #define INTC_IRQP4_PENDING_BITNUM     0x00U
  #define INTC_IRQP4                    (*((volatile word *)0x0000F0D3))


  /*** INTC_CTRL - Interrupt Control Register; 0x0000F0D4 ***/
  union {
    word Word;
  } INTC_CTRL_STR;
  
  #define INTC_CTRL_INT_DIS_MASK        0x20U
  #define INTC_CTRL_VAB0_MASK           0x40U
  #define INTC_CTRL_VAB1_MASK           0x80U
  #define INTC_CTRL_VAB2_MASK           0x0100U
  #define INTC_CTRL_VAB3_MASK           0x0200U
  #define INTC_CTRL_VAB4_MASK           0x0400U
  #define INTC_CTRL_VAB5_MASK           0x0800U
  #define INTC_CTRL_VAB6_MASK           0x1000U
  #define INTC_CTRL_IPIC0_MASK          0x2000U
  #define INTC_CTRL_IPIC1_MASK          0x4000U
  #define INTC_CTRL_INT_MASK            0x8000U
  #define INTC_CTRL_VAB_MASK            0x1FC0U
  #define INTC_CTRL_VAB_BITNUM          0x06U
  #define INTC_CTRL_IPIC_MASK           0x6000U
  #define INTC_CTRL_IPIC_BITNUM         0x0DU
  #define INTC_CTRL                     (*((volatile word *)0x0000F0D4))


  word Reserved0[11];                  /* Reserved (unused) registers */

} INTC_PRPH;

/******************************************
*** Peripheral SIM
*******************************************/
typedef volatile struct {
  /*** SIM_CTRL - SIM Control Register; 0x0000F0E0 ***/
  union {
    word Word;
  } SIM_CTRL_STR;
  
  #define SIM_CTRL_WAIT_DISABLE0_MASK   0x01U
  #define SIM_CTRL_WAIT_DISABLE1_MASK   0x02U
  #define SIM_CTRL_STOP_DISABLE0_MASK   0x04U
  #define SIM_CTRL_STOP_DISABLE1_MASK   0x08U
  #define SIM_CTRL_SWRST_MASK           0x10U
  #define SIM_CTRL_ONCEEBL_MASK         0x20U
  #define SIM_CTRL_WAIT_DISABLE_MASK    0x03U
  #define SIM_CTRL_WAIT_DISABLE_BITNUM  0x00U
  #define SIM_CTRL_STOP_DISABLE_MASK    0x0CU
  #define SIM_CTRL_STOP_DISABLE_BITNUM  0x02U
  #define SIM_CTRL                      (*((volatile word *)0x0000F0E0))


  /*** SIM_RSTAT - SIM Reset Status Register; 0x0000F0E1 ***/
  union {
    word Word;
  } SIM_RSTAT_STR;
  
  #define SIM_RSTAT_POR_MASK            0x04U
  #define SIM_RSTAT_EXTR_MASK           0x08U
  #define SIM_RSTAT_COP_LOR_MASK        0x10U
  #define SIM_RSTAT_COP_CPU_MASK        0x20U
  #define SIM_RSTAT_SWR_MASK            0x40U
  #define SIM_RSTAT                     (*((volatile word *)0x0000F0E1))


  /*** SIM_SCR0 - SIM Software Control Register 0; 0x0000F0E2 ***/
  union {
    word Word;
  } SIM_SCR0_STR;
  
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_00_MASK 0x01U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_01_MASK 0x02U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_02_MASK 0x04U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_03_MASK 0x08U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_04_MASK 0x10U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_05_MASK 0x20U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_06_MASK 0x40U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_07_MASK 0x80U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_08_MASK 0x0100U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_09_MASK 0x0200U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_010_MASK 0x0400U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_011_MASK 0x0800U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_012_MASK 0x1000U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_013_MASK 0x2000U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_014_MASK 0x4000U
  #define SIM_SCR0_SOFTWARE_CONTROL_DATA_015_MASK 0x8000U
  #define SIM_SCR0                      (*((volatile word *)0x0000F0E2))


  /*** SIM_SCR1 - SIM Software Control Register 1; 0x0000F0E3 ***/
  union {
    word Word;
  } SIM_SCR1_STR;
  
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_10_MASK 0x01U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_11_MASK 0x02U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_12_MASK 0x04U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_13_MASK 0x08U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_14_MASK 0x10U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_15_MASK 0x20U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_16_MASK 0x40U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_17_MASK 0x80U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_18_MASK 0x0100U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_19_MASK 0x0200U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_110_MASK 0x0400U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_111_MASK 0x0800U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_112_MASK 0x1000U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_113_MASK 0x2000U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_114_MASK 0x4000U
  #define SIM_SCR1_SOFTWARE_CONTROL_DATA_115_MASK 0x8000U
  #define SIM_SCR1                      (*((volatile word *)0x0000F0E3))


  /*** SIM_SCR2 - SIM Software Control Register 2; 0x0000F0E4 ***/
  union {
    word Word;
  } SIM_SCR2_STR;
  
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_20_MASK 0x01U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_21_MASK 0x02U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_22_MASK 0x04U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_23_MASK 0x08U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_24_MASK 0x10U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_25_MASK 0x20U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_26_MASK 0x40U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_27_MASK 0x80U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_28_MASK 0x0100U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_29_MASK 0x0200U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_210_MASK 0x0400U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_211_MASK 0x0800U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_212_MASK 0x1000U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_213_MASK 0x2000U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_214_MASK 0x4000U
  #define SIM_SCR2_SOFTWARE_CONTROL_DATA_215_MASK 0x8000U
  #define SIM_SCR2                      (*((volatile word *)0x0000F0E4))


  /*** SIM_SCR3 - SIM Software Control Register 3; 0x0000F0E5 ***/
  union {
    word Word;
  } SIM_SCR3_STR;
  
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_30_MASK 0x01U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_31_MASK 0x02U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_32_MASK 0x04U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_33_MASK 0x08U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_34_MASK 0x10U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_35_MASK 0x20U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_36_MASK 0x40U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_37_MASK 0x80U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_38_MASK 0x0100U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_39_MASK 0x0200U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_310_MASK 0x0400U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_311_MASK 0x0800U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_312_MASK 0x1000U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_313_MASK 0x2000U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_314_MASK 0x4000U
  #define SIM_SCR3_SOFTWARE_CONTROL_DATA_315_MASK 0x8000U
  #define SIM_SCR3                      (*((volatile word *)0x0000F0E5))


  /*** SIM_MSHID - SIM Most Significant Half JTAG ID; 0x0000F0E6 ***/
  union {
    word Word;
  } SIM_MSHID_STR;
  
  #define SIM_MSHID_SIM_MSH_ID0_MASK    0x01U
  #define SIM_MSHID_SIM_MSH_ID1_MASK    0x02U
  #define SIM_MSHID_SIM_MSH_ID2_MASK    0x04U
  #define SIM_MSHID_SIM_MSH_ID3_MASK    0x08U
  #define SIM_MSHID_SIM_MSH_ID4_MASK    0x10U
  #define SIM_MSHID_SIM_MSH_ID5_MASK    0x20U
  #define SIM_MSHID_SIM_MSH_ID6_MASK    0x40U
  #define SIM_MSHID_SIM_MSH_ID7_MASK    0x80U
  #define SIM_MSHID_SIM_MSH_ID8_MASK    0x0100U
  #define SIM_MSHID_SIM_MSH_ID9_MASK    0x0200U
  #define SIM_MSHID_SIM_MSH_ID10_MASK   0x0400U
  #define SIM_MSHID_SIM_MSH_ID11_MASK   0x0800U
  #define SIM_MSHID_SIM_MSH_ID12_MASK   0x1000U
  #define SIM_MSHID_SIM_MSH_ID13_MASK   0x2000U
  #define SIM_MSHID_SIM_MSH_ID14_MASK   0x4000U
  #define SIM_MSHID_SIM_MSH_ID15_MASK   0x8000U
  #define SIM_MSHID                     (*((volatile word *)0x0000F0E6))


  /*** SIM_LSHID - SIM Least Significant Half JTAG ID; 0x0000F0E7 ***/
  union {
    word Word;
  } SIM_LSHID_STR;
  
  #define SIM_LSHID_SIM_LSH_ID0_MASK    0x01U
  #define SIM_LSHID_SIM_LSH_ID1_MASK    0x02U
  #define SIM_LSHID_SIM_LSH_ID2_MASK    0x04U
  #define SIM_LSHID_SIM_LSH_ID3_MASK    0x08U
  #define SIM_LSHID_SIM_LSH_ID4_MASK    0x10U
  #define SIM_LSHID_SIM_LSH_ID5_MASK    0x20U
  #define SIM_LSHID_SIM_LSH_ID6_MASK    0x40U
  #define SIM_LSHID_SIM_LSH_ID7_MASK    0x80U
  #define SIM_LSHID_SIM_LSH_ID8_MASK    0x0100U
  #define SIM_LSHID_SIM_LSH_ID9_MASK    0x0200U
  #define SIM_LSHID_SIM_LSH_ID10_MASK   0x0400U
  #define SIM_LSHID_SIM_LSH_ID11_MASK   0x0800U
  #define SIM_LSHID_SIM_LSH_ID12_MASK   0x1000U
  #define SIM_LSHID_SIM_LSH_ID13_MASK   0x2000U
  #define SIM_LSHID_SIM_LSH_ID14_MASK   0x4000U
  #define SIM_LSHID_SIM_LSH_ID15_MASK   0x8000U
  #define SIM_LSHID                     (*((volatile word *)0x0000F0E7))


  /*** SIM_PWR - Power Control Register; 0x0000F0E8 ***/
  union {
    word Word;
  } SIM_PWR_STR;
  
  #define SIM_PWR_LRSTDBY0_MASK         0x01U
  #define SIM_PWR_LRSTDBY1_MASK         0x02U
  #define SIM_PWR_LRSTDBY_MASK          0x03U
  #define SIM_PWR_LRSTDBY_BITNUM        0x00U
  #define SIM_PWR                       (*((volatile word *)0x0000F0E8))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** SIM_CLKOUT - SIM CLKO Select Register; 0x0000F0EA ***/
  union {
    word Word;
  } SIM_CLKOUT_STR;
  
  #define SIM_CLKOUT_CLKOSEL0_MASK      0x01U
  #define SIM_CLKOUT_CLKOSEL1_MASK      0x02U
  #define SIM_CLKOUT_CLKOSEL2_MASK      0x04U
  #define SIM_CLKOUT_CLKOSEL3_MASK      0x08U
  #define SIM_CLKOUT_CLKOSEL4_MASK      0x10U
  #define SIM_CLKOUT_CLKDIS_MASK        0x20U
  #define SIM_CLKOUT_TEST_MASK          0x40U
  #define SIM_CLKOUT_CLKOSEL_MASK       0x1FU
  #define SIM_CLKOUT_CLKOSEL_BITNUM     0x00U
  #define SIM_CLKOUT                    (*((volatile word *)0x0000F0EA))


  /*** SIM_PCR - SIM Peripheral Clock Rate Register; 0x0000F0EB ***/
  union {
    word Word;
  } SIM_PCR_STR;
  
  #define SIM_PCR_SCI1_CR_MASK          0x1000U
  #define SIM_PCR_SCI0_CR_MASK          0x2000U
  #define SIM_PCR_TMRB_CR_MASK          0x4000U
  #define SIM_PCR_TMRA_CR_MASK          0x8000U
  #define SIM_PCR                       (*((volatile word *)0x0000F0EB))


  /*** SIM_PCE0 - SIM Peripheral Clock Enable Register 0; 0x0000F0EC ***/
  union {
    word Word;
  } SIM_PCE0_STR;
  
  #define SIM_PCE0_GPIOF_MASK           0x02U
  #define SIM_PCE0_GPIOE_MASK           0x04U
  #define SIM_PCE0_GPIOD_MASK           0x08U
  #define SIM_PCE0_GPIOC_MASK           0x10U
  #define SIM_PCE0_GPIOB_MASK           0x20U
  #define SIM_PCE0_GPIOA_MASK           0x40U
  #define SIM_PCE0_ADC_MASK             0x80U
  #define SIM_PCE0_TB3_MASK             0x0100U
  #define SIM_PCE0_TB2_MASK             0x0200U
  #define SIM_PCE0_TB1_MASK             0x0400U
  #define SIM_PCE0_TB0_MASK             0x0800U
  #define SIM_PCE0_TA3_MASK             0x1000U
  #define SIM_PCE0_TA2_MASK             0x2000U
  #define SIM_PCE0_TA1_MASK             0x4000U
  #define SIM_PCE0_TA0_MASK             0x8000U
  #define SIM_PCE0                      (*((volatile word *)0x0000F0EC))


  /*** SIM_PCE1 - SIM Peripheral Clock Enable Register 1; 0x0000F0ED ***/
  union {
    word Word;
  } SIM_PCE1_STR;
  
  #define SIM_PCE1_MSCAN_MASK           0x01U
  #define SIM_PCE1_HFM_MASK             0x02U
  #define SIM_PCE1_REFC_MASK            0x04U
  #define SIM_PCE1_REFB_MASK            0x08U
  #define SIM_PCE1_REFA_MASK            0x10U
  #define SIM_PCE1_CRC_MASK             0x20U
  #define SIM_PCE1_IIC1_MASK            0x40U
  #define SIM_PCE1_IIC0_MASK            0x80U
  #define SIM_PCE1_QSPI0_MASK           0x0100U
  #define SIM_PCE1_SCI1_MASK            0x0200U
  #define SIM_PCE1_SCI0_MASK            0x0400U
  #define SIM_PCE1_CMPC_MASK            0x0800U
  #define SIM_PCE1_CMPB_MASK            0x1000U
  #define SIM_PCE1_CMPA_MASK            0x2000U
  #define SIM_PCE1_DAC_MASK             0x4000U
  #define SIM_PCE1                      (*((volatile word *)0x0000F0ED))


  /*** SIM_PCE2 - SIM Peripheral Clock Enable Register 2; 0x0000F0EE ***/
  union {
    word Word;
  } SIM_PCE2_STR;
  
  #define SIM_PCE2_PWMCH3_MASK          0x01U
  #define SIM_PCE2_PWMCH2_MASK          0x02U
  #define SIM_PCE2_PWMCH1_MASK          0x04U
  #define SIM_PCE2_PWMCH0_MASK          0x08U
  #define SIM_PCE2                      (*((volatile word *)0x0000F0EE))


  /*** SIM_SD0 - SIM STOP Disable Register 0; 0x0000F0EF ***/
  union {
    word Word;
  } SIM_SD0_STR;
  
  #define SIM_SD0_GPIOF_MASK            0x02U
  #define SIM_SD0_GPIOE_MASK            0x04U
  #define SIM_SD0_GPIOD_MASK            0x08U
  #define SIM_SD0_GPIOC_MASK            0x10U
  #define SIM_SD0_GPIOB_MASK            0x20U
  #define SIM_SD0_GPIOA_MASK            0x40U
  #define SIM_SD0_ADC_MASK              0x80U
  #define SIM_SD0_TB3_MASK              0x0100U
  #define SIM_SD0_TB2_MASK              0x0200U
  #define SIM_SD0_TB1_MASK              0x0400U
  #define SIM_SD0_TB0_MASK              0x0800U
  #define SIM_SD0_TA3_MASK              0x1000U
  #define SIM_SD0_TA2_MASK              0x2000U
  #define SIM_SD0_TA1_MASK              0x4000U
  #define SIM_SD0_TA0_MASK              0x8000U
  #define SIM_SD0                       (*((volatile word *)0x0000F0EF))


  /*** SIM_SD1 - SIM STOP Disable Register 1; 0x0000F0F0 ***/
  union {
    word Word;
  } SIM_SD1_STR;
  
  #define SIM_SD1_MSCAN_MASK            0x01U
  #define SIM_SD1_REFC_MASK             0x04U
  #define SIM_SD1_REFB_MASK             0x08U
  #define SIM_SD1_REFA_MASK             0x10U
  #define SIM_SD1_CRC_MASK              0x20U
  #define SIM_SD1_IIC1_MASK             0x40U
  #define SIM_SD1_IIC0_MASK             0x80U
  #define SIM_SD1_QSPI0_MASK            0x0100U
  #define SIM_SD1_SCI1_MASK             0x0200U
  #define SIM_SD1_SCI0_MASK             0x0400U
  #define SIM_SD1_CMPC_MASK             0x0800U
  #define SIM_SD1_CMPB_MASK             0x1000U
  #define SIM_SD1_CMPA_MASK             0x2000U
  #define SIM_SD1_DAC_MASK              0x4000U
  #define SIM_SD1                       (*((volatile word *)0x0000F0F0))


  /*** SIM_SD2 - SIM STOP Disable Register 2; 0x0000F0F1 ***/
  union {
    word Word;
  } SIM_SD2_STR;
  
  #define SIM_SD2_PWMCH3_MASK           0x01U
  #define SIM_SD2_PWMCH2_MASK           0x02U
  #define SIM_SD2_PWMCH1_MASK           0x04U
  #define SIM_SD2_PWMCH0_MASK           0x08U
  #define SIM_SD2                       (*((volatile word *)0x0000F0F1))


  /*** SIM_IOSAHI - SIM I/O Short Address Location High register; 0x0000F0F2 ***/
  union {
    word Word;
  } SIM_IOSAHI_STR;
  
  #define SIM_IOSAHI_ISAL0_MASK         0x01U
  #define SIM_IOSAHI_ISAL1_MASK         0x02U
  #define SIM_IOSAHI_ISAL_MASK          0x03U
  #define SIM_IOSAHI_ISAL_BITNUM        0x00U
  #define SIM_IOSAHI                    (*((volatile word *)0x0000F0F2))


  /*** SIM_IOSALO - SIM I/O Short Address Location Low register; 0x0000F0F3 ***/
  union {
    word Word;
  } SIM_IOSALO_STR;
  
  #define SIM_IOSALO_ISAL0_MASK         0x01U
  #define SIM_IOSALO_ISAL1_MASK         0x02U
  #define SIM_IOSALO_ISAL2_MASK         0x04U
  #define SIM_IOSALO_ISAL3_MASK         0x08U
  #define SIM_IOSALO_ISAL4_MASK         0x10U
  #define SIM_IOSALO_ISAL5_MASK         0x20U
  #define SIM_IOSALO_ISAL6_MASK         0x40U
  #define SIM_IOSALO_ISAL7_MASK         0x80U
  #define SIM_IOSALO_ISAL8_MASK         0x0100U
  #define SIM_IOSALO_ISAL9_MASK         0x0200U
  #define SIM_IOSALO_ISAL10_MASK        0x0400U
  #define SIM_IOSALO_ISAL11_MASK        0x0800U
  #define SIM_IOSALO_ISAL12_MASK        0x1000U
  #define SIM_IOSALO_ISAL13_MASK        0x2000U
  #define SIM_IOSALO_ISAL14_MASK        0x4000U
  #define SIM_IOSALO_ISAL15_MASK        0x8000U
  #define SIM_IOSALO                    (*((volatile word *)0x0000F0F3))


  /*** SIM_PROT - SIM Protection Register; 0x0000F0F4 ***/
  union {
    word Word;
  } SIM_PROT_STR;
  
  #define SIM_PROT_GIPSP0_MASK          0x01U
  #define SIM_PROT_GIPSP1_MASK          0x02U
  #define SIM_PROT_PCEP0_MASK           0x04U
  #define SIM_PROT_PCEP1_MASK           0x08U
  #define SIM_PROT_GIPSP_MASK           0x03U
  #define SIM_PROT_GIPSP_BITNUM         0x00U
  #define SIM_PROT_PCEP_MASK            0x0CU
  #define SIM_PROT_PCEP_BITNUM          0x02U
  #define SIM_PROT                      (*((volatile word *)0x0000F0F4))


  /*** SIM_GPS0 - SIM GPIO Peripheral Select Register 0; 0x0000F0F5 ***/
  union {
    word Word;
  } SIM_GPS0_STR;
  
  #define SIM_GPS0_C0_MASK              0x01U
  #define SIM_GPS0_C20_MASK             0x10U
  #define SIM_GPS0_C21_MASK             0x20U
  #define SIM_GPS0_C30_MASK             0x40U
  #define SIM_GPS0_C31_MASK             0x80U
  #define SIM_GPS0_C4_MASK              0x0100U
  #define SIM_GPS0_C5_MASK              0x0400U
  #define SIM_GPS0_C60_MASK             0x1000U
  #define SIM_GPS0_C61_MASK             0x2000U
  #define SIM_GPS0_C7_MASK              0x4000U
  #define SIM_GPS0_C2_MASK              0x30U
  #define SIM_GPS0_C2_BITNUM            0x04U
  #define SIM_GPS0_C3_MASK              0xC0U
  #define SIM_GPS0_C3_BITNUM            0x06U
  #define SIM_GPS0_C6_MASK              0x3000U
  #define SIM_GPS0_C6_BITNUM            0x0CU
  #define SIM_GPS0                      (*((volatile word *)0x0000F0F5))


  /*** SIM_GPS1 - SIM GPIO Peripheral Select Register 1; 0x0000F0F6 ***/
  union {
    word Word;
  } SIM_GPS1_STR;
  
  #define SIM_GPS1_C8_MASK              0x01U
  #define SIM_GPS1_C9_MASK              0x04U
  #define SIM_GPS1_C100_MASK            0x10U
  #define SIM_GPS1_C101_MASK            0x20U
  #define SIM_GPS1_C110_MASK            0x40U
  #define SIM_GPS1_C111_MASK            0x80U
  #define SIM_GPS1_C120_MASK            0x0100U
  #define SIM_GPS1_C121_MASK            0x0200U
  #define SIM_GPS1_C13_MASK             0x0400U
  #define SIM_GPS1_C14_MASK             0x1000U
  #define SIM_GPS1_C15_MASK             0x4000U
  #define SIM_GPS1_C10_MASK             0x30U
  #define SIM_GPS1_C10_BITNUM           0x04U
  #define SIM_GPS1_C11_MASK             0xC0U
  #define SIM_GPS1_C11_BITNUM           0x06U
  #define SIM_GPS1_C12_MASK             0x0300U
  #define SIM_GPS1_C12_BITNUM           0x08U
  #define SIM_GPS1                      (*((volatile word *)0x0000F0F6))


  /*** SIM_GPS2 - SIM GPIO Peripheral Select Register 2; 0x0000F0F7 ***/
  union {
    word Word;
  } SIM_GPS2_STR;
  
  #define SIM_GPS2_F1_MASK              0x04U
  #define SIM_GPS2_F2_MASK              0x10U
  #define SIM_GPS2_F3_MASK              0x40U
  #define SIM_GPS2_F4_MASK              0x0100U
  #define SIM_GPS2_F5_MASK              0x0400U
  #define SIM_GPS2_F6_MASK              0x1000U
  #define SIM_GPS2                      (*((volatile word *)0x0000F0F7))


  /*** SIM_GPS3 - SIM GPIO Peripheral Select Register 3; 0x0000F0F8 ***/
  union {
    word Word;
  } SIM_GPS3_STR;
  
  #define SIM_GPS3_A0_MASK              0x01U
  #define SIM_GPS3_F8_MASK              0x04U
  #define SIM_GPS3_E4_MASK              0x10U
  #define SIM_GPS3_E5_MASK              0x40U
  #define SIM_GPS3_E6_MASK              0x0100U
  #define SIM_GPS3_E7_MASK              0x0400U
  #define SIM_GPS3_TB0_MASK             0x1000U
  #define SIM_GPS3_TB1_MASK             0x2000U
  #define SIM_GPS3_TB2_MASK             0x4000U
  #define SIM_GPS3_TB3_MASK             0x8000U
  #define SIM_GPS3_TB_MASK              0xF000U
  #define SIM_GPS3_TB_BITNUM            0x0CU
  #define SIM_GPS3                      (*((volatile word *)0x0000F0F8))


  word Reserved1[7];                   /* Reserved (unused) registers */

} SIM_PRPH;

/******************************************
*** Peripheral XBAR
*******************************************/
typedef volatile struct {
  /*** XB_XBC0 - CrossBar Control Register 0; 0x0000F100 ***/
  union {
    word Word;
  } XB_XBC0_STR;
  
  #define XB_XBC0_CODE00_MASK           0x01U
  #define XB_XBC0_CODE01_MASK           0x02U
  #define XB_XBC0_CODE02_MASK           0x04U
  #define XB_XBC0_CODE03_MASK           0x08U
  #define XB_XBC0_CODE04_MASK           0x10U
  #define XB_XBC0_CODE10_MASK           0x0100U
  #define XB_XBC0_CODE11_MASK           0x0200U
  #define XB_XBC0_CODE12_MASK           0x0400U
  #define XB_XBC0_CODE13_MASK           0x0800U
  #define XB_XBC0_CODE14_MASK           0x1000U
  #define XB_XBC0_CODE0_MASK            0x1FU
  #define XB_XBC0_CODE0_BITNUM          0x00U
  #define XB_XBC0_CODE1_MASK            0x1F00U
  #define XB_XBC0_CODE1_BITNUM          0x08U
  #define XB_XBC0                       (*((volatile word *)0x0000F100))


  /*** XB_XBC1 - CrossBar Control Register 1; 0x0000F101 ***/
  union {
    word Word;
  } XB_XBC1_STR;
  
  #define XB_XBC1_CODE20_MASK           0x01U
  #define XB_XBC1_CODE21_MASK           0x02U
  #define XB_XBC1_CODE22_MASK           0x04U
  #define XB_XBC1_CODE23_MASK           0x08U
  #define XB_XBC1_CODE24_MASK           0x10U
  #define XB_XBC1_CODE30_MASK           0x0100U
  #define XB_XBC1_CODE31_MASK           0x0200U
  #define XB_XBC1_CODE32_MASK           0x0400U
  #define XB_XBC1_CODE33_MASK           0x0800U
  #define XB_XBC1_CODE34_MASK           0x1000U
  #define XB_XBC1_CODE2_MASK            0x1FU
  #define XB_XBC1_CODE2_BITNUM          0x00U
  #define XB_XBC1_CODE3_MASK            0x1F00U
  #define XB_XBC1_CODE3_BITNUM          0x08U
  #define XB_XBC1                       (*((volatile word *)0x0000F101))


  /*** XB_XBC2 - CrossBar Control Register 2; 0x0000F102 ***/
  union {
    word Word;
  } XB_XBC2_STR;
  
  #define XB_XBC2_CODE40_MASK           0x01U
  #define XB_XBC2_CODE41_MASK           0x02U
  #define XB_XBC2_CODE42_MASK           0x04U
  #define XB_XBC2_CODE43_MASK           0x08U
  #define XB_XBC2_CODE44_MASK           0x10U
  #define XB_XBC2_CODE50_MASK           0x0100U
  #define XB_XBC2_CODE51_MASK           0x0200U
  #define XB_XBC2_CODE52_MASK           0x0400U
  #define XB_XBC2_CODE53_MASK           0x0800U
  #define XB_XBC2_CODE54_MASK           0x1000U
  #define XB_XBC2_CODE4_MASK            0x1FU
  #define XB_XBC2_CODE4_BITNUM          0x00U
  #define XB_XBC2_CODE5_MASK            0x1F00U
  #define XB_XBC2_CODE5_BITNUM          0x08U
  #define XB_XBC2                       (*((volatile word *)0x0000F102))


  /*** XB_XBC3 - CrossBar Control Register 3; 0x0000F103 ***/
  union {
    word Word;
  } XB_XBC3_STR;
  
  #define XB_XBC3_CODE60_MASK           0x01U
  #define XB_XBC3_CODE61_MASK           0x02U
  #define XB_XBC3_CODE62_MASK           0x04U
  #define XB_XBC3_CODE63_MASK           0x08U
  #define XB_XBC3_CODE64_MASK           0x10U
  #define XB_XBC3_CODE70_MASK           0x0100U
  #define XB_XBC3_CODE71_MASK           0x0200U
  #define XB_XBC3_CODE72_MASK           0x0400U
  #define XB_XBC3_CODE73_MASK           0x0800U
  #define XB_XBC3_CODE74_MASK           0x1000U
  #define XB_XBC3_CODE6_MASK            0x1FU
  #define XB_XBC3_CODE6_BITNUM          0x00U
  #define XB_XBC3_CODE7_MASK            0x1F00U
  #define XB_XBC3_CODE7_BITNUM          0x08U
  #define XB_XBC3                       (*((volatile word *)0x0000F103))


  /*** XB_XBC4 - CrossBar Control Register 4; 0x0000F104 ***/
  union {
    word Word;
  } XB_XBC4_STR;
  
  #define XB_XBC4_CODE80_MASK           0x01U
  #define XB_XBC4_CODE81_MASK           0x02U
  #define XB_XBC4_CODE82_MASK           0x04U
  #define XB_XBC4_CODE83_MASK           0x08U
  #define XB_XBC4_CODE84_MASK           0x10U
  #define XB_XBC4_CODE90_MASK           0x0100U
  #define XB_XBC4_CODE91_MASK           0x0200U
  #define XB_XBC4_CODE92_MASK           0x0400U
  #define XB_XBC4_CODE93_MASK           0x0800U
  #define XB_XBC4_CODE94_MASK           0x1000U
  #define XB_XBC4_CODE8_MASK            0x1FU
  #define XB_XBC4_CODE8_BITNUM          0x00U
  #define XB_XBC4_CODE9_MASK            0x1F00U
  #define XB_XBC4_CODE9_BITNUM          0x08U
  #define XB_XBC4                       (*((volatile word *)0x0000F104))


  /*** XB_XBC5 - CrossBar Control Register 5; 0x0000F105 ***/
  union {
    word Word;
  } XB_XBC5_STR;
  
  #define XB_XBC5_CODE100_MASK          0x01U
  #define XB_XBC5_CODE101_MASK          0x02U
  #define XB_XBC5_CODE102_MASK          0x04U
  #define XB_XBC5_CODE103_MASK          0x08U
  #define XB_XBC5_CODE104_MASK          0x10U
  #define XB_XBC5_CODE110_MASK          0x0100U
  #define XB_XBC5_CODE111_MASK          0x0200U
  #define XB_XBC5_CODE112_MASK          0x0400U
  #define XB_XBC5_CODE113_MASK          0x0800U
  #define XB_XBC5_CODE114_MASK          0x1000U
  #define XB_XBC5_CODE10_MASK           0x1FU
  #define XB_XBC5_CODE10_BITNUM         0x00U
  #define XB_XBC5_CODE11_MASK           0x1F00U
  #define XB_XBC5_CODE11_BITNUM         0x08U
  #define XB_XBC5                       (*((volatile word *)0x0000F105))


  /*** XB_XBC6 - CrossBar Control Register 6; 0x0000F106 ***/
  union {
    word Word;
  } XB_XBC6_STR;
  
  #define XB_XBC6_CODE120_MASK          0x01U
  #define XB_XBC6_CODE121_MASK          0x02U
  #define XB_XBC6_CODE122_MASK          0x04U
  #define XB_XBC6_CODE123_MASK          0x08U
  #define XB_XBC6_CODE124_MASK          0x10U
  #define XB_XBC6_CODE130_MASK          0x0100U
  #define XB_XBC6_CODE131_MASK          0x0200U
  #define XB_XBC6_CODE132_MASK          0x0400U
  #define XB_XBC6_CODE133_MASK          0x0800U
  #define XB_XBC6_CODE134_MASK          0x1000U
  #define XB_XBC6_CODE12_MASK           0x1FU
  #define XB_XBC6_CODE12_BITNUM         0x00U
  #define XB_XBC6_CODE13_MASK           0x1F00U
  #define XB_XBC6_CODE13_BITNUM         0x08U
  #define XB_XBC6                       (*((volatile word *)0x0000F106))


  /*** XB_XBC7 - CrossBar Control Register 7; 0x0000F107 ***/
  union {
    word Word;
  } XB_XBC7_STR;
  
  #define XB_XBC7_CODE140_MASK          0x01U
  #define XB_XBC7_CODE141_MASK          0x02U
  #define XB_XBC7_CODE142_MASK          0x04U
  #define XB_XBC7_CODE143_MASK          0x08U
  #define XB_XBC7_CODE144_MASK          0x10U
  #define XB_XBC7_CODE150_MASK          0x0100U
  #define XB_XBC7_CODE151_MASK          0x0200U
  #define XB_XBC7_CODE152_MASK          0x0400U
  #define XB_XBC7_CODE153_MASK          0x0800U
  #define XB_XBC7_CODE154_MASK          0x1000U
  #define XB_XBC7_CODE14_MASK           0x1FU
  #define XB_XBC7_CODE14_BITNUM         0x00U
  #define XB_XBC7_CODE15_MASK           0x1F00U
  #define XB_XBC7_CODE15_BITNUM         0x08U
  #define XB_XBC7                       (*((volatile word *)0x0000F107))


  /*** XB_XBC8 - CrossBar Control Register 8; 0x0000F108 ***/
  union {
    word Word;
  } XB_XBC8_STR;
  
  #define XB_XBC8_CODE160_MASK          0x01U
  #define XB_XBC8_CODE161_MASK          0x02U
  #define XB_XBC8_CODE162_MASK          0x04U
  #define XB_XBC8_CODE163_MASK          0x08U
  #define XB_XBC8_CODE164_MASK          0x10U
  #define XB_XBC8_CODE170_MASK          0x0100U
  #define XB_XBC8_CODE171_MASK          0x0200U
  #define XB_XBC8_CODE172_MASK          0x0400U
  #define XB_XBC8_CODE173_MASK          0x0800U
  #define XB_XBC8_CODE174_MASK          0x1000U
  #define XB_XBC8_CODE16_MASK           0x1FU
  #define XB_XBC8_CODE16_BITNUM         0x00U
  #define XB_XBC8_CODE17_MASK           0x1F00U
  #define XB_XBC8_CODE17_BITNUM         0x08U
  #define XB_XBC8                       (*((volatile word *)0x0000F108))


  /*** XB_XBC9 - CrossBar Control Register 9; 0x0000F109 ***/
  union {
    word Word;
  } XB_XBC9_STR;
  
  #define XB_XBC9_CODE180_MASK          0x01U
  #define XB_XBC9_CODE181_MASK          0x02U
  #define XB_XBC9_CODE182_MASK          0x04U
  #define XB_XBC9_CODE183_MASK          0x08U
  #define XB_XBC9_CODE184_MASK          0x10U
  #define XB_XBC9_CODE190_MASK          0x0100U
  #define XB_XBC9_CODE191_MASK          0x0200U
  #define XB_XBC9_CODE192_MASK          0x0400U
  #define XB_XBC9_CODE193_MASK          0x0800U
  #define XB_XBC9_CODE194_MASK          0x1000U
  #define XB_XBC9_CODE18_MASK           0x1FU
  #define XB_XBC9_CODE18_BITNUM         0x00U
  #define XB_XBC9_CODE19_MASK           0x1F00U
  #define XB_XBC9_CODE19_BITNUM         0x08U
  #define XB_XBC9                       (*((volatile word *)0x0000F109))


  /*** XB_XBC10 - CrossBar Control Register 10; 0x0000F10A ***/
  union {
    word Word;
  } XB_XBC10_STR;
  
  #define XB_XBC10_CODE200_MASK         0x01U
  #define XB_XBC10_CODE201_MASK         0x02U
  #define XB_XBC10_CODE202_MASK         0x04U
  #define XB_XBC10_CODE203_MASK         0x08U
  #define XB_XBC10_CODE204_MASK         0x10U
  #define XB_XBC10_CODE210_MASK         0x0100U
  #define XB_XBC10_CODE211_MASK         0x0200U
  #define XB_XBC10_CODE212_MASK         0x0400U
  #define XB_XBC10_CODE213_MASK         0x0800U
  #define XB_XBC10_CODE214_MASK         0x1000U
  #define XB_XBC10_CODE20_MASK          0x1FU
  #define XB_XBC10_CODE20_BITNUM        0x00U
  #define XB_XBC10_CODE21_MASK          0x1F00U
  #define XB_XBC10_CODE21_BITNUM        0x08U
  #define XB_XBC10                      (*((volatile word *)0x0000F10A))


  /*** XB_XBC11 - CrossBar Control Register 11; 0x0000F10B ***/
  union {
    word Word;
  } XB_XBC11_STR;
  
  #define XB_XBC11_CODE220_MASK         0x01U
  #define XB_XBC11_CODE221_MASK         0x02U
  #define XB_XBC11_CODE222_MASK         0x04U
  #define XB_XBC11_CODE223_MASK         0x08U
  #define XB_XBC11_CODE224_MASK         0x10U
  #define XB_XBC11_CODE230_MASK         0x0100U
  #define XB_XBC11_CODE231_MASK         0x0200U
  #define XB_XBC11_CODE232_MASK         0x0400U
  #define XB_XBC11_CODE233_MASK         0x0800U
  #define XB_XBC11_CODE234_MASK         0x1000U
  #define XB_XBC11_CODE22_MASK          0x1FU
  #define XB_XBC11_CODE22_BITNUM        0x00U
  #define XB_XBC11_CODE23_MASK          0x1F00U
  #define XB_XBC11_CODE23_BITNUM        0x08U
  #define XB_XBC11                      (*((volatile word *)0x0000F10B))


  /*** XB_XBC12 - CrossBar Control Register 12; 0x0000F10C ***/
  union {
    word Word;
  } XB_XBC12_STR;
  
  #define XB_XBC12_CODE240_MASK         0x01U
  #define XB_XBC12_CODE241_MASK         0x02U
  #define XB_XBC12_CODE242_MASK         0x04U
  #define XB_XBC12_CODE243_MASK         0x08U
  #define XB_XBC12_CODE244_MASK         0x10U
  #define XB_XBC12_CODE250_MASK         0x0100U
  #define XB_XBC12_CODE251_MASK         0x0200U
  #define XB_XBC12_CODE252_MASK         0x0400U
  #define XB_XBC12_CODE253_MASK         0x0800U
  #define XB_XBC12_CODE254_MASK         0x1000U
  #define XB_XBC12_CODE24_MASK          0x1FU
  #define XB_XBC12_CODE24_BITNUM        0x00U
  #define XB_XBC12_CODE25_MASK          0x1F00U
  #define XB_XBC12_CODE25_BITNUM        0x08U
  #define XB_XBC12                      (*((volatile word *)0x0000F10C))


  /*** XB_XBC13 - CrossBar Control Register 13; 0x0000F10D ***/
  union {
    word Word;
  } XB_XBC13_STR;
  
  #define XB_XBC13_CODE260_MASK         0x01U
  #define XB_XBC13_CODE261_MASK         0x02U
  #define XB_XBC13_CODE262_MASK         0x04U
  #define XB_XBC13_CODE263_MASK         0x08U
  #define XB_XBC13_CODE264_MASK         0x10U
  #define XB_XBC13_CODE270_MASK         0x0100U
  #define XB_XBC13_CODE271_MASK         0x0200U
  #define XB_XBC13_CODE272_MASK         0x0400U
  #define XB_XBC13_CODE273_MASK         0x0800U
  #define XB_XBC13_CODE274_MASK         0x1000U
  #define XB_XBC13_CODE26_MASK          0x1FU
  #define XB_XBC13_CODE26_BITNUM        0x00U
  #define XB_XBC13_CODE27_MASK          0x1F00U
  #define XB_XBC13_CODE27_BITNUM        0x08U
  #define XB_XBC13                      (*((volatile word *)0x0000F10D))


  /*** XB_XBC14 - CrossBar Control Register 14; 0x0000F10E ***/
  union {
    word Word;
  } XB_XBC14_STR;
  
  #define XB_XBC14_CODE280_MASK         0x01U
  #define XB_XBC14_CODE281_MASK         0x02U
  #define XB_XBC14_CODE282_MASK         0x04U
  #define XB_XBC14_CODE283_MASK         0x08U
  #define XB_XBC14_CODE284_MASK         0x10U
  #define XB_XBC14_CODE290_MASK         0x0100U
  #define XB_XBC14_CODE291_MASK         0x0200U
  #define XB_XBC14_CODE292_MASK         0x0400U
  #define XB_XBC14_CODE293_MASK         0x0800U
  #define XB_XBC14_CODE294_MASK         0x1000U
  #define XB_XBC14_CODE28_MASK          0x1FU
  #define XB_XBC14_CODE28_BITNUM        0x00U
  #define XB_XBC14_CODE29_MASK          0x1F00U
  #define XB_XBC14_CODE29_BITNUM        0x08U
  #define XB_XBC14                      (*((volatile word *)0x0000F10E))


  word Reserved0[1];                   /* Reserved (unused) registers */

} XBAR_PRPH;

/******************************************
*** Peripheral COP
*******************************************/
typedef volatile struct {
  /*** COP_CTRL - COP Control Register; 0x0000F110 ***/
  union {
    word Word;
  } COP_CTRL_STR;
  
  #define COP_CTRL_CWP_MASK             0x01U
  #define COP_CTRL_CEN_MASK             0x02U
  #define COP_CTRL_CWEN_MASK            0x04U
  #define COP_CTRL_CSEN_MASK            0x08U
  #define COP_CTRL_CLOREN_MASK          0x10U
  #define COP_CTRL_CLKSEL0_MASK         0x20U
  #define COP_CTRL_CLKSEL1_MASK         0x40U
  #define COP_CTRL_PSS0_MASK            0x0100U
  #define COP_CTRL_PSS1_MASK            0x0200U
  #define COP_CTRL_CLKSEL_MASK          0x60U
  #define COP_CTRL_CLKSEL_BITNUM        0x05U
  #define COP_CTRL_PSS_MASK             0x0300U
  #define COP_CTRL_PSS_BITNUM           0x08U
  #define COP_CTRL                      (*((volatile word *)0x0000F110))


  /*** COP_TOUT - Timeout Register; 0x0000F111 ***/
  union {
    word Word;
  } COP_TOUT_STR;
  
  #define COP_TOUT_TIMEOUT0_MASK        0x01U
  #define COP_TOUT_TIMEOUT1_MASK        0x02U
  #define COP_TOUT_TIMEOUT2_MASK        0x04U
  #define COP_TOUT_TIMEOUT3_MASK        0x08U
  #define COP_TOUT_TIMEOUT4_MASK        0x10U
  #define COP_TOUT_TIMEOUT5_MASK        0x20U
  #define COP_TOUT_TIMEOUT6_MASK        0x40U
  #define COP_TOUT_TIMEOUT7_MASK        0x80U
  #define COP_TOUT_TIMEOUT8_MASK        0x0100U
  #define COP_TOUT_TIMEOUT9_MASK        0x0200U
  #define COP_TOUT_TIMEOUT10_MASK       0x0400U
  #define COP_TOUT_TIMEOUT11_MASK       0x0800U
  #define COP_TOUT_TIMEOUT12_MASK       0x1000U
  #define COP_TOUT_TIMEOUT13_MASK       0x2000U
  #define COP_TOUT_TIMEOUT14_MASK       0x4000U
  #define COP_TOUT_TIMEOUT15_MASK       0x8000U
  #define COP_TOUT                      (*((volatile word *)0x0000F111))


  /*** COP_CNTR - Counter Register; 0x0000F112 ***/
  union {
    word Word;
  } COP_CNTR_STR;
  
  #define COP_CNTR                      (*((volatile word *)0x0000F112))


  word Reserved0[13];                  /* Reserved (unused) registers */

} COP_PRPH;

/******************************************
*** Peripheral OCCS
*******************************************/
typedef volatile struct {
  /*** OCCS_CTRL - PLL Control Register; 0x0000F120 ***/
  union {
    word Word;
  } OCCS_CTRL_STR;
  
  #define OCCS_CTRL_ZSRC0_MASK          0x01U
  #define OCCS_CTRL_ZSRC1_MASK          0x02U
  #define OCCS_CTRL_PRECS_MASK          0x04U
  #define OCCS_CTRL_PLLPD_MASK          0x10U
  #define OCCS_CTRL_LCKON_MASK          0x80U
  #define OCCS_CTRL_LOCIE_MASK          0x0800U
  #define OCCS_CTRL_PLLIE00_MASK        0x1000U
  #define OCCS_CTRL_PLLIE01_MASK        0x2000U
  #define OCCS_CTRL_PLLIE10_MASK        0x4000U
  #define OCCS_CTRL_PLLIE11_MASK        0x8000U
  #define OCCS_CTRL_ZSRC_MASK           0x03U
  #define OCCS_CTRL_ZSRC_BITNUM         0x00U
  #define OCCS_CTRL_PLLIE0_MASK         0x3000U
  #define OCCS_CTRL_PLLIE0_BITNUM       0x0CU
  #define OCCS_CTRL_PLLIE1_MASK         0xC000U
  #define OCCS_CTRL_PLLIE1_BITNUM       0x0EU
  #define OCCS_CTRL                     (*((volatile word *)0x0000F120))


  /*** OCCS_DIVBY - PLL Divide- by Register; 0x0000F121 ***/
  union {
    word Word;
  } OCCS_DIVBY_STR;
  
  #define OCCS_DIVBY_PLLDB0_MASK        0x01U
  #define OCCS_DIVBY_PLLDB1_MASK        0x02U
  #define OCCS_DIVBY_PLLDB2_MASK        0x04U
  #define OCCS_DIVBY_PLLDB3_MASK        0x08U
  #define OCCS_DIVBY_PLLDB4_MASK        0x10U
  #define OCCS_DIVBY_PLLDB5_MASK        0x20U
  #define OCCS_DIVBY_PLLDB6_MASK        0x40U
  #define OCCS_DIVBY_COD0_MASK          0x0100U
  #define OCCS_DIVBY_COD1_MASK          0x0200U
  #define OCCS_DIVBY_COD2_MASK          0x0400U
  #define OCCS_DIVBY_COD3_MASK          0x0800U
  #define OCCS_DIVBY_LORTP0_MASK        0x1000U
  #define OCCS_DIVBY_LORTP1_MASK        0x2000U
  #define OCCS_DIVBY_LORTP2_MASK        0x4000U
  #define OCCS_DIVBY_LORTP3_MASK        0x8000U
  #define OCCS_DIVBY_PLLDB_MASK         0x7FU
  #define OCCS_DIVBY_PLLDB_BITNUM       0x00U
  #define OCCS_DIVBY_COD_MASK           0x0F00U
  #define OCCS_DIVBY_COD_BITNUM         0x08U
  #define OCCS_DIVBY_LORTP_MASK         0xF000U
  #define OCCS_DIVBY_LORTP_BITNUM       0x0CU
  #define OCCS_DIVBY                    (*((volatile word *)0x0000F121))


  /*** OCCS_STAT - PLL Status Register; 0x0000F122 ***/
  union {
    word Word;
  } OCCS_STAT_STR;
  
  #define OCCS_STAT_ZSRC0_MASK          0x01U
  #define OCCS_STAT_ZSRC1_MASK          0x02U
  #define OCCS_STAT_PLLPDN_MASK         0x10U
  #define OCCS_STAT_LCK0_MASK           0x20U
  #define OCCS_STAT_LCK1_MASK           0x40U
  #define OCCS_STAT_LOCI_MASK           0x2000U
  #define OCCS_STAT_LOLI0_MASK          0x4000U
  #define OCCS_STAT_LOLI1_MASK          0x8000U
  #define OCCS_STAT_ZSRC_MASK           0x03U
  #define OCCS_STAT_ZSRC_BITNUM         0x00U
  #define OCCS_STAT_LCK_MASK            0x60U
  #define OCCS_STAT_LCK_BITNUM          0x05U
  #define OCCS_STAT_LOLI_MASK           0xC000U
  #define OCCS_STAT_LOLI_BITNUM         0x0EU
  #define OCCS_STAT                     (*((volatile word *)0x0000F122))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** OCCS_OSCTL - Oscillator Control Register; 0x0000F124 ***/
  union {
    word Word;
  } OCCS_OSCTL_STR;
  
  #define OCCS_OSCTL_TRIM0_MASK         0x01U
  #define OCCS_OSCTL_TRIM1_MASK         0x02U
  #define OCCS_OSCTL_TRIM2_MASK         0x04U
  #define OCCS_OSCTL_TRIM3_MASK         0x08U
  #define OCCS_OSCTL_TRIM4_MASK         0x10U
  #define OCCS_OSCTL_TRIM5_MASK         0x20U
  #define OCCS_OSCTL_TRIM6_MASK         0x40U
  #define OCCS_OSCTL_TRIM7_MASK         0x80U
  #define OCCS_OSCTL_TRIM8_MASK         0x0100U
  #define OCCS_OSCTL_TRIM9_MASK         0x0200U
  #define OCCS_OSCTL_EXT_SEL_MASK       0x0400U
  #define OCCS_OSCTL_OSC_DIV2_MASK      0x0800U
  #define OCCS_OSCTL_CLK_MODE_MASK      0x1000U
  #define OCCS_OSCTL_COHL_MASK          0x2000U
  #define OCCS_OSCTL_ROSB_MASK          0x4000U
  #define OCCS_OSCTL_ROPD_MASK          0x8000U
  #define OCCS_OSCTL_TRIM_MASK          0x03FFU
  #define OCCS_OSCTL_TRIM_BITNUM        0x00U
  #define OCCS_OSCTL                    (*((volatile word *)0x0000F124))


  /*** OCCS_CLKCHKR - External Clock Check Reference Register; 0x0000F125 ***/
  union {
    word Word;
  } OCCS_CLKCHKR_STR;
  
  #define OCCS_CLKCHKR_REFERENCE_CNT0_MASK 0x01U
  #define OCCS_CLKCHKR_REFERENCE_CNT1_MASK 0x02U
  #define OCCS_CLKCHKR_REFERENCE_CNT2_MASK 0x04U
  #define OCCS_CLKCHKR_REFERENCE_CNT3_MASK 0x08U
  #define OCCS_CLKCHKR_REFERENCE_CNT4_MASK 0x10U
  #define OCCS_CLKCHKR_REFERENCE_CNT5_MASK 0x20U
  #define OCCS_CLKCHKR_REFERENCE_CNT6_MASK 0x40U
  #define OCCS_CLKCHKR_CHK_ENA_MASK     0x8000U
  #define OCCS_CLKCHKR_REFERENCE_CNT_MASK 0x7FU
  #define OCCS_CLKCHKR_REFERENCE_CNT_BITNUM 0x00U
  #define OCCS_CLKCHKR                  (*((volatile word *)0x0000F125))


  /*** OCCS_CLKCHKT - External Clock Check Target Register; 0x0000F126 ***/
  union {
    word Word;
  } OCCS_CLKCHKT_STR;
  
  #define OCCS_CLKCHKT_TARGET_CNT0_MASK 0x01U
  #define OCCS_CLKCHKT_TARGET_CNT1_MASK 0x02U
  #define OCCS_CLKCHKT_TARGET_CNT2_MASK 0x04U
  #define OCCS_CLKCHKT_TARGET_CNT3_MASK 0x08U
  #define OCCS_CLKCHKT_TARGET_CNT4_MASK 0x10U
  #define OCCS_CLKCHKT_TARGET_CNT5_MASK 0x20U
  #define OCCS_CLKCHKT_TARGET_CNT6_MASK 0x40U
  #define OCCS_CLKCHKT_TARGET_CNT7_MASK 0x80U
  #define OCCS_CLKCHKT_TARGET_CNT8_MASK 0x0100U
  #define OCCS_CLKCHKT_TARGET_CNT_MASK  0x01FFU
  #define OCCS_CLKCHKT_TARGET_CNT_BITNUM 0x00U
  #define OCCS_CLKCHKT                  (*((volatile word *)0x0000F126))


  /*** OCCS_PROT - Protection Register; 0x0000F127 ***/
  union {
    word Word;
  } OCCS_PROT_STR;
  
  #define OCCS_PROT_PLLEP0_MASK         0x01U
  #define OCCS_PROT_PLLEP1_MASK         0x02U
  #define OCCS_PROT_OSCEP0_MASK         0x04U
  #define OCCS_PROT_OSCEP1_MASK         0x08U
  #define OCCS_PROT_FRQEP0_MASK         0x10U
  #define OCCS_PROT_FRQEP1_MASK         0x20U
  #define OCCS_PROT_PLLEP_MASK          0x03U
  #define OCCS_PROT_PLLEP_BITNUM        0x00U
  #define OCCS_PROT_OSCEP_MASK          0x0CU
  #define OCCS_PROT_OSCEP_BITNUM        0x02U
  #define OCCS_PROT_FRQEP_MASK          0x30U
  #define OCCS_PROT_FRQEP_BITNUM        0x04U
  #define OCCS_PROT                     (*((volatile word *)0x0000F127))


  word Reserved1[8];                   /* Reserved (unused) registers */

} OCCS_PRPH;

/******************************************
*** Peripheral PMC
*******************************************/
typedef volatile struct {
  /*** PMC_CTRL - Power Supervisor Control Register; 0x0000F130 ***/
  union {
    word Word;
  } PMC_CTRL_STR;
  
  #define PMC_CTRL_LV21IE_MASK          0x01U
  #define PMC_CTRL_LV27IE_MASK          0x02U
  #define PMC_CTRL_HV21IE_MASK          0x04U
  #define PMC_CTRL_HV27IE_MASK          0x08U
  #define PMC_CTRL                      (*((volatile word *)0x0000F130))


  /*** PMC_STS - Power Supervisor Status Register; 0x0000F131 ***/
  union {
    word Word;
  } PMC_STS_STR;
  
  #define PMC_STS_LV21F_MASK            0x01U
  #define PMC_STS_LV27F_MASK            0x02U
  #define PMC_STS_SLV21F_MASK           0x04U
  #define PMC_STS_SLV27F_MASK           0x08U
  #define PMC_STS_LVI_MASK              0x10U
  #define PMC_STS                       (*((volatile word *)0x0000F131))


  word Reserved0[14];                  /* Reserved (unused) registers */

} PMC_PRPH;

/******************************************
*** Peripheral GPIOA
*******************************************/
typedef volatile struct {
  /*** GPIO_A_PUPEN - GPIO A Pull-up Enable Register; 0x0000F140 ***/
  union {
    word Word;
  } GPIO_A_PUPEN_STR;
  
  #define GPIO_A_PUPEN_PU0_MASK         0x01U
  #define GPIO_A_PUPEN_PU1_MASK         0x02U
  #define GPIO_A_PUPEN_PU2_MASK         0x04U
  #define GPIO_A_PUPEN_PU3_MASK         0x08U
  #define GPIO_A_PUPEN_PU4_MASK         0x10U
  #define GPIO_A_PUPEN_PU5_MASK         0x20U
  #define GPIO_A_PUPEN_PU6_MASK         0x40U
  #define GPIO_A_PUPEN_PU7_MASK         0x80U
  #define GPIO_A_PUPEN_PU_MASK          0xFFU
  #define GPIO_A_PUPEN_PU_BITNUM        0x00U
  #define GPIO_A_PUPEN                  (*((volatile word *)0x0000F140))


  /*** GPIO_A_DATA - GPIO A Data Register; 0x0000F141 ***/
  union {
    word Word;
  } GPIO_A_DATA_STR;
  
  #define GPIO_A_DATA_D0_MASK           0x01U
  #define GPIO_A_DATA_D1_MASK           0x02U
  #define GPIO_A_DATA_D2_MASK           0x04U
  #define GPIO_A_DATA_D3_MASK           0x08U
  #define GPIO_A_DATA_D4_MASK           0x10U
  #define GPIO_A_DATA_D5_MASK           0x20U
  #define GPIO_A_DATA_D6_MASK           0x40U
  #define GPIO_A_DATA_D7_MASK           0x80U
  #define GPIO_A_DATA_D_MASK            0xFFU
  #define GPIO_A_DATA_D_BITNUM          0x00U
  #define GPIO_A_DATA                   (*((volatile word *)0x0000F141))


  /*** GPIO_A_DDIR - GPIO A Data Direction Register; 0x0000F142 ***/
  union {
    word Word;
  } GPIO_A_DDIR_STR;
  
  #define GPIO_A_DDIR_DD0_MASK          0x01U
  #define GPIO_A_DDIR_DD1_MASK          0x02U
  #define GPIO_A_DDIR_DD2_MASK          0x04U
  #define GPIO_A_DDIR_DD3_MASK          0x08U
  #define GPIO_A_DDIR_DD4_MASK          0x10U
  #define GPIO_A_DDIR_DD5_MASK          0x20U
  #define GPIO_A_DDIR_DD6_MASK          0x40U
  #define GPIO_A_DDIR_DD7_MASK          0x80U
  #define GPIO_A_DDIR_DD_MASK           0xFFU
  #define GPIO_A_DDIR_DD_BITNUM         0x00U
  #define GPIO_A_DDIR                   (*((volatile word *)0x0000F142))


  /*** GPIO_A_PEREN - GPIO A Peripheral Enable Registers; 0x0000F143 ***/
  union {
    word Word;
  } GPIO_A_PEREN_STR;
  
  #define GPIO_A_PEREN_PE0_MASK         0x01U
  #define GPIO_A_PEREN_PE1_MASK         0x02U
  #define GPIO_A_PEREN_PE2_MASK         0x04U
  #define GPIO_A_PEREN_PE3_MASK         0x08U
  #define GPIO_A_PEREN_PE4_MASK         0x10U
  #define GPIO_A_PEREN_PE5_MASK         0x20U
  #define GPIO_A_PEREN_PE6_MASK         0x40U
  #define GPIO_A_PEREN_PE7_MASK         0x80U
  #define GPIO_A_PEREN_PE_MASK          0xFFU
  #define GPIO_A_PEREN_PE_BITNUM        0x00U
  #define GPIO_A_PEREN                  (*((volatile word *)0x0000F143))


  /*** GPIO_A_IASSRT - GPIO A Interrupt Assert Register; 0x0000F144 ***/
  union {
    word Word;
  } GPIO_A_IASSRT_STR;
  
  #define GPIO_A_IASSRT_IA0_MASK        0x01U
  #define GPIO_A_IASSRT_IA1_MASK        0x02U
  #define GPIO_A_IASSRT_IA2_MASK        0x04U
  #define GPIO_A_IASSRT_IA3_MASK        0x08U
  #define GPIO_A_IASSRT_IA4_MASK        0x10U
  #define GPIO_A_IASSRT_IA5_MASK        0x20U
  #define GPIO_A_IASSRT_IA6_MASK        0x40U
  #define GPIO_A_IASSRT_IA7_MASK        0x80U
  #define GPIO_A_IASSRT_IA_MASK         0xFFU
  #define GPIO_A_IASSRT_IA_BITNUM       0x00U
  #define GPIO_A_IASSRT                 (*((volatile word *)0x0000F144))


  /*** GPIO_A_IEN - GPIO A Interrupt Enable Register; 0x0000F145 ***/
  union {
    word Word;
  } GPIO_A_IEN_STR;
  
  #define GPIO_A_IEN_IEN0_MASK          0x01U
  #define GPIO_A_IEN_IEN1_MASK          0x02U
  #define GPIO_A_IEN_IEN2_MASK          0x04U
  #define GPIO_A_IEN_IEN3_MASK          0x08U
  #define GPIO_A_IEN_IEN4_MASK          0x10U
  #define GPIO_A_IEN_IEN5_MASK          0x20U
  #define GPIO_A_IEN_IEN6_MASK          0x40U
  #define GPIO_A_IEN_IEN7_MASK          0x80U
  #define GPIO_A_IEN_IEN_MASK           0xFFU
  #define GPIO_A_IEN_IEN_BITNUM         0x00U
  #define GPIO_A_IEN                    (*((volatile word *)0x0000F145))


  /*** GPIO_A_IPOL - GPIO A Interrupt Polarity Register; 0x0000F146 ***/
  union {
    word Word;
  } GPIO_A_IPOL_STR;
  
  #define GPIO_A_IPOL_IPOL0_MASK        0x01U
  #define GPIO_A_IPOL_IPOL1_MASK        0x02U
  #define GPIO_A_IPOL_IPOL2_MASK        0x04U
  #define GPIO_A_IPOL_IPOL3_MASK        0x08U
  #define GPIO_A_IPOL_IPOL4_MASK        0x10U
  #define GPIO_A_IPOL_IPOL5_MASK        0x20U
  #define GPIO_A_IPOL_IPOL6_MASK        0x40U
  #define GPIO_A_IPOL_IPOL7_MASK        0x80U
  #define GPIO_A_IPOL_IPOL_MASK         0xFFU
  #define GPIO_A_IPOL_IPOL_BITNUM       0x00U
  #define GPIO_A_IPOL                   (*((volatile word *)0x0000F146))


  /*** GPIO_A_IPEND - GPIO A Interrupt Pending Register; 0x0000F147 ***/
  union {
    word Word;
  } GPIO_A_IPEND_STR;
  
  #define GPIO_A_IPEND_IP0_MASK         0x01U
  #define GPIO_A_IPEND_IP1_MASK         0x02U
  #define GPIO_A_IPEND_IP2_MASK         0x04U
  #define GPIO_A_IPEND_IP3_MASK         0x08U
  #define GPIO_A_IPEND_IP4_MASK         0x10U
  #define GPIO_A_IPEND_IP5_MASK         0x20U
  #define GPIO_A_IPEND_IP6_MASK         0x40U
  #define GPIO_A_IPEND_IP7_MASK         0x80U
  #define GPIO_A_IPEND_IP_MASK          0xFFU
  #define GPIO_A_IPEND_IP_BITNUM        0x00U
  #define GPIO_A_IPEND                  (*((volatile word *)0x0000F147))


  /*** GPIO_A_IEDGE - GPIO A Interrupt Edge Sensitive Register; 0x0000F148 ***/
  union {
    word Word;
  } GPIO_A_IEDGE_STR;
  
  #define GPIO_A_IEDGE_IES0_MASK        0x01U
  #define GPIO_A_IEDGE_IES1_MASK        0x02U
  #define GPIO_A_IEDGE_IES2_MASK        0x04U
  #define GPIO_A_IEDGE_IES3_MASK        0x08U
  #define GPIO_A_IEDGE_IES4_MASK        0x10U
  #define GPIO_A_IEDGE_IES5_MASK        0x20U
  #define GPIO_A_IEDGE_IES6_MASK        0x40U
  #define GPIO_A_IEDGE_IES7_MASK        0x80U
  #define GPIO_A_IEDGE_IES_MASK         0xFFU
  #define GPIO_A_IEDGE_IES_BITNUM       0x00U
  #define GPIO_A_IEDGE                  (*((volatile word *)0x0000F148))


  /*** GPIO_A_PPOUTM - GPIO A Push-Pull Mode Register; 0x0000F149 ***/
  union {
    word Word;
  } GPIO_A_PPOUTM_STR;
  
  #define GPIO_A_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_A_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_A_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_A_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_A_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_A_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_A_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_A_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_A_PPOUTM_PPMODE_MASK     0xFFU
  #define GPIO_A_PPOUTM_PPMODE_BITNUM   0x00U
  #define GPIO_A_PPOUTM                 (*((volatile word *)0x0000F149))


  /*** GPIO_A_RDATA - GPIO A Raw Data Register; 0x0000F14A ***/
  union {
    word Word;
  } GPIO_A_RDATA_STR;
  
  #define GPIO_A_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_A_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_A_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_A_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_A_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_A_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_A_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_A_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_A_RDATA_RAW_DATA_MASK    0xFFU
  #define GPIO_A_RDATA_RAW_DATA_BITNUM  0x00U
  #define GPIO_A_RDATA                  (*((volatile word *)0x0000F14A))


  /*** GPIO_A_DRIVE - GPIO A Drive Strength Control Register; 0x0000F14B ***/
  union {
    word Word;
  } GPIO_A_DRIVE_STR;
  
  #define GPIO_A_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_A_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_A_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_A_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_A_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_A_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_A_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_A_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_A_DRIVE_DRIVE_MASK       0xFFU
  #define GPIO_A_DRIVE_DRIVE_BITNUM     0x00U
  #define GPIO_A_DRIVE                  (*((volatile word *)0x0000F14B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOA_PRPH;

/******************************************
*** Peripheral GPIOB
*******************************************/
typedef volatile struct {
  /*** GPIO_B_PUPEN - GPIO B Pull-up Enable Register; 0x0000F150 ***/
  union {
    word Word;
  } GPIO_B_PUPEN_STR;
  
  #define GPIO_B_PUPEN_PU0_MASK         0x01U
  #define GPIO_B_PUPEN_PU1_MASK         0x02U
  #define GPIO_B_PUPEN_PU2_MASK         0x04U
  #define GPIO_B_PUPEN_PU3_MASK         0x08U
  #define GPIO_B_PUPEN_PU4_MASK         0x10U
  #define GPIO_B_PUPEN_PU5_MASK         0x20U
  #define GPIO_B_PUPEN_PU6_MASK         0x40U
  #define GPIO_B_PUPEN_PU7_MASK         0x80U
  #define GPIO_B_PUPEN_PU_MASK          0xFFU
  #define GPIO_B_PUPEN_PU_BITNUM        0x00U
  #define GPIO_B_PUPEN                  (*((volatile word *)0x0000F150))


  /*** GPIO_B_DATA - GPIO B Data Register; 0x0000F151 ***/
  union {
    word Word;
  } GPIO_B_DATA_STR;
  
  #define GPIO_B_DATA_D0_MASK           0x01U
  #define GPIO_B_DATA_D1_MASK           0x02U
  #define GPIO_B_DATA_D2_MASK           0x04U
  #define GPIO_B_DATA_D3_MASK           0x08U
  #define GPIO_B_DATA_D4_MASK           0x10U
  #define GPIO_B_DATA_D5_MASK           0x20U
  #define GPIO_B_DATA_D6_MASK           0x40U
  #define GPIO_B_DATA_D7_MASK           0x80U
  #define GPIO_B_DATA_D_MASK            0xFFU
  #define GPIO_B_DATA_D_BITNUM          0x00U
  #define GPIO_B_DATA                   (*((volatile word *)0x0000F151))


  /*** GPIO_B_DDIR - GPIO B Data Direction Register; 0x0000F152 ***/
  union {
    word Word;
  } GPIO_B_DDIR_STR;
  
  #define GPIO_B_DDIR_DD0_MASK          0x01U
  #define GPIO_B_DDIR_DD1_MASK          0x02U
  #define GPIO_B_DDIR_DD2_MASK          0x04U
  #define GPIO_B_DDIR_DD3_MASK          0x08U
  #define GPIO_B_DDIR_DD4_MASK          0x10U
  #define GPIO_B_DDIR_DD5_MASK          0x20U
  #define GPIO_B_DDIR_DD6_MASK          0x40U
  #define GPIO_B_DDIR_DD7_MASK          0x80U
  #define GPIO_B_DDIR_DD_MASK           0xFFU
  #define GPIO_B_DDIR_DD_BITNUM         0x00U
  #define GPIO_B_DDIR                   (*((volatile word *)0x0000F152))


  /*** GPIO_B_PEREN - GPIO B Peripheral Enable Registers; 0x0000F153 ***/
  union {
    word Word;
  } GPIO_B_PEREN_STR;
  
  #define GPIO_B_PEREN_PE0_MASK         0x01U
  #define GPIO_B_PEREN_PE1_MASK         0x02U
  #define GPIO_B_PEREN_PE2_MASK         0x04U
  #define GPIO_B_PEREN_PE3_MASK         0x08U
  #define GPIO_B_PEREN_PE4_MASK         0x10U
  #define GPIO_B_PEREN_PE5_MASK         0x20U
  #define GPIO_B_PEREN_PE6_MASK         0x40U
  #define GPIO_B_PEREN_PE7_MASK         0x80U
  #define GPIO_B_PEREN_PE_MASK          0xFFU
  #define GPIO_B_PEREN_PE_BITNUM        0x00U
  #define GPIO_B_PEREN                  (*((volatile word *)0x0000F153))


  /*** GPIO_B_IASSRT - GPIO B Interrupt Assert Register; 0x0000F154 ***/
  union {
    word Word;
  } GPIO_B_IASSRT_STR;
  
  #define GPIO_B_IASSRT_IA0_MASK        0x01U
  #define GPIO_B_IASSRT_IA1_MASK        0x02U
  #define GPIO_B_IASSRT_IA2_MASK        0x04U
  #define GPIO_B_IASSRT_IA3_MASK        0x08U
  #define GPIO_B_IASSRT_IA4_MASK        0x10U
  #define GPIO_B_IASSRT_IA5_MASK        0x20U
  #define GPIO_B_IASSRT_IA6_MASK        0x40U
  #define GPIO_B_IASSRT_IA7_MASK        0x80U
  #define GPIO_B_IASSRT_IA_MASK         0xFFU
  #define GPIO_B_IASSRT_IA_BITNUM       0x00U
  #define GPIO_B_IASSRT                 (*((volatile word *)0x0000F154))


  /*** GPIO_B_IEN - GPIO B Interrupt Enable Register; 0x0000F155 ***/
  union {
    word Word;
  } GPIO_B_IEN_STR;
  
  #define GPIO_B_IEN_IEN0_MASK          0x01U
  #define GPIO_B_IEN_IEN1_MASK          0x02U
  #define GPIO_B_IEN_IEN2_MASK          0x04U
  #define GPIO_B_IEN_IEN3_MASK          0x08U
  #define GPIO_B_IEN_IEN4_MASK          0x10U
  #define GPIO_B_IEN_IEN5_MASK          0x20U
  #define GPIO_B_IEN_IEN6_MASK          0x40U
  #define GPIO_B_IEN_IEN7_MASK          0x80U
  #define GPIO_B_IEN_IEN_MASK           0xFFU
  #define GPIO_B_IEN_IEN_BITNUM         0x00U
  #define GPIO_B_IEN                    (*((volatile word *)0x0000F155))


  /*** GPIO_B_IPOL - GPIO B Interrupt Polarity Register; 0x0000F156 ***/
  union {
    word Word;
  } GPIO_B_IPOL_STR;
  
  #define GPIO_B_IPOL_IPOL0_MASK        0x01U
  #define GPIO_B_IPOL_IPOL1_MASK        0x02U
  #define GPIO_B_IPOL_IPOL2_MASK        0x04U
  #define GPIO_B_IPOL_IPOL3_MASK        0x08U
  #define GPIO_B_IPOL_IPOL4_MASK        0x10U
  #define GPIO_B_IPOL_IPOL5_MASK        0x20U
  #define GPIO_B_IPOL_IPOL6_MASK        0x40U
  #define GPIO_B_IPOL_IPOL7_MASK        0x80U
  #define GPIO_B_IPOL_IPOL_MASK         0xFFU
  #define GPIO_B_IPOL_IPOL_BITNUM       0x00U
  #define GPIO_B_IPOL                   (*((volatile word *)0x0000F156))


  /*** GPIO_B_IPEND - GPIO B Interrupt Pending Register; 0x0000F157 ***/
  union {
    word Word;
  } GPIO_B_IPEND_STR;
  
  #define GPIO_B_IPEND_IP0_MASK         0x01U
  #define GPIO_B_IPEND_IP1_MASK         0x02U
  #define GPIO_B_IPEND_IP2_MASK         0x04U
  #define GPIO_B_IPEND_IP3_MASK         0x08U
  #define GPIO_B_IPEND_IP4_MASK         0x10U
  #define GPIO_B_IPEND_IP5_MASK         0x20U
  #define GPIO_B_IPEND_IP6_MASK         0x40U
  #define GPIO_B_IPEND_IP7_MASK         0x80U
  #define GPIO_B_IPEND_IP_MASK          0xFFU
  #define GPIO_B_IPEND_IP_BITNUM        0x00U
  #define GPIO_B_IPEND                  (*((volatile word *)0x0000F157))


  /*** GPIO_B_IEDGE - GPIO B Interrupt Edge Sensitive Register; 0x0000F158 ***/
  union {
    word Word;
  } GPIO_B_IEDGE_STR;
  
  #define GPIO_B_IEDGE_IES0_MASK        0x01U
  #define GPIO_B_IEDGE_IES1_MASK        0x02U
  #define GPIO_B_IEDGE_IES2_MASK        0x04U
  #define GPIO_B_IEDGE_IES3_MASK        0x08U
  #define GPIO_B_IEDGE_IES4_MASK        0x10U
  #define GPIO_B_IEDGE_IES5_MASK        0x20U
  #define GPIO_B_IEDGE_IES6_MASK        0x40U
  #define GPIO_B_IEDGE_IES7_MASK        0x80U
  #define GPIO_B_IEDGE_IES_MASK         0xFFU
  #define GPIO_B_IEDGE_IES_BITNUM       0x00U
  #define GPIO_B_IEDGE                  (*((volatile word *)0x0000F158))


  /*** GPIO_B_PPOUTM - GPIO B Push-Pull Mode Register; 0x0000F159 ***/
  union {
    word Word;
  } GPIO_B_PPOUTM_STR;
  
  #define GPIO_B_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_B_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_B_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_B_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_B_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_B_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_B_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_B_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_B_PPOUTM_PPMODE_MASK     0xFFU
  #define GPIO_B_PPOUTM_PPMODE_BITNUM   0x00U
  #define GPIO_B_PPOUTM                 (*((volatile word *)0x0000F159))


  /*** GPIO_B_RDATA - GPIO B Raw Data Register; 0x0000F15A ***/
  union {
    word Word;
  } GPIO_B_RDATA_STR;
  
  #define GPIO_B_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_B_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_B_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_B_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_B_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_B_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_B_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_B_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_B_RDATA_RAW_DATA_MASK    0xFFU
  #define GPIO_B_RDATA_RAW_DATA_BITNUM  0x00U
  #define GPIO_B_RDATA                  (*((volatile word *)0x0000F15A))


  /*** GPIO_B_DRIVE - GPIO B Drive Strength Control Register; 0x0000F15B ***/
  union {
    word Word;
  } GPIO_B_DRIVE_STR;
  
  #define GPIO_B_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_B_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_B_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_B_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_B_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_B_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_B_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_B_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_B_DRIVE_DRIVE_MASK       0xFFU
  #define GPIO_B_DRIVE_DRIVE_BITNUM     0x00U
  #define GPIO_B_DRIVE                  (*((volatile word *)0x0000F15B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOB_PRPH;

/******************************************
*** Peripheral GPIOC
*******************************************/
typedef volatile struct {
  /*** GPIO_C_PUPEN - GPIO C Pull-up Enable Register; 0x0000F160 ***/
  union {
    word Word;
  } GPIO_C_PUPEN_STR;
  
  #define GPIO_C_PUPEN_PU0_MASK         0x01U
  #define GPIO_C_PUPEN_PU1_MASK         0x02U
  #define GPIO_C_PUPEN_PU2_MASK         0x04U
  #define GPIO_C_PUPEN_PU3_MASK         0x08U
  #define GPIO_C_PUPEN_PU4_MASK         0x10U
  #define GPIO_C_PUPEN_PU5_MASK         0x20U
  #define GPIO_C_PUPEN_PU6_MASK         0x40U
  #define GPIO_C_PUPEN_PU7_MASK         0x80U
  #define GPIO_C_PUPEN_PU8_MASK         0x0100U
  #define GPIO_C_PUPEN_PU9_MASK         0x0200U
  #define GPIO_C_PUPEN_PU10_MASK        0x0400U
  #define GPIO_C_PUPEN_PU11_MASK        0x0800U
  #define GPIO_C_PUPEN_PU12_MASK        0x1000U
  #define GPIO_C_PUPEN_PU13_MASK        0x2000U
  #define GPIO_C_PUPEN_PU14_MASK        0x4000U
  #define GPIO_C_PUPEN_PU15_MASK        0x8000U
  #define GPIO_C_PUPEN                  (*((volatile word *)0x0000F160))


  /*** GPIO_C_DATA - GPIO C Data Register; 0x0000F161 ***/
  union {
    word Word;
  } GPIO_C_DATA_STR;
  
  #define GPIO_C_DATA_D0_MASK           0x01U
  #define GPIO_C_DATA_D1_MASK           0x02U
  #define GPIO_C_DATA_D2_MASK           0x04U
  #define GPIO_C_DATA_D3_MASK           0x08U
  #define GPIO_C_DATA_D4_MASK           0x10U
  #define GPIO_C_DATA_D5_MASK           0x20U
  #define GPIO_C_DATA_D6_MASK           0x40U
  #define GPIO_C_DATA_D7_MASK           0x80U
  #define GPIO_C_DATA_D8_MASK           0x0100U
  #define GPIO_C_DATA_D9_MASK           0x0200U
  #define GPIO_C_DATA_D10_MASK          0x0400U
  #define GPIO_C_DATA_D11_MASK          0x0800U
  #define GPIO_C_DATA_D12_MASK          0x1000U
  #define GPIO_C_DATA_D13_MASK          0x2000U
  #define GPIO_C_DATA_D14_MASK          0x4000U
  #define GPIO_C_DATA_D15_MASK          0x8000U
  #define GPIO_C_DATA                   (*((volatile word *)0x0000F161))


  /*** GPIO_C_DDIR - GPIO C Data Direction Register; 0x0000F162 ***/
  union {
    word Word;
  } GPIO_C_DDIR_STR;
  
  #define GPIO_C_DDIR_DD0_MASK          0x01U
  #define GPIO_C_DDIR_DD1_MASK          0x02U
  #define GPIO_C_DDIR_DD2_MASK          0x04U
  #define GPIO_C_DDIR_DD3_MASK          0x08U
  #define GPIO_C_DDIR_DD4_MASK          0x10U
  #define GPIO_C_DDIR_DD5_MASK          0x20U
  #define GPIO_C_DDIR_DD6_MASK          0x40U
  #define GPIO_C_DDIR_DD7_MASK          0x80U
  #define GPIO_C_DDIR_DD8_MASK          0x0100U
  #define GPIO_C_DDIR_DD9_MASK          0x0200U
  #define GPIO_C_DDIR_DD10_MASK         0x0400U
  #define GPIO_C_DDIR_DD11_MASK         0x0800U
  #define GPIO_C_DDIR_DD12_MASK         0x1000U
  #define GPIO_C_DDIR_DD13_MASK         0x2000U
  #define GPIO_C_DDIR_DD14_MASK         0x4000U
  #define GPIO_C_DDIR_DD15_MASK         0x8000U
  #define GPIO_C_DDIR                   (*((volatile word *)0x0000F162))


  /*** GPIO_C_PEREN - GPIO C Peripheral Enable Registers; 0x0000F163 ***/
  union {
    word Word;
  } GPIO_C_PEREN_STR;
  
  #define GPIO_C_PEREN_PE0_MASK         0x01U
  #define GPIO_C_PEREN_PE1_MASK         0x02U
  #define GPIO_C_PEREN_PE2_MASK         0x04U
  #define GPIO_C_PEREN_PE3_MASK         0x08U
  #define GPIO_C_PEREN_PE4_MASK         0x10U
  #define GPIO_C_PEREN_PE5_MASK         0x20U
  #define GPIO_C_PEREN_PE6_MASK         0x40U
  #define GPIO_C_PEREN_PE7_MASK         0x80U
  #define GPIO_C_PEREN_PE8_MASK         0x0100U
  #define GPIO_C_PEREN_PE9_MASK         0x0200U
  #define GPIO_C_PEREN_PE10_MASK        0x0400U
  #define GPIO_C_PEREN_PE11_MASK        0x0800U
  #define GPIO_C_PEREN_PE12_MASK        0x1000U
  #define GPIO_C_PEREN_PE13_MASK        0x2000U
  #define GPIO_C_PEREN_PE14_MASK        0x4000U
  #define GPIO_C_PEREN_PE15_MASK        0x8000U
  #define GPIO_C_PEREN                  (*((volatile word *)0x0000F163))


  /*** GPIO_C_IASSRT - GPIO C Interrupt Assert Register; 0x0000F164 ***/
  union {
    word Word;
  } GPIO_C_IASSRT_STR;
  
  #define GPIO_C_IASSRT_IA0_MASK        0x01U
  #define GPIO_C_IASSRT_IA1_MASK        0x02U
  #define GPIO_C_IASSRT_IA2_MASK        0x04U
  #define GPIO_C_IASSRT_IA3_MASK        0x08U
  #define GPIO_C_IASSRT_IA4_MASK        0x10U
  #define GPIO_C_IASSRT_IA5_MASK        0x20U
  #define GPIO_C_IASSRT_IA6_MASK        0x40U
  #define GPIO_C_IASSRT_IA7_MASK        0x80U
  #define GPIO_C_IASSRT_IA8_MASK        0x0100U
  #define GPIO_C_IASSRT_IA9_MASK        0x0200U
  #define GPIO_C_IASSRT_IA10_MASK       0x0400U
  #define GPIO_C_IASSRT_IA11_MASK       0x0800U
  #define GPIO_C_IASSRT_IA12_MASK       0x1000U
  #define GPIO_C_IASSRT_IA13_MASK       0x2000U
  #define GPIO_C_IASSRT_IA14_MASK       0x4000U
  #define GPIO_C_IASSRT_IA15_MASK       0x8000U
  #define GPIO_C_IASSRT                 (*((volatile word *)0x0000F164))


  /*** GPIO_C_IEN - GPIO C Interrupt Enable Register; 0x0000F165 ***/
  union {
    word Word;
  } GPIO_C_IEN_STR;
  
  #define GPIO_C_IEN_IEN0_MASK          0x01U
  #define GPIO_C_IEN_IEN1_MASK          0x02U
  #define GPIO_C_IEN_IEN2_MASK          0x04U
  #define GPIO_C_IEN_IEN3_MASK          0x08U
  #define GPIO_C_IEN_IEN4_MASK          0x10U
  #define GPIO_C_IEN_IEN5_MASK          0x20U
  #define GPIO_C_IEN_IEN6_MASK          0x40U
  #define GPIO_C_IEN_IEN7_MASK          0x80U
  #define GPIO_C_IEN_IEN8_MASK          0x0100U
  #define GPIO_C_IEN_IEN9_MASK          0x0200U
  #define GPIO_C_IEN_IEN10_MASK         0x0400U
  #define GPIO_C_IEN_IEN11_MASK         0x0800U
  #define GPIO_C_IEN_IEN12_MASK         0x1000U
  #define GPIO_C_IEN_IEN13_MASK         0x2000U
  #define GPIO_C_IEN_IEN14_MASK         0x4000U
  #define GPIO_C_IEN_IEN15_MASK         0x8000U
  #define GPIO_C_IEN                    (*((volatile word *)0x0000F165))


  /*** GPIO_C_IPOL - GPIO C Interrupt Polarity Register; 0x0000F166 ***/
  union {
    word Word;
  } GPIO_C_IPOL_STR;
  
  #define GPIO_C_IPOL_IPOL0_MASK        0x01U
  #define GPIO_C_IPOL_IPOL1_MASK        0x02U
  #define GPIO_C_IPOL_IPOL2_MASK        0x04U
  #define GPIO_C_IPOL_IPOL3_MASK        0x08U
  #define GPIO_C_IPOL_IPOL4_MASK        0x10U
  #define GPIO_C_IPOL_IPOL5_MASK        0x20U
  #define GPIO_C_IPOL_IPOL6_MASK        0x40U
  #define GPIO_C_IPOL_IPOL7_MASK        0x80U
  #define GPIO_C_IPOL_IPOL8_MASK        0x0100U
  #define GPIO_C_IPOL_IPOL9_MASK        0x0200U
  #define GPIO_C_IPOL_IPOL10_MASK       0x0400U
  #define GPIO_C_IPOL_IPOL11_MASK       0x0800U
  #define GPIO_C_IPOL_IPOL12_MASK       0x1000U
  #define GPIO_C_IPOL_IPOL13_MASK       0x2000U
  #define GPIO_C_IPOL_IPOL14_MASK       0x4000U
  #define GPIO_C_IPOL_IPOL15_MASK       0x8000U
  #define GPIO_C_IPOL                   (*((volatile word *)0x0000F166))


  /*** GPIO_C_IPEND - GPIO C Interrupt Pending Register; 0x0000F167 ***/
  union {
    word Word;
  } GPIO_C_IPEND_STR;
  
  #define GPIO_C_IPEND_IP0_MASK         0x01U
  #define GPIO_C_IPEND_IP1_MASK         0x02U
  #define GPIO_C_IPEND_IP2_MASK         0x04U
  #define GPIO_C_IPEND_IP3_MASK         0x08U
  #define GPIO_C_IPEND_IP4_MASK         0x10U
  #define GPIO_C_IPEND_IP5_MASK         0x20U
  #define GPIO_C_IPEND_IP6_MASK         0x40U
  #define GPIO_C_IPEND_IP7_MASK         0x80U
  #define GPIO_C_IPEND_IP8_MASK         0x0100U
  #define GPIO_C_IPEND_IP9_MASK         0x0200U
  #define GPIO_C_IPEND_IP10_MASK        0x0400U
  #define GPIO_C_IPEND_IP11_MASK        0x0800U
  #define GPIO_C_IPEND_IP12_MASK        0x1000U
  #define GPIO_C_IPEND_IP13_MASK        0x2000U
  #define GPIO_C_IPEND_IP14_MASK        0x4000U
  #define GPIO_C_IPEND_IP15_MASK        0x8000U
  #define GPIO_C_IPEND                  (*((volatile word *)0x0000F167))


  /*** GPIO_C_IEDGE - GPIO C Interrupt Edge Sensitive Register; 0x0000F168 ***/
  union {
    word Word;
  } GPIO_C_IEDGE_STR;
  
  #define GPIO_C_IEDGE_IES0_MASK        0x01U
  #define GPIO_C_IEDGE_IES1_MASK        0x02U
  #define GPIO_C_IEDGE_IES2_MASK        0x04U
  #define GPIO_C_IEDGE_IES3_MASK        0x08U
  #define GPIO_C_IEDGE_IES4_MASK        0x10U
  #define GPIO_C_IEDGE_IES5_MASK        0x20U
  #define GPIO_C_IEDGE_IES6_MASK        0x40U
  #define GPIO_C_IEDGE_IES7_MASK        0x80U
  #define GPIO_C_IEDGE_IES8_MASK        0x0100U
  #define GPIO_C_IEDGE_IES9_MASK        0x0200U
  #define GPIO_C_IEDGE_IES10_MASK       0x0400U
  #define GPIO_C_IEDGE_IES11_MASK       0x0800U
  #define GPIO_C_IEDGE_IES12_MASK       0x1000U
  #define GPIO_C_IEDGE_IES13_MASK       0x2000U
  #define GPIO_C_IEDGE_IES14_MASK       0x4000U
  #define GPIO_C_IEDGE_IES15_MASK       0x8000U
  #define GPIO_C_IEDGE                  (*((volatile word *)0x0000F168))


  /*** GPIO_C_PPOUTM - GPIO C Push-Pull Mode Register; 0x0000F169 ***/
  union {
    word Word;
  } GPIO_C_PPOUTM_STR;
  
  #define GPIO_C_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_C_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_C_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_C_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_C_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_C_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_C_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_C_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_C_PPOUTM_PPMODE8_MASK    0x0100U
  #define GPIO_C_PPOUTM_PPMODE9_MASK    0x0200U
  #define GPIO_C_PPOUTM_PPMODE10_MASK   0x0400U
  #define GPIO_C_PPOUTM_PPMODE11_MASK   0x0800U
  #define GPIO_C_PPOUTM_PPMODE12_MASK   0x1000U
  #define GPIO_C_PPOUTM_PPMODE13_MASK   0x2000U
  #define GPIO_C_PPOUTM_PPMODE14_MASK   0x4000U
  #define GPIO_C_PPOUTM_PPMODE15_MASK   0x8000U
  #define GPIO_C_PPOUTM                 (*((volatile word *)0x0000F169))


  /*** GPIO_C_RDATA - GPIO C Raw Data Register; 0x0000F16A ***/
  union {
    word Word;
  } GPIO_C_RDATA_STR;
  
  #define GPIO_C_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_C_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_C_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_C_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_C_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_C_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_C_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_C_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_C_RDATA_RAW_DATA8_MASK   0x0100U
  #define GPIO_C_RDATA_RAW_DATA9_MASK   0x0200U
  #define GPIO_C_RDATA_RAW_DATA10_MASK  0x0400U
  #define GPIO_C_RDATA_RAW_DATA11_MASK  0x0800U
  #define GPIO_C_RDATA_RAW_DATA12_MASK  0x1000U
  #define GPIO_C_RDATA_RAW_DATA13_MASK  0x2000U
  #define GPIO_C_RDATA_RAW_DATA14_MASK  0x4000U
  #define GPIO_C_RDATA_RAW_DATA15_MASK  0x8000U
  #define GPIO_C_RDATA                  (*((volatile word *)0x0000F16A))


  /*** GPIO_C_DRIVE - GPIO C Drive Strength Control Register; 0x0000F16B ***/
  union {
    word Word;
  } GPIO_C_DRIVE_STR;
  
  #define GPIO_C_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_C_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_C_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_C_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_C_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_C_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_C_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_C_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_C_DRIVE_DRIVE8_MASK      0x0100U
  #define GPIO_C_DRIVE_DRIVE9_MASK      0x0200U
  #define GPIO_C_DRIVE_DRIVE10_MASK     0x0400U
  #define GPIO_C_DRIVE_DRIVE11_MASK     0x0800U
  #define GPIO_C_DRIVE_DRIVE12_MASK     0x1000U
  #define GPIO_C_DRIVE_DRIVE13_MASK     0x2000U
  #define GPIO_C_DRIVE_DRIVE14_MASK     0x4000U
  #define GPIO_C_DRIVE_DRIVE15_MASK     0x8000U
  #define GPIO_C_DRIVE                  (*((volatile word *)0x0000F16B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOC_PRPH;

/******************************************
*** Peripheral GPIOD
*******************************************/
typedef volatile struct {
  /*** GPIO_D_PUPEN - GPIO D Pull-up Enable Register; 0x0000F170 ***/
  union {
    word Word;
  } GPIO_D_PUPEN_STR;
  
  #define GPIO_D_PUPEN_PU0_MASK         0x01U
  #define GPIO_D_PUPEN_PU1_MASK         0x02U
  #define GPIO_D_PUPEN_PU2_MASK         0x04U
  #define GPIO_D_PUPEN_PU3_MASK         0x08U
  #define GPIO_D_PUPEN_PU4_MASK         0x10U
  #define GPIO_D_PUPEN_PU_MASK          0x1FU
  #define GPIO_D_PUPEN_PU_BITNUM        0x00U
  #define GPIO_D_PUPEN                  (*((volatile word *)0x0000F170))


  /*** GPIO_D_DATA - GPIO D Data Register; 0x0000F171 ***/
  union {
    word Word;
  } GPIO_D_DATA_STR;
  
  #define GPIO_D_DATA_D0_MASK           0x01U
  #define GPIO_D_DATA_D1_MASK           0x02U
  #define GPIO_D_DATA_D2_MASK           0x04U
  #define GPIO_D_DATA_D3_MASK           0x08U
  #define GPIO_D_DATA_D4_MASK           0x10U
  #define GPIO_D_DATA_D_MASK            0x1FU
  #define GPIO_D_DATA_D_BITNUM          0x00U
  #define GPIO_D_DATA                   (*((volatile word *)0x0000F171))


  /*** GPIO_D_DDIR - GPIO D Data Direction Register; 0x0000F172 ***/
  union {
    word Word;
  } GPIO_D_DDIR_STR;
  
  #define GPIO_D_DDIR_DD0_MASK          0x01U
  #define GPIO_D_DDIR_DD1_MASK          0x02U
  #define GPIO_D_DDIR_DD2_MASK          0x04U
  #define GPIO_D_DDIR_DD3_MASK          0x08U
  #define GPIO_D_DDIR_DD4_MASK          0x10U
  #define GPIO_D_DDIR_DD_MASK           0x1FU
  #define GPIO_D_DDIR_DD_BITNUM         0x00U
  #define GPIO_D_DDIR                   (*((volatile word *)0x0000F172))


  /*** GPIO_D_PEREN - GPIO D Peripheral Enable Registers; 0x0000F173 ***/
  union {
    word Word;
  } GPIO_D_PEREN_STR;
  
  #define GPIO_D_PEREN_PE0_MASK         0x01U
  #define GPIO_D_PEREN_PE1_MASK         0x02U
  #define GPIO_D_PEREN_PE2_MASK         0x04U
  #define GPIO_D_PEREN_PE3_MASK         0x08U
  #define GPIO_D_PEREN_PE4_MASK         0x10U
  #define GPIO_D_PEREN_PE_MASK          0x1FU
  #define GPIO_D_PEREN_PE_BITNUM        0x00U
  #define GPIO_D_PEREN                  (*((volatile word *)0x0000F173))


  /*** GPIO_D_IASSRT - GPIO D Interrupt Assert Register; 0x0000F174 ***/
  union {
    word Word;
  } GPIO_D_IASSRT_STR;
  
  #define GPIO_D_IASSRT_IA0_MASK        0x01U
  #define GPIO_D_IASSRT_IA1_MASK        0x02U
  #define GPIO_D_IASSRT_IA2_MASK        0x04U
  #define GPIO_D_IASSRT_IA3_MASK        0x08U
  #define GPIO_D_IASSRT_IA4_MASK        0x10U
  #define GPIO_D_IASSRT_IA_MASK         0x1FU
  #define GPIO_D_IASSRT_IA_BITNUM       0x00U
  #define GPIO_D_IASSRT                 (*((volatile word *)0x0000F174))


  /*** GPIO_D_IEN - GPIO D Interrupt Enable Register; 0x0000F175 ***/
  union {
    word Word;
  } GPIO_D_IEN_STR;
  
  #define GPIO_D_IEN_IEN0_MASK          0x01U
  #define GPIO_D_IEN_IEN1_MASK          0x02U
  #define GPIO_D_IEN_IEN2_MASK          0x04U
  #define GPIO_D_IEN_IEN3_MASK          0x08U
  #define GPIO_D_IEN_IEN4_MASK          0x10U
  #define GPIO_D_IEN_IEN_MASK           0x1FU
  #define GPIO_D_IEN_IEN_BITNUM         0x00U
  #define GPIO_D_IEN                    (*((volatile word *)0x0000F175))


  /*** GPIO_D_IPOL - GPIO D Interrupt Polarity Register; 0x0000F176 ***/
  union {
    word Word;
  } GPIO_D_IPOL_STR;
  
  #define GPIO_D_IPOL_IPOL0_MASK        0x01U
  #define GPIO_D_IPOL_IPOL1_MASK        0x02U
  #define GPIO_D_IPOL_IPOL2_MASK        0x04U
  #define GPIO_D_IPOL_IPOL3_MASK        0x08U
  #define GPIO_D_IPOL_IPOL4_MASK        0x10U
  #define GPIO_D_IPOL_IPOL_MASK         0x1FU
  #define GPIO_D_IPOL_IPOL_BITNUM       0x00U
  #define GPIO_D_IPOL                   (*((volatile word *)0x0000F176))


  /*** GPIO_D_IPEND - GPIO D Interrupt Pending Register; 0x0000F177 ***/
  union {
    word Word;
  } GPIO_D_IPEND_STR;
  
  #define GPIO_D_IPEND_IP0_MASK         0x01U
  #define GPIO_D_IPEND_IP1_MASK         0x02U
  #define GPIO_D_IPEND_IP2_MASK         0x04U
  #define GPIO_D_IPEND_IP3_MASK         0x08U
  #define GPIO_D_IPEND_IP4_MASK         0x10U
  #define GPIO_D_IPEND_IP_MASK          0x1FU
  #define GPIO_D_IPEND_IP_BITNUM        0x00U
  #define GPIO_D_IPEND                  (*((volatile word *)0x0000F177))


  /*** GPIO_D_IEDGE - GPIO D Interrupt Edge Sensitive Register; 0x0000F178 ***/
  union {
    word Word;
  } GPIO_D_IEDGE_STR;
  
  #define GPIO_D_IEDGE_IES0_MASK        0x01U
  #define GPIO_D_IEDGE_IES1_MASK        0x02U
  #define GPIO_D_IEDGE_IES2_MASK        0x04U
  #define GPIO_D_IEDGE_IES3_MASK        0x08U
  #define GPIO_D_IEDGE_IES4_MASK        0x10U
  #define GPIO_D_IEDGE_IES_MASK         0x1FU
  #define GPIO_D_IEDGE_IES_BITNUM       0x00U
  #define GPIO_D_IEDGE                  (*((volatile word *)0x0000F178))


  /*** GPIO_D_PPOUTM - GPIO D Push-Pull Mode Register; 0x0000F179 ***/
  union {
    word Word;
  } GPIO_D_PPOUTM_STR;
  
  #define GPIO_D_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_D_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_D_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_D_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_D_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_D_PPOUTM_PPMODE_MASK     0x1FU
  #define GPIO_D_PPOUTM_PPMODE_BITNUM   0x00U
  #define GPIO_D_PPOUTM                 (*((volatile word *)0x0000F179))


  /*** GPIO_D_RDATA - GPIO D Raw Data Register; 0x0000F17A ***/
  union {
    word Word;
  } GPIO_D_RDATA_STR;
  
  #define GPIO_D_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_D_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_D_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_D_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_D_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_D_RDATA_RAW_DATA_MASK    0x1FU
  #define GPIO_D_RDATA_RAW_DATA_BITNUM  0x00U
  #define GPIO_D_RDATA                  (*((volatile word *)0x0000F17A))


  /*** GPIO_D_DRIVE - GPIO D Drive Strength Control Register; 0x0000F17B ***/
  union {
    word Word;
  } GPIO_D_DRIVE_STR;
  
  #define GPIO_D_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_D_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_D_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_D_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_D_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_D_DRIVE_DRIVE_MASK       0x1FU
  #define GPIO_D_DRIVE_DRIVE_BITNUM     0x00U
  #define GPIO_D_DRIVE                  (*((volatile word *)0x0000F17B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOD_PRPH;

/******************************************
*** Peripheral GPIOE
*******************************************/
typedef volatile struct {
  /*** GPIO_E_PUPEN - GPIO E Pull-up Enable Register; 0x0000F180 ***/
  union {
    word Word;
  } GPIO_E_PUPEN_STR;
  
  #define GPIO_E_PUPEN_PU0_MASK         0x01U
  #define GPIO_E_PUPEN_PU1_MASK         0x02U
  #define GPIO_E_PUPEN_PU2_MASK         0x04U
  #define GPIO_E_PUPEN_PU3_MASK         0x08U
  #define GPIO_E_PUPEN_PU4_MASK         0x10U
  #define GPIO_E_PUPEN_PU5_MASK         0x20U
  #define GPIO_E_PUPEN_PU6_MASK         0x40U
  #define GPIO_E_PUPEN_PU7_MASK         0x80U
  #define GPIO_E_PUPEN_PU_MASK          0xFFU
  #define GPIO_E_PUPEN_PU_BITNUM        0x00U
  #define GPIO_E_PUPEN                  (*((volatile word *)0x0000F180))


  /*** GPIO_E_DATA - GPIO E Data Register; 0x0000F181 ***/
  union {
    word Word;
  } GPIO_E_DATA_STR;
  
  #define GPIO_E_DATA_D0_MASK           0x01U
  #define GPIO_E_DATA_D1_MASK           0x02U
  #define GPIO_E_DATA_D2_MASK           0x04U
  #define GPIO_E_DATA_D3_MASK           0x08U
  #define GPIO_E_DATA_D4_MASK           0x10U
  #define GPIO_E_DATA_D5_MASK           0x20U
  #define GPIO_E_DATA_D6_MASK           0x40U
  #define GPIO_E_DATA_D7_MASK           0x80U
  #define GPIO_E_DATA_D_MASK            0xFFU
  #define GPIO_E_DATA_D_BITNUM          0x00U
  #define GPIO_E_DATA                   (*((volatile word *)0x0000F181))


  /*** GPIO_E_DDIR - GPIO E Data Direction Register; 0x0000F182 ***/
  union {
    word Word;
  } GPIO_E_DDIR_STR;
  
  #define GPIO_E_DDIR_DD0_MASK          0x01U
  #define GPIO_E_DDIR_DD1_MASK          0x02U
  #define GPIO_E_DDIR_DD2_MASK          0x04U
  #define GPIO_E_DDIR_DD3_MASK          0x08U
  #define GPIO_E_DDIR_DD4_MASK          0x10U
  #define GPIO_E_DDIR_DD5_MASK          0x20U
  #define GPIO_E_DDIR_DD6_MASK          0x40U
  #define GPIO_E_DDIR_DD7_MASK          0x80U
  #define GPIO_E_DDIR_DD_MASK           0xFFU
  #define GPIO_E_DDIR_DD_BITNUM         0x00U
  #define GPIO_E_DDIR                   (*((volatile word *)0x0000F182))


  /*** GPIO_E_PEREN - GPIO E Peripheral Enable Registers; 0x0000F183 ***/
  union {
    word Word;
  } GPIO_E_PEREN_STR;
  
  #define GPIO_E_PEREN_PE0_MASK         0x01U
  #define GPIO_E_PEREN_PE1_MASK         0x02U
  #define GPIO_E_PEREN_PE2_MASK         0x04U
  #define GPIO_E_PEREN_PE3_MASK         0x08U
  #define GPIO_E_PEREN_PE4_MASK         0x10U
  #define GPIO_E_PEREN_PE5_MASK         0x20U
  #define GPIO_E_PEREN_PE6_MASK         0x40U
  #define GPIO_E_PEREN_PE7_MASK         0x80U
  #define GPIO_E_PEREN_PE_MASK          0xFFU
  #define GPIO_E_PEREN_PE_BITNUM        0x00U
  #define GPIO_E_PEREN                  (*((volatile word *)0x0000F183))


  /*** GPIO_E_IASSRT - GPIO E Interrupt Assert Register; 0x0000F184 ***/
  union {
    word Word;
  } GPIO_E_IASSRT_STR;
  
  #define GPIO_E_IASSRT_IA0_MASK        0x01U
  #define GPIO_E_IASSRT_IA1_MASK        0x02U
  #define GPIO_E_IASSRT_IA2_MASK        0x04U
  #define GPIO_E_IASSRT_IA3_MASK        0x08U
  #define GPIO_E_IASSRT_IA4_MASK        0x10U
  #define GPIO_E_IASSRT_IA5_MASK        0x20U
  #define GPIO_E_IASSRT_IA6_MASK        0x40U
  #define GPIO_E_IASSRT_IA7_MASK        0x80U
  #define GPIO_E_IASSRT_IA_MASK         0xFFU
  #define GPIO_E_IASSRT_IA_BITNUM       0x00U
  #define GPIO_E_IASSRT                 (*((volatile word *)0x0000F184))


  /*** GPIO_E_IEN - GPIO E Interrupt Enable Register; 0x0000F185 ***/
  union {
    word Word;
  } GPIO_E_IEN_STR;
  
  #define GPIO_E_IEN_IEN0_MASK          0x01U
  #define GPIO_E_IEN_IEN1_MASK          0x02U
  #define GPIO_E_IEN_IEN2_MASK          0x04U
  #define GPIO_E_IEN_IEN3_MASK          0x08U
  #define GPIO_E_IEN_IEN4_MASK          0x10U
  #define GPIO_E_IEN_IEN5_MASK          0x20U
  #define GPIO_E_IEN_IEN6_MASK          0x40U
  #define GPIO_E_IEN_IEN7_MASK          0x80U
  #define GPIO_E_IEN_IEN_MASK           0xFFU
  #define GPIO_E_IEN_IEN_BITNUM         0x00U
  #define GPIO_E_IEN                    (*((volatile word *)0x0000F185))


  /*** GPIO_E_IPOL - GPIO E Interrupt Polarity Register; 0x0000F186 ***/
  union {
    word Word;
  } GPIO_E_IPOL_STR;
  
  #define GPIO_E_IPOL_IPOL0_MASK        0x01U
  #define GPIO_E_IPOL_IPOL1_MASK        0x02U
  #define GPIO_E_IPOL_IPOL2_MASK        0x04U
  #define GPIO_E_IPOL_IPOL3_MASK        0x08U
  #define GPIO_E_IPOL_IPOL4_MASK        0x10U
  #define GPIO_E_IPOL_IPOL5_MASK        0x20U
  #define GPIO_E_IPOL_IPOL6_MASK        0x40U
  #define GPIO_E_IPOL_IPOL7_MASK        0x80U
  #define GPIO_E_IPOL_IPOL_MASK         0xFFU
  #define GPIO_E_IPOL_IPOL_BITNUM       0x00U
  #define GPIO_E_IPOL                   (*((volatile word *)0x0000F186))


  /*** GPIO_E_IPEND - GPIO E Interrupt Pending Register; 0x0000F187 ***/
  union {
    word Word;
  } GPIO_E_IPEND_STR;
  
  #define GPIO_E_IPEND_IP0_MASK         0x01U
  #define GPIO_E_IPEND_IP1_MASK         0x02U
  #define GPIO_E_IPEND_IP2_MASK         0x04U
  #define GPIO_E_IPEND_IP3_MASK         0x08U
  #define GPIO_E_IPEND_IP4_MASK         0x10U
  #define GPIO_E_IPEND_IP5_MASK         0x20U
  #define GPIO_E_IPEND_IP6_MASK         0x40U
  #define GPIO_E_IPEND_IP7_MASK         0x80U
  #define GPIO_E_IPEND_IP_MASK          0xFFU
  #define GPIO_E_IPEND_IP_BITNUM        0x00U
  #define GPIO_E_IPEND                  (*((volatile word *)0x0000F187))


  /*** GPIO_E_IEDGE - GPIO E Interrupt Edge Sensitive Register; 0x0000F188 ***/
  union {
    word Word;
  } GPIO_E_IEDGE_STR;
  
  #define GPIO_E_IEDGE_IES0_MASK        0x01U
  #define GPIO_E_IEDGE_IES1_MASK        0x02U
  #define GPIO_E_IEDGE_IES2_MASK        0x04U
  #define GPIO_E_IEDGE_IES3_MASK        0x08U
  #define GPIO_E_IEDGE_IES4_MASK        0x10U
  #define GPIO_E_IEDGE_IES5_MASK        0x20U
  #define GPIO_E_IEDGE_IES6_MASK        0x40U
  #define GPIO_E_IEDGE_IES7_MASK        0x80U
  #define GPIO_E_IEDGE_IES_MASK         0xFFU
  #define GPIO_E_IEDGE_IES_BITNUM       0x00U
  #define GPIO_E_IEDGE                  (*((volatile word *)0x0000F188))


  /*** GPIO_E_PPOUTM - GPIO E Push-Pull Mode Register; 0x0000F189 ***/
  union {
    word Word;
  } GPIO_E_PPOUTM_STR;
  
  #define GPIO_E_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_E_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_E_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_E_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_E_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_E_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_E_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_E_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_E_PPOUTM_PPMODE_MASK     0xFFU
  #define GPIO_E_PPOUTM_PPMODE_BITNUM   0x00U
  #define GPIO_E_PPOUTM                 (*((volatile word *)0x0000F189))


  /*** GPIO_E_RDATA - GPIO E Raw Data Register; 0x0000F18A ***/
  union {
    word Word;
  } GPIO_E_RDATA_STR;
  
  #define GPIO_E_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_E_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_E_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_E_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_E_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_E_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_E_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_E_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_E_RDATA_RAW_DATA_MASK    0xFFU
  #define GPIO_E_RDATA_RAW_DATA_BITNUM  0x00U
  #define GPIO_E_RDATA                  (*((volatile word *)0x0000F18A))


  /*** GPIO_E_DRIVE - GPIO E Drive Strength Control Register; 0x0000F18B ***/
  union {
    word Word;
  } GPIO_E_DRIVE_STR;
  
  #define GPIO_E_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_E_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_E_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_E_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_E_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_E_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_E_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_E_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_E_DRIVE_DRIVE_MASK       0xFFU
  #define GPIO_E_DRIVE_DRIVE_BITNUM     0x00U
  #define GPIO_E_DRIVE                  (*((volatile word *)0x0000F18B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOE_PRPH;

/******************************************
*** Peripheral GPIOF
*******************************************/
typedef volatile struct {
  /*** GPIO_F_PUPEN - GPIO F Pull-up Enable Register; 0x0000F190 ***/
  union {
    word Word;
  } GPIO_F_PUPEN_STR;
  
  #define GPIO_F_PUPEN_PU0_MASK         0x01U
  #define GPIO_F_PUPEN_PU1_MASK         0x02U
  #define GPIO_F_PUPEN_PU2_MASK         0x04U
  #define GPIO_F_PUPEN_PU3_MASK         0x08U
  #define GPIO_F_PUPEN_PU4_MASK         0x10U
  #define GPIO_F_PUPEN_PU5_MASK         0x20U
  #define GPIO_F_PUPEN_PU6_MASK         0x40U
  #define GPIO_F_PUPEN_PU7_MASK         0x80U
  #define GPIO_F_PUPEN_PU8_MASK         0x0100U
  #define GPIO_F_PUPEN_PU_MASK          0x01FFU
  #define GPIO_F_PUPEN_PU_BITNUM        0x00U
  #define GPIO_F_PUPEN                  (*((volatile word *)0x0000F190))


  /*** GPIO_F_DATA - GPIO F Data Register; 0x0000F191 ***/
  union {
    word Word;
  } GPIO_F_DATA_STR;
  
  #define GPIO_F_DATA_D0_MASK           0x01U
  #define GPIO_F_DATA_D1_MASK           0x02U
  #define GPIO_F_DATA_D2_MASK           0x04U
  #define GPIO_F_DATA_D3_MASK           0x08U
  #define GPIO_F_DATA_D4_MASK           0x10U
  #define GPIO_F_DATA_D5_MASK           0x20U
  #define GPIO_F_DATA_D6_MASK           0x40U
  #define GPIO_F_DATA_D7_MASK           0x80U
  #define GPIO_F_DATA_D8_MASK           0x0100U
  #define GPIO_F_DATA_D_MASK            0x01FFU
  #define GPIO_F_DATA_D_BITNUM          0x00U
  #define GPIO_F_DATA                   (*((volatile word *)0x0000F191))


  /*** GPIO_F_DDIR - GPIO F Data Direction Register; 0x0000F192 ***/
  union {
    word Word;
  } GPIO_F_DDIR_STR;
  
  #define GPIO_F_DDIR_DD0_MASK          0x01U
  #define GPIO_F_DDIR_DD1_MASK          0x02U
  #define GPIO_F_DDIR_DD2_MASK          0x04U
  #define GPIO_F_DDIR_DD3_MASK          0x08U
  #define GPIO_F_DDIR_DD4_MASK          0x10U
  #define GPIO_F_DDIR_DD5_MASK          0x20U
  #define GPIO_F_DDIR_DD6_MASK          0x40U
  #define GPIO_F_DDIR_DD7_MASK          0x80U
  #define GPIO_F_DDIR_DD8_MASK          0x0100U
  #define GPIO_F_DDIR_DD_MASK           0x01FFU
  #define GPIO_F_DDIR_DD_BITNUM         0x00U
  #define GPIO_F_DDIR                   (*((volatile word *)0x0000F192))


  /*** GPIO_F_PEREN - GPIO F Peripheral Enable Registers; 0x0000F193 ***/
  union {
    word Word;
  } GPIO_F_PEREN_STR;
  
  #define GPIO_F_PEREN_PE0_MASK         0x01U
  #define GPIO_F_PEREN_PE1_MASK         0x02U
  #define GPIO_F_PEREN_PE2_MASK         0x04U
  #define GPIO_F_PEREN_PE3_MASK         0x08U
  #define GPIO_F_PEREN_PE4_MASK         0x10U
  #define GPIO_F_PEREN_PE5_MASK         0x20U
  #define GPIO_F_PEREN_PE6_MASK         0x40U
  #define GPIO_F_PEREN_PE7_MASK         0x80U
  #define GPIO_F_PEREN_PE8_MASK         0x0100U
  #define GPIO_F_PEREN_PE_MASK          0x01FFU
  #define GPIO_F_PEREN_PE_BITNUM        0x00U
  #define GPIO_F_PEREN                  (*((volatile word *)0x0000F193))


  /*** GPIO_F_IASSRT - GPIO F Interrupt Assert Register; 0x0000F194 ***/
  union {
    word Word;
  } GPIO_F_IASSRT_STR;
  
  #define GPIO_F_IASSRT_IA0_MASK        0x01U
  #define GPIO_F_IASSRT_IA1_MASK        0x02U
  #define GPIO_F_IASSRT_IA2_MASK        0x04U
  #define GPIO_F_IASSRT_IA3_MASK        0x08U
  #define GPIO_F_IASSRT_IA4_MASK        0x10U
  #define GPIO_F_IASSRT_IA5_MASK        0x20U
  #define GPIO_F_IASSRT_IA6_MASK        0x40U
  #define GPIO_F_IASSRT_IA7_MASK        0x80U
  #define GPIO_F_IASSRT_IA8_MASK        0x0100U
  #define GPIO_F_IASSRT_IA_MASK         0x01FFU
  #define GPIO_F_IASSRT_IA_BITNUM       0x00U
  #define GPIO_F_IASSRT                 (*((volatile word *)0x0000F194))


  /*** GPIO_F_IEN - GPIO F Interrupt Enable Register; 0x0000F195 ***/
  union {
    word Word;
  } GPIO_F_IEN_STR;
  
  #define GPIO_F_IEN_IEN0_MASK          0x01U
  #define GPIO_F_IEN_IEN1_MASK          0x02U
  #define GPIO_F_IEN_IEN2_MASK          0x04U
  #define GPIO_F_IEN_IEN3_MASK          0x08U
  #define GPIO_F_IEN_IEN4_MASK          0x10U
  #define GPIO_F_IEN_IEN5_MASK          0x20U
  #define GPIO_F_IEN_IEN6_MASK          0x40U
  #define GPIO_F_IEN_IEN7_MASK          0x80U
  #define GPIO_F_IEN_IEN8_MASK          0x0100U
  #define GPIO_F_IEN_IEN_MASK           0x01FFU
  #define GPIO_F_IEN_IEN_BITNUM         0x00U
  #define GPIO_F_IEN                    (*((volatile word *)0x0000F195))


  /*** GPIO_F_IPOL - GPIO F Interrupt Polarity Register; 0x0000F196 ***/
  union {
    word Word;
  } GPIO_F_IPOL_STR;
  
  #define GPIO_F_IPOL_IPOL0_MASK        0x01U
  #define GPIO_F_IPOL_IPOL1_MASK        0x02U
  #define GPIO_F_IPOL_IPOL2_MASK        0x04U
  #define GPIO_F_IPOL_IPOL3_MASK        0x08U
  #define GPIO_F_IPOL_IPOL4_MASK        0x10U
  #define GPIO_F_IPOL_IPOL5_MASK        0x20U
  #define GPIO_F_IPOL_IPOL6_MASK        0x40U
  #define GPIO_F_IPOL_IPOL7_MASK        0x80U
  #define GPIO_F_IPOL_IPOL8_MASK        0x0100U
  #define GPIO_F_IPOL_IPOL_MASK         0x01FFU
  #define GPIO_F_IPOL_IPOL_BITNUM       0x00U
  #define GPIO_F_IPOL                   (*((volatile word *)0x0000F196))


  /*** GPIO_F_IPEND - GPIO F Interrupt Pending Register; 0x0000F197 ***/
  union {
    word Word;
  } GPIO_F_IPEND_STR;
  
  #define GPIO_F_IPEND_IP0_MASK         0x01U
  #define GPIO_F_IPEND_IP1_MASK         0x02U
  #define GPIO_F_IPEND_IP2_MASK         0x04U
  #define GPIO_F_IPEND_IP3_MASK         0x08U
  #define GPIO_F_IPEND_IP4_MASK         0x10U
  #define GPIO_F_IPEND_IP5_MASK         0x20U
  #define GPIO_F_IPEND_IP6_MASK         0x40U
  #define GPIO_F_IPEND_IP7_MASK         0x80U
  #define GPIO_F_IPEND_IP8_MASK         0x0100U
  #define GPIO_F_IPEND_IP_MASK          0x01FFU
  #define GPIO_F_IPEND_IP_BITNUM        0x00U
  #define GPIO_F_IPEND                  (*((volatile word *)0x0000F197))


  /*** GPIO_F_IEDGE - GPIO F Interrupt Edge Sensitive Register; 0x0000F198 ***/
  union {
    word Word;
  } GPIO_F_IEDGE_STR;
  
  #define GPIO_F_IEDGE_IES0_MASK        0x01U
  #define GPIO_F_IEDGE_IES1_MASK        0x02U
  #define GPIO_F_IEDGE_IES2_MASK        0x04U
  #define GPIO_F_IEDGE_IES3_MASK        0x08U
  #define GPIO_F_IEDGE_IES4_MASK        0x10U
  #define GPIO_F_IEDGE_IES5_MASK        0x20U
  #define GPIO_F_IEDGE_IES6_MASK        0x40U
  #define GPIO_F_IEDGE_IES7_MASK        0x80U
  #define GPIO_F_IEDGE_IES8_MASK        0x0100U
  #define GPIO_F_IEDGE_IES_MASK         0x01FFU
  #define GPIO_F_IEDGE_IES_BITNUM       0x00U
  #define GPIO_F_IEDGE                  (*((volatile word *)0x0000F198))


  /*** GPIO_F_PPOUTM - GPIO F Push-Pull Mode Register; 0x0000F199 ***/
  union {
    word Word;
  } GPIO_F_PPOUTM_STR;
  
  #define GPIO_F_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_F_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_F_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_F_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_F_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_F_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_F_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_F_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_F_PPOUTM_PPMODE8_MASK    0x0100U
  #define GPIO_F_PPOUTM_PPMODE_MASK     0x01FFU
  #define GPIO_F_PPOUTM_PPMODE_BITNUM   0x00U
  #define GPIO_F_PPOUTM                 (*((volatile word *)0x0000F199))


  /*** GPIO_F_RDATA - GPIO F Raw Data Register; 0x0000F19A ***/
  union {
    word Word;
  } GPIO_F_RDATA_STR;
  
  #define GPIO_F_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_F_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_F_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_F_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_F_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_F_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_F_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_F_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_F_RDATA_RAW_DATA8_MASK   0x0100U
  #define GPIO_F_RDATA_RAW_DATA_MASK    0x01FFU
  #define GPIO_F_RDATA_RAW_DATA_BITNUM  0x00U
  #define GPIO_F_RDATA                  (*((volatile word *)0x0000F19A))


  /*** GPIO_F_DRIVE - GPIO F Drive Strength Control Register; 0x0000F19B ***/
  union {
    word Word;
  } GPIO_F_DRIVE_STR;
  
  #define GPIO_F_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_F_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_F_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_F_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_F_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_F_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_F_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_F_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_F_DRIVE_DRIVE8_MASK      0x0100U
  #define GPIO_F_DRIVE_DRIVE_MASK       0x01FFU
  #define GPIO_F_DRIVE_DRIVE_BITNUM     0x00U
  #define GPIO_F_DRIVE                  (*((volatile word *)0x0000F19B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOF_PRPH;

/******************************************
*** Peripheral DAC
*******************************************/
typedef volatile struct {
  /*** DAC_CTRL - DAC 0 Control Register; 0x0000F1A0 ***/
  union {
    word Word;
  } DAC_CTRL_STR;
  
  #define DAC_CTRL_PDN_MASK             0x01U
  #define DAC_CTRL_FORMAT_MASK          0x02U
  #define DAC_CTRL_SYNC_EN_MASK         0x04U
  #define DAC_CTRL_AUTO_MASK            0x08U
  #define DAC_CTRL_DOWN_MASK            0x10U
  #define DAC_CTRL_UP_MASK              0x20U
  #define DAC_CTRL_FILT_EN_MASK         0x1000U
  #define DAC_CTRL_FILT_CNT0_MASK       0x2000U
  #define DAC_CTRL_FILT_CNT1_MASK       0x4000U
  #define DAC_CTRL_FILT_CNT2_MASK       0x8000U
  #define DAC_CTRL_FILT_CNT_MASK        0xE000U
  #define DAC_CTRL_FILT_CNT_BITNUM      0x0DU
  #define DAC_CTRL                      (*((volatile word *)0x0000F1A0))


  /*** DAC_DATA - DAC 0 Buffered Data Register; 0x0000F1A1 ***/
  union {
    word Word;
  } DAC_DATA_STR;
  
  #define DAC_DATA_DATA0_MASK           0x01U
  #define DAC_DATA_DATA1_MASK           0x02U
  #define DAC_DATA_DATA2_MASK           0x04U
  #define DAC_DATA_DATA3_MASK           0x08U
  #define DAC_DATA_DATA4_MASK           0x10U
  #define DAC_DATA_DATA5_MASK           0x20U
  #define DAC_DATA_DATA6_MASK           0x40U
  #define DAC_DATA_DATA7_MASK           0x80U
  #define DAC_DATA_DATA8_MASK           0x0100U
  #define DAC_DATA_DATA9_MASK           0x0200U
  #define DAC_DATA_DATA10_MASK          0x0400U
  #define DAC_DATA_DATA11_MASK          0x0800U
  #define DAC_DATA_DATA12_MASK          0x1000U
  #define DAC_DATA_DATA13_MASK          0x2000U
  #define DAC_DATA_DATA14_MASK          0x4000U
  #define DAC_DATA_DATA15_MASK          0x8000U
  #define DAC_DATA                      (*((volatile word *)0x0000F1A1))


  /*** DAC_STEP - DAC 0 Step Size Register; 0x0000F1A2 ***/
  union {
    word Word;
  } DAC_STEP_STR;
  
  #define DAC_STEP_STEP0_MASK           0x01U
  #define DAC_STEP_STEP1_MASK           0x02U
  #define DAC_STEP_STEP2_MASK           0x04U
  #define DAC_STEP_STEP3_MASK           0x08U
  #define DAC_STEP_STEP4_MASK           0x10U
  #define DAC_STEP_STEP5_MASK           0x20U
  #define DAC_STEP_STEP6_MASK           0x40U
  #define DAC_STEP_STEP7_MASK           0x80U
  #define DAC_STEP_STEP8_MASK           0x0100U
  #define DAC_STEP_STEP9_MASK           0x0200U
  #define DAC_STEP_STEP10_MASK          0x0400U
  #define DAC_STEP_STEP11_MASK          0x0800U
  #define DAC_STEP_STEP12_MASK          0x1000U
  #define DAC_STEP_STEP13_MASK          0x2000U
  #define DAC_STEP_STEP14_MASK          0x4000U
  #define DAC_STEP_STEP15_MASK          0x8000U
  #define DAC_STEP                      (*((volatile word *)0x0000F1A2))


  /*** DAC_MINVAL - DAC 0 Minimum Value Register; 0x0000F1A3 ***/
  union {
    word Word;
  } DAC_MINVAL_STR;
  
  #define DAC_MINVAL_MINVAL0_MASK       0x01U
  #define DAC_MINVAL_MINVAL1_MASK       0x02U
  #define DAC_MINVAL_MINVAL2_MASK       0x04U
  #define DAC_MINVAL_MINVAL3_MASK       0x08U
  #define DAC_MINVAL_MINVAL4_MASK       0x10U
  #define DAC_MINVAL_MINVAL5_MASK       0x20U
  #define DAC_MINVAL_MINVAL6_MASK       0x40U
  #define DAC_MINVAL_MINVAL7_MASK       0x80U
  #define DAC_MINVAL_MINVAL8_MASK       0x0100U
  #define DAC_MINVAL_MINVAL9_MASK       0x0200U
  #define DAC_MINVAL_MINVAL10_MASK      0x0400U
  #define DAC_MINVAL_MINVAL11_MASK      0x0800U
  #define DAC_MINVAL_MINVAL12_MASK      0x1000U
  #define DAC_MINVAL_MINVAL13_MASK      0x2000U
  #define DAC_MINVAL_MINVAL14_MASK      0x4000U
  #define DAC_MINVAL_MINVAL15_MASK      0x8000U
  #define DAC_MINVAL                    (*((volatile word *)0x0000F1A3))


  /*** DAC_MAXVAL - DAC 0 Maximum Value Register; 0x0000F1A4 ***/
  union {
    word Word;
  } DAC_MAXVAL_STR;
  
  #define DAC_MAXVAL_MAXVAL0_MASK       0x01U
  #define DAC_MAXVAL_MAXVAL1_MASK       0x02U
  #define DAC_MAXVAL_MAXVAL2_MASK       0x04U
  #define DAC_MAXVAL_MAXVAL3_MASK       0x08U
  #define DAC_MAXVAL_MAXVAL4_MASK       0x10U
  #define DAC_MAXVAL_MAXVAL5_MASK       0x20U
  #define DAC_MAXVAL_MAXVAL6_MASK       0x40U
  #define DAC_MAXVAL_MAXVAL7_MASK       0x80U
  #define DAC_MAXVAL_MAXVAL8_MASK       0x0100U
  #define DAC_MAXVAL_MAXVAL9_MASK       0x0200U
  #define DAC_MAXVAL_MAXVAL10_MASK      0x0400U
  #define DAC_MAXVAL_MAXVAL11_MASK      0x0800U
  #define DAC_MAXVAL_MAXVAL12_MASK      0x1000U
  #define DAC_MAXVAL_MAXVAL13_MASK      0x2000U
  #define DAC_MAXVAL_MAXVAL14_MASK      0x4000U
  #define DAC_MAXVAL_MAXVAL15_MASK      0x8000U
  #define DAC_MAXVAL                    (*((volatile word *)0x0000F1A4))


  word Reserved0[11];                  /* Reserved (unused) registers */

} DAC_PRPH;

/******************************************
*** Peripheral HSCMPA
*******************************************/
typedef volatile struct {
  /*** CMPA_CR0 - CMPA Control Register 0; 0x0000F1B0 ***/
  union {
    word Word;
  } CMPA_CR0_STR;
  
  #define CMPA_CR0_MMC0_MASK            0x01U
  #define CMPA_CR0_MMC1_MASK            0x02U
  #define CMPA_CR0_PMC0_MASK            0x04U
  #define CMPA_CR0_PMC1_MASK            0x08U
  #define CMPA_CR0_FILTER_CNT0_MASK     0x10U
  #define CMPA_CR0_FILTER_CNT1_MASK     0x20U
  #define CMPA_CR0_FILTER_CNT2_MASK     0x40U
  #define CMPA_CR0_MMC_MASK             0x03U
  #define CMPA_CR0_MMC_BITNUM           0x00U
  #define CMPA_CR0_PMC_MASK             0x0CU
  #define CMPA_CR0_PMC_BITNUM           0x02U
  #define CMPA_CR0_FILTER_CNT_MASK      0x70U
  #define CMPA_CR0_FILTER_CNT_BITNUM    0x04U
  #define CMPA_CR0                      (*((volatile word *)0x0000F1B0))


  /*** CMPA_CR1 - CMPA Control Register 1; 0x0000F1B1 ***/
  union {
    word Word;
  } CMPA_CR1_STR;
  
  #define CMPA_CR1_EN_MASK              0x01U
  #define CMPA_CR1_OPE_MASK             0x02U
  #define CMPA_CR1_COS_MASK             0x04U
  #define CMPA_CR1_INV_MASK             0x08U
  #define CMPA_CR1_PMODE_MASK           0x10U
  #define CMPA_CR1_WE_MASK              0x40U
  #define CMPA_CR1_SE_MASK              0x80U
  #define CMPA_CR1                      (*((volatile word *)0x0000F1B1))


  /*** CMPA_FPR - CMPA Filter Period Register; 0x0000F1B2 ***/
  union {
    word Word;
  } CMPA_FPR_STR;
  
  #define CMPA_FPR_FILT_PER0_MASK       0x01U
  #define CMPA_FPR_FILT_PER1_MASK       0x02U
  #define CMPA_FPR_FILT_PER2_MASK       0x04U
  #define CMPA_FPR_FILT_PER3_MASK       0x08U
  #define CMPA_FPR_FILT_PER4_MASK       0x10U
  #define CMPA_FPR_FILT_PER5_MASK       0x20U
  #define CMPA_FPR_FILT_PER6_MASK       0x40U
  #define CMPA_FPR_FILT_PER7_MASK       0x80U
  #define CMPA_FPR_FILT_PER_MASK        0xFFU
  #define CMPA_FPR_FILT_PER_BITNUM      0x00U
  #define CMPA_FPR                      (*((volatile word *)0x0000F1B2))


  /*** CMPA_SCR - CMPA Status & Control Register; 0x0000F1B3 ***/
  union {
    word Word;
  } CMPA_SCR_STR;
  
  #define CMPA_SCR_COUT_MASK            0x01U
  #define CMPA_SCR_CFF_MASK             0x02U
  #define CMPA_SCR_CFR_MASK             0x04U
  #define CMPA_SCR_IEF_MASK             0x08U
  #define CMPA_SCR_IER_MASK             0x10U
  #define CMPA_SCR_SMELB_MASK           0x20U
  #define CMPA_SCR_HYST_SEL0_MASK       0x40U
  #define CMPA_SCR_HYST_SEL1_MASK       0x80U
  #define CMPA_SCR_HYST_SEL_MASK        0xC0U
  #define CMPA_SCR_HYST_SEL_BITNUM      0x06U
  #define CMPA_SCR                      (*((volatile word *)0x0000F1B3))


  word Reserved0[12];                  /* Reserved (unused) registers */

} HSCMPA_PRPH;

/******************************************
*** Peripheral HSCMPB
*******************************************/
typedef volatile struct {
  /*** CMPB_CR0 - CMPB Control Register 0; 0x0000F1C0 ***/
  union {
    word Word;
  } CMPB_CR0_STR;
  
  #define CMPB_CR0_MMC0_MASK            0x01U
  #define CMPB_CR0_MMC1_MASK            0x02U
  #define CMPB_CR0_PMC0_MASK            0x04U
  #define CMPB_CR0_PMC1_MASK            0x08U
  #define CMPB_CR0_FILTER_CNT0_MASK     0x10U
  #define CMPB_CR0_FILTER_CNT1_MASK     0x20U
  #define CMPB_CR0_FILTER_CNT2_MASK     0x40U
  #define CMPB_CR0_MMC_MASK             0x03U
  #define CMPB_CR0_MMC_BITNUM           0x00U
  #define CMPB_CR0_PMC_MASK             0x0CU
  #define CMPB_CR0_PMC_BITNUM           0x02U
  #define CMPB_CR0_FILTER_CNT_MASK      0x70U
  #define CMPB_CR0_FILTER_CNT_BITNUM    0x04U
  #define CMPB_CR0                      (*((volatile word *)0x0000F1C0))


  /*** CMPB_CR1 - CMPB Control Register 1; 0x0000F1C1 ***/
  union {
    word Word;
  } CMPB_CR1_STR;
  
  #define CMPB_CR1_EN_MASK              0x01U
  #define CMPB_CR1_OPE_MASK             0x02U
  #define CMPB_CR1_COS_MASK             0x04U
  #define CMPB_CR1_INV_MASK             0x08U
  #define CMPB_CR1_PMODE_MASK           0x10U
  #define CMPB_CR1_WE_MASK              0x40U
  #define CMPB_CR1_SE_MASK              0x80U
  #define CMPB_CR1                      (*((volatile word *)0x0000F1C1))


  /*** CMPB_FPR - CMPB Filter Period Register; 0x0000F1C2 ***/
  union {
    word Word;
  } CMPB_FPR_STR;
  
  #define CMPB_FPR_FILT_PER0_MASK       0x01U
  #define CMPB_FPR_FILT_PER1_MASK       0x02U
  #define CMPB_FPR_FILT_PER2_MASK       0x04U
  #define CMPB_FPR_FILT_PER3_MASK       0x08U
  #define CMPB_FPR_FILT_PER4_MASK       0x10U
  #define CMPB_FPR_FILT_PER5_MASK       0x20U
  #define CMPB_FPR_FILT_PER6_MASK       0x40U
  #define CMPB_FPR_FILT_PER7_MASK       0x80U
  #define CMPB_FPR_FILT_PER_MASK        0xFFU
  #define CMPB_FPR_FILT_PER_BITNUM      0x00U
  #define CMPB_FPR                      (*((volatile word *)0x0000F1C2))


  /*** CMPB_SCR - CMPB Status & Control Register; 0x0000F1C3 ***/
  union {
    word Word;
  } CMPB_SCR_STR;
  
  #define CMPB_SCR_COUT_MASK            0x01U
  #define CMPB_SCR_CFF_MASK             0x02U
  #define CMPB_SCR_CFR_MASK             0x04U
  #define CMPB_SCR_IEF_MASK             0x08U
  #define CMPB_SCR_IER_MASK             0x10U
  #define CMPB_SCR_SMELB_MASK           0x20U
  #define CMPB_SCR_HYST_SEL0_MASK       0x40U
  #define CMPB_SCR_HYST_SEL1_MASK       0x80U
  #define CMPB_SCR_HYST_SEL_MASK        0xC0U
  #define CMPB_SCR_HYST_SEL_BITNUM      0x06U
  #define CMPB_SCR                      (*((volatile word *)0x0000F1C3))


  word Reserved0[12];                  /* Reserved (unused) registers */

} HSCMPB_PRPH;

/******************************************
*** Peripheral HSCMPC
*******************************************/
typedef volatile struct {
  /*** CMPC_CR0 - CMPC Control Register 0; 0x0000F1D0 ***/
  union {
    word Word;
  } CMPC_CR0_STR;
  
  #define CMPC_CR0_MMC0_MASK            0x01U
  #define CMPC_CR0_MMC1_MASK            0x02U
  #define CMPC_CR0_PMC0_MASK            0x04U
  #define CMPC_CR0_PMC1_MASK            0x08U
  #define CMPC_CR0_FILTER_CNT0_MASK     0x10U
  #define CMPC_CR0_FILTER_CNT1_MASK     0x20U
  #define CMPC_CR0_FILTER_CNT2_MASK     0x40U
  #define CMPC_CR0_MMC_MASK             0x03U
  #define CMPC_CR0_MMC_BITNUM           0x00U
  #define CMPC_CR0_PMC_MASK             0x0CU
  #define CMPC_CR0_PMC_BITNUM           0x02U
  #define CMPC_CR0_FILTER_CNT_MASK      0x70U
  #define CMPC_CR0_FILTER_CNT_BITNUM    0x04U
  #define CMPC_CR0                      (*((volatile word *)0x0000F1D0))


  /*** CMPC_CR1 - CMPC Control Register 1; 0x0000F1D1 ***/
  union {
    word Word;
  } CMPC_CR1_STR;
  
  #define CMPC_CR1_EN_MASK              0x01U
  #define CMPC_CR1_OPE_MASK             0x02U
  #define CMPC_CR1_COS_MASK             0x04U
  #define CMPC_CR1_INV_MASK             0x08U
  #define CMPC_CR1_PMODE_MASK           0x10U
  #define CMPC_CR1_WE_MASK              0x40U
  #define CMPC_CR1_SE_MASK              0x80U
  #define CMPC_CR1                      (*((volatile word *)0x0000F1D1))


  /*** CMPC_FPR - CMPC Filter Period Register; 0x0000F1D2 ***/
  union {
    word Word;
  } CMPC_FPR_STR;
  
  #define CMPC_FPR_FILT_PER0_MASK       0x01U
  #define CMPC_FPR_FILT_PER1_MASK       0x02U
  #define CMPC_FPR_FILT_PER2_MASK       0x04U
  #define CMPC_FPR_FILT_PER3_MASK       0x08U
  #define CMPC_FPR_FILT_PER4_MASK       0x10U
  #define CMPC_FPR_FILT_PER5_MASK       0x20U
  #define CMPC_FPR_FILT_PER6_MASK       0x40U
  #define CMPC_FPR_FILT_PER7_MASK       0x80U
  #define CMPC_FPR_FILT_PER_MASK        0xFFU
  #define CMPC_FPR_FILT_PER_BITNUM      0x00U
  #define CMPC_FPR                      (*((volatile word *)0x0000F1D2))


  /*** CMPC_SCR - CMPC Status & Control Register; 0x0000F1D3 ***/
  union {
    word Word;
  } CMPC_SCR_STR;
  
  #define CMPC_SCR_COUT_MASK            0x01U
  #define CMPC_SCR_CFF_MASK             0x02U
  #define CMPC_SCR_CFR_MASK             0x04U
  #define CMPC_SCR_IEF_MASK             0x08U
  #define CMPC_SCR_IER_MASK             0x10U
  #define CMPC_SCR_SMELB_MASK           0x20U
  #define CMPC_SCR_HYST_SEL0_MASK       0x40U
  #define CMPC_SCR_HYST_SEL1_MASK       0x80U
  #define CMPC_SCR_HYST_SEL_MASK        0xC0U
  #define CMPC_SCR_HYST_SEL_BITNUM      0x06U
  #define CMPC_SCR                      (*((volatile word *)0x0000F1D3))


  word Reserved0[12];                  /* Reserved (unused) registers */

} HSCMPC_PRPH;

/******************************************
*** Peripheral QSCI0
*******************************************/
typedef volatile struct {
  /*** QSCI0_RATE - QSCI0 Baud Rate Register; 0x0000F1E0 ***/
  union {
    word Word;
  } QSCI0_RATE_STR;
  
  #define QSCI0_RATE_FRAC_SBR0_MASK     0x01U
  #define QSCI0_RATE_FRAC_SBR1_MASK     0x02U
  #define QSCI0_RATE_FRAC_SBR2_MASK     0x04U
  #define QSCI0_RATE_SBR0_MASK          0x08U
  #define QSCI0_RATE_SBR1_MASK          0x10U
  #define QSCI0_RATE_SBR2_MASK          0x20U
  #define QSCI0_RATE_SBR3_MASK          0x40U
  #define QSCI0_RATE_SBR4_MASK          0x80U
  #define QSCI0_RATE_SBR5_MASK          0x0100U
  #define QSCI0_RATE_SBR6_MASK          0x0200U
  #define QSCI0_RATE_SBR7_MASK          0x0400U
  #define QSCI0_RATE_SBR8_MASK          0x0800U
  #define QSCI0_RATE_SBR9_MASK          0x1000U
  #define QSCI0_RATE_SBR10_MASK         0x2000U
  #define QSCI0_RATE_SBR11_MASK         0x4000U
  #define QSCI0_RATE_SBR12_MASK         0x8000U
  #define QSCI0_RATE_FRAC_SBR_MASK      0x07U
  #define QSCI0_RATE_FRAC_SBR_BITNUM    0x00U
  #define QSCI0_RATE_SBR_MASK           0xFFF8U
  #define QSCI0_RATE_SBR_BITNUM         0x03U
  #define QSCI0_RATE                    (*((volatile word *)0x0000F1E0))


  /*** QSCI0_CTRL1 - QSCI0 Control Register; 0x0000F1E1 ***/
  union {
    word Word;
  } QSCI0_CTRL1_STR;
  
  #define QSCI0_CTRL1_SBK_MASK          0x01U
  #define QSCI0_CTRL1_RWU_MASK          0x02U
  #define QSCI0_CTRL1_RE_MASK           0x04U
  #define QSCI0_CTRL1_TE_MASK           0x08U
  #define QSCI0_CTRL1_REIE_MASK         0x10U
  #define QSCI0_CTRL1_RFIE_MASK         0x20U
  #define QSCI0_CTRL1_TIIE_MASK         0x40U
  #define QSCI0_CTRL1_TEIE_MASK         0x80U
  #define QSCI0_CTRL1_PT_MASK           0x0100U
  #define QSCI0_CTRL1_PE_MASK           0x0200U
  #define QSCI0_CTRL1_POL_MASK          0x0400U
  #define QSCI0_CTRL1_WAKE_MASK         0x0800U
  #define QSCI0_CTRL1_M_MASK            0x1000U
  #define QSCI0_CTRL1_RSRC_MASK         0x2000U
  #define QSCI0_CTRL1_SWAI_MASK         0x4000U
  #define QSCI0_CTRL1_LOOP_MASK         0x8000U
  #define QSCI0_CTRL1                   (*((volatile word *)0x0000F1E1))


  /*** QSCI0_CTRL2 - QSCI0 Control Register 2; 0x0000F1E2 ***/
  union {
    word Word;
  } QSCI0_CTRL2_STR;
  
  #define QSCI0_CTRL2_LIN_MODE_MASK     0x08U
  #define QSCI0_CTRL2_FIFO_EN_MASK      0x20U
  #define QSCI0_CTRL2_RFWM0_MASK        0x40U
  #define QSCI0_CTRL2_RFWM1_MASK        0x80U
  #define QSCI0_CTRL2_RFCNT0_MASK       0x0100U
  #define QSCI0_CTRL2_RFCNT1_MASK       0x0200U
  #define QSCI0_CTRL2_RFCNT2_MASK       0x0400U
  #define QSCI0_CTRL2_TFWM0_MASK        0x0800U
  #define QSCI0_CTRL2_TFWM1_MASK        0x1000U
  #define QSCI0_CTRL2_TFCNT0_MASK       0x2000U
  #define QSCI0_CTRL2_TFCNT1_MASK       0x4000U
  #define QSCI0_CTRL2_TFCNT2_MASK       0x8000U
  #define QSCI0_CTRL2_RFWM_MASK         0xC0U
  #define QSCI0_CTRL2_RFWM_BITNUM       0x06U
  #define QSCI0_CTRL2_RFCNT_MASK        0x0700U
  #define QSCI0_CTRL2_RFCNT_BITNUM      0x08U
  #define QSCI0_CTRL2_TFWM_MASK         0x1800U
  #define QSCI0_CTRL2_TFWM_BITNUM       0x0BU
  #define QSCI0_CTRL2_TFCNT_MASK        0xE000U
  #define QSCI0_CTRL2_TFCNT_BITNUM      0x0DU
  #define QSCI0_CTRL2                   (*((volatile word *)0x0000F1E2))


  /*** QSCI0_STAT - QSCI0 Status Register; 0x0000F1E3 ***/
  union {
    word Word;
  } QSCI0_STAT_STR;
  
  #define QSCI0_STAT_RAF_MASK           0x01U
  #define QSCI0_STAT_LSE_MASK           0x08U
  #define QSCI0_STAT_PF_MASK            0x0100U
  #define QSCI0_STAT_FE_MASK            0x0200U
  #define QSCI0_STAT_NF_MASK            0x0400U
  #define QSCI0_STAT_OR_MASK            0x0800U
  #define QSCI0_STAT_RIDLE_MASK         0x1000U
  #define QSCI0_STAT_RDRF_MASK          0x2000U
  #define QSCI0_STAT_TIDLE_MASK         0x4000U
  #define QSCI0_STAT_TDRE_MASK          0x8000U
  #define QSCI0_STAT                    (*((volatile word *)0x0000F1E3))


  /*** QSCI0_DATA - QSCI0 Data Register; 0x0000F1E4 ***/
  union {
    word Word;
  } QSCI0_DATA_STR;
  
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA0_MASK 0x01U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA1_MASK 0x02U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA2_MASK 0x04U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA3_MASK 0x08U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA4_MASK 0x10U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA5_MASK 0x20U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA6_MASK 0x40U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA7_MASK 0x80U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA8_MASK 0x0100U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA_MASK 0x01FFU
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA_BITNUM 0x00U
  #define QSCI0_DATA                    (*((volatile word *)0x0000F1E4))


  word Reserved0[11];                  /* Reserved (unused) registers */

} QSCI0_PRPH;

/******************************************
*** Peripheral QSCI1
*******************************************/
typedef volatile struct {
  /*** QSCI1_RATE - QSCI1 Baud Rate Register; 0x0000F1F0 ***/
  union {
    word Word;
  } QSCI1_RATE_STR;
  
  #define QSCI1_RATE_FRAC_SBR0_MASK     0x01U
  #define QSCI1_RATE_FRAC_SBR1_MASK     0x02U
  #define QSCI1_RATE_FRAC_SBR2_MASK     0x04U
  #define QSCI1_RATE_SBR0_MASK          0x08U
  #define QSCI1_RATE_SBR1_MASK          0x10U
  #define QSCI1_RATE_SBR2_MASK          0x20U
  #define QSCI1_RATE_SBR3_MASK          0x40U
  #define QSCI1_RATE_SBR4_MASK          0x80U
  #define QSCI1_RATE_SBR5_MASK          0x0100U
  #define QSCI1_RATE_SBR6_MASK          0x0200U
  #define QSCI1_RATE_SBR7_MASK          0x0400U
  #define QSCI1_RATE_SBR8_MASK          0x0800U
  #define QSCI1_RATE_SBR9_MASK          0x1000U
  #define QSCI1_RATE_SBR10_MASK         0x2000U
  #define QSCI1_RATE_SBR11_MASK         0x4000U
  #define QSCI1_RATE_SBR12_MASK         0x8000U
  #define QSCI1_RATE_FRAC_SBR_MASK      0x07U
  #define QSCI1_RATE_FRAC_SBR_BITNUM    0x00U
  #define QSCI1_RATE_SBR_MASK           0xFFF8U
  #define QSCI1_RATE_SBR_BITNUM         0x03U
  #define QSCI1_RATE                    (*((volatile word *)0x0000F1F0))


  /*** QSCI1_CTRL1 - QSCI1 Control Register; 0x0000F1F1 ***/
  union {
    word Word;
  } QSCI1_CTRL1_STR;
  
  #define QSCI1_CTRL1_SBK_MASK          0x01U
  #define QSCI1_CTRL1_RWU_MASK          0x02U
  #define QSCI1_CTRL1_RE_MASK           0x04U
  #define QSCI1_CTRL1_TE_MASK           0x08U
  #define QSCI1_CTRL1_REIE_MASK         0x10U
  #define QSCI1_CTRL1_RFIE_MASK         0x20U
  #define QSCI1_CTRL1_TIIE_MASK         0x40U
  #define QSCI1_CTRL1_TEIE_MASK         0x80U
  #define QSCI1_CTRL1_PT_MASK           0x0100U
  #define QSCI1_CTRL1_PE_MASK           0x0200U
  #define QSCI1_CTRL1_POL_MASK          0x0400U
  #define QSCI1_CTRL1_WAKE_MASK         0x0800U
  #define QSCI1_CTRL1_M_MASK            0x1000U
  #define QSCI1_CTRL1_RSRC_MASK         0x2000U
  #define QSCI1_CTRL1_SWAI_MASK         0x4000U
  #define QSCI1_CTRL1_LOOP_MASK         0x8000U
  #define QSCI1_CTRL1                   (*((volatile word *)0x0000F1F1))


  /*** QSCI1_CTRL2 - QSCI1 Control Register 2; 0x0000F1F2 ***/
  union {
    word Word;
  } QSCI1_CTRL2_STR;
  
  #define QSCI1_CTRL2_LIN_MODE_MASK     0x08U
  #define QSCI1_CTRL2_FIFO_EN_MASK      0x20U
  #define QSCI1_CTRL2_RFWM0_MASK        0x40U
  #define QSCI1_CTRL2_RFWM1_MASK        0x80U
  #define QSCI1_CTRL2_RFCNT0_MASK       0x0100U
  #define QSCI1_CTRL2_RFCNT1_MASK       0x0200U
  #define QSCI1_CTRL2_RFCNT2_MASK       0x0400U
  #define QSCI1_CTRL2_TFWM0_MASK        0x0800U
  #define QSCI1_CTRL2_TFWM1_MASK        0x1000U
  #define QSCI1_CTRL2_TFCNT0_MASK       0x2000U
  #define QSCI1_CTRL2_TFCNT1_MASK       0x4000U
  #define QSCI1_CTRL2_TFCNT2_MASK       0x8000U
  #define QSCI1_CTRL2_RFWM_MASK         0xC0U
  #define QSCI1_CTRL2_RFWM_BITNUM       0x06U
  #define QSCI1_CTRL2_RFCNT_MASK        0x0700U
  #define QSCI1_CTRL2_RFCNT_BITNUM      0x08U
  #define QSCI1_CTRL2_TFWM_MASK         0x1800U
  #define QSCI1_CTRL2_TFWM_BITNUM       0x0BU
  #define QSCI1_CTRL2_TFCNT_MASK        0xE000U
  #define QSCI1_CTRL2_TFCNT_BITNUM      0x0DU
  #define QSCI1_CTRL2                   (*((volatile word *)0x0000F1F2))


  /*** QSCI1_STAT - QSCI1 Status Register; 0x0000F1F3 ***/
  union {
    word Word;
  } QSCI1_STAT_STR;
  
  #define QSCI1_STAT_RAF_MASK           0x01U
  #define QSCI1_STAT_LSE_MASK           0x08U
  #define QSCI1_STAT_PF_MASK            0x0100U
  #define QSCI1_STAT_FE_MASK            0x0200U
  #define QSCI1_STAT_NF_MASK            0x0400U
  #define QSCI1_STAT_OR_MASK            0x0800U
  #define QSCI1_STAT_RIDLE_MASK         0x1000U
  #define QSCI1_STAT_RDRF_MASK          0x2000U
  #define QSCI1_STAT_TIDLE_MASK         0x4000U
  #define QSCI1_STAT_TDRE_MASK          0x8000U
  #define QSCI1_STAT                    (*((volatile word *)0x0000F1F3))


  /*** QSCI1_DATA - QSCI1 Data Register; 0x0000F1F4 ***/
  union {
    word Word;
  } QSCI1_DATA_STR;
  
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA0_MASK 0x01U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA1_MASK 0x02U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA2_MASK 0x04U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA3_MASK 0x08U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA4_MASK 0x10U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA5_MASK 0x20U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA6_MASK 0x40U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA7_MASK 0x80U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA8_MASK 0x0100U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA_MASK 0x01FFU
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA_BITNUM 0x00U
  #define QSCI1_DATA                    (*((volatile word *)0x0000F1F4))


  word Reserved0[11];                  /* Reserved (unused) registers */

} QSCI1_PRPH;

/******************************************
*** Peripheral QSPI0
*******************************************/
typedef volatile struct {
  /*** QSPI0_SCTRL - QSPI0 Status and Control Register; 0x0000F200 ***/
  union {
    word Word;
  } QSPI0_SCTRL_STR;
  
  #define QSPI0_SCTRL_SPTE_MASK         0x01U
  #define QSPI0_SCTRL_MODF_MASK         0x02U
  #define QSPI0_SCTRL_OVRF_MASK         0x04U
  #define QSPI0_SCTRL_SPRF_MASK         0x08U
  #define QSPI0_SCTRL_SPTIE_MASK        0x10U
  #define QSPI0_SCTRL_SPE_MASK          0x20U
  #define QSPI0_SCTRL_CPHA_MASK         0x40U
  #define QSPI0_SCTRL_CPOL_MASK         0x80U
  #define QSPI0_SCTRL_SPMSTR_MASK       0x0100U
  #define QSPI0_SCTRL_SPRIE_MASK        0x0200U
  #define QSPI0_SCTRL_MODFEN_MASK       0x0400U
  #define QSPI0_SCTRL_ERRIE_MASK        0x0800U
  #define QSPI0_SCTRL_DSO_MASK          0x1000U
  #define QSPI0_SCTRL_SPR0_MASK         0x2000U
  #define QSPI0_SCTRL_SPR1_MASK         0x4000U
  #define QSPI0_SCTRL_SPR2_MASK         0x8000U
  #define QSPI0_SCTRL_SPR_MASK          0xE000U
  #define QSPI0_SCTRL_SPR_BITNUM        0x0DU
  #define QSPI0_SCTRL                   (*((volatile word *)0x0000F200))


  /*** QSPI0_DSCTRL - QSPI0 Data Size and Control Register; 0x0000F201 ***/
  union {
    word Word;
  } QSPI0_DSCTRL_STR;
  
  #define QSPI0_DSCTRL_DS0_MASK         0x01U
  #define QSPI0_DSCTRL_DS1_MASK         0x02U
  #define QSPI0_DSCTRL_DS2_MASK         0x04U
  #define QSPI0_DSCTRL_DS3_MASK         0x08U
  #define QSPI0_DSCTRL_SPR3_MASK        0x10U
  #define QSPI0_DSCTRL_SSB_OVER_MASK    0x20U
  #define QSPI0_DSCTRL_SSB_STRB_MASK    0x40U
  #define QSPI0_DSCTRL_SSB_DDR_MASK     0x80U
  #define QSPI0_DSCTRL_SSB_AUTO_MASK    0x0100U
  #define QSPI0_DSCTRL_SSB_ODM_MASK     0x0200U
  #define QSPI0_DSCTRL_SSB_DATA_MASK    0x0400U
  #define QSPI0_DSCTRL_SSB_IN_MASK      0x0800U
  #define QSPI0_DSCTRL_BD2X_MASK        0x1000U
  #define QSPI0_DSCTRL_WOM_MASK         0x8000U
  #define QSPI0_DSCTRL_DS_MASK          0x0FU
  #define QSPI0_DSCTRL_DS_BITNUM        0x00U
  #define QSPI0_DSCTRL                  (*((volatile word *)0x0000F201))


  /*** QSPI0_DRCV - QSPI0 Data Receive Register; 0x0000F202 ***/
  union {
    word Word;
  } QSPI0_DRCV_STR;
  
  #define QSPI0_DRCV                    (*((volatile word *)0x0000F202))


  /*** QSPI0_DXMIT - QSPI0 Data Transmit Register; 0x0000F203 ***/
  union {
    word Word;
  } QSPI0_DXMIT_STR;
  
  #define QSPI0_DXMIT                   (*((volatile word *)0x0000F203))


  /*** QSPI0_FIFO - QSPI0 FIFO Control Register; 0x0000F204 ***/
  union {
    word Word;
  } QSPI0_FIFO_STR;
  
  #define QSPI0_FIFO_FIFO_ENA_MASK      0x01U
  #define QSPI0_FIFO_RFWM0_MASK         0x04U
  #define QSPI0_FIFO_RFWM1_MASK         0x08U
  #define QSPI0_FIFO_TFWM0_MASK         0x20U
  #define QSPI0_FIFO_TFWM1_MASK         0x40U
  #define QSPI0_FIFO_RFCNT0_MASK        0x0100U
  #define QSPI0_FIFO_RFCNT1_MASK        0x0200U
  #define QSPI0_FIFO_RFCNT2_MASK        0x0400U
  #define QSPI0_FIFO_TFCNT0_MASK        0x1000U
  #define QSPI0_FIFO_TFCNT1_MASK        0x2000U
  #define QSPI0_FIFO_TFCNT2_MASK        0x4000U
  #define QSPI0_FIFO_RFWM_MASK          0x0CU
  #define QSPI0_FIFO_RFWM_BITNUM        0x02U
  #define QSPI0_FIFO_TFWM_MASK          0x60U
  #define QSPI0_FIFO_TFWM_BITNUM        0x05U
  #define QSPI0_FIFO_RFCNT_MASK         0x0700U
  #define QSPI0_FIFO_RFCNT_BITNUM       0x08U
  #define QSPI0_FIFO_TFCNT_MASK         0x7000U
  #define QSPI0_FIFO_TFCNT_BITNUM       0x0CU
  #define QSPI0_FIFO                    (*((volatile word *)0x0000F204))


  /*** QSPI0_DELAY - QSPI0 Word Delay Register; 0x0000F205 ***/
  union {
    word Word;
  } QSPI0_DELAY_STR;
  
  #define QSPI0_DELAY_WAIT0_MASK        0x01U
  #define QSPI0_DELAY_WAIT1_MASK        0x02U
  #define QSPI0_DELAY_WAIT2_MASK        0x04U
  #define QSPI0_DELAY_WAIT3_MASK        0x08U
  #define QSPI0_DELAY_WAIT4_MASK        0x10U
  #define QSPI0_DELAY_WAIT5_MASK        0x20U
  #define QSPI0_DELAY_WAIT6_MASK        0x40U
  #define QSPI0_DELAY_WAIT7_MASK        0x80U
  #define QSPI0_DELAY_WAIT8_MASK        0x0100U
  #define QSPI0_DELAY_WAIT9_MASK        0x0200U
  #define QSPI0_DELAY_WAIT10_MASK       0x0400U
  #define QSPI0_DELAY_WAIT11_MASK       0x0800U
  #define QSPI0_DELAY_WAIT12_MASK       0x1000U
  #define QSPI0_DELAY_WAIT_MASK         0x1FFFU
  #define QSPI0_DELAY_WAIT_BITNUM       0x00U
  #define QSPI0_DELAY                   (*((volatile word *)0x0000F205))


  word Reserved0[10];                  /* Reserved (unused) registers */

} QSPI0_PRPH;

/******************************************
*** Peripheral I2C0
*******************************************/
typedef volatile struct {
  /*** I2C0_ADDR - I2C Bus Address Register; 0x0000F210 ***/
  union {
    word Word;
  } I2C0_ADDR_STR;
  
  #define I2C0_ADDR_AD0_MASK            0x02U
  #define I2C0_ADDR_AD1_MASK            0x04U
  #define I2C0_ADDR_AD2_MASK            0x08U
  #define I2C0_ADDR_AD3_MASK            0x10U
  #define I2C0_ADDR_AD4_MASK            0x20U
  #define I2C0_ADDR_AD5_MASK            0x40U
  #define I2C0_ADDR_AD6_MASK            0x80U
  #define I2C0_ADDR_AD_MASK             0xFEU
  #define I2C0_ADDR_AD_BITNUM           0x01U
  #define I2C0_ADDR                     (*((volatile word *)0x0000F210))


  /*** I2C0_FREQDIV - I2C Bus Frequency Divider Register; 0x0000F211 ***/
  union {
    word Word;
  } I2C0_FREQDIV_STR;
  
  #define I2C0_FREQDIV_TAP10_MASK       0x01U
  #define I2C0_FREQDIV_TAP11_MASK       0x02U
  #define I2C0_FREQDIV_TAP12_MASK       0x04U
  #define I2C0_FREQDIV_TAP20_MASK       0x08U
  #define I2C0_FREQDIV_TAP21_MASK       0x10U
  #define I2C0_FREQDIV_TAP22_MASK       0x20U
  #define I2C0_FREQDIV_MULT0_MASK       0x40U
  #define I2C0_FREQDIV_MULT1_MASK       0x80U
  #define I2C0_FREQDIV_TAP1_MASK        0x07U
  #define I2C0_FREQDIV_TAP1_BITNUM      0x00U
  #define I2C0_FREQDIV_TAP2_MASK        0x38U
  #define I2C0_FREQDIV_TAP2_BITNUM      0x03U
  #define I2C0_FREQDIV_MULT_MASK        0xC0U
  #define I2C0_FREQDIV_MULT_BITNUM      0x06U
  #define I2C0_FREQDIV                  (*((volatile word *)0x0000F211))


  /*** I2C0_CR1 - I2C-Bus Control Register; 0x0000F212 ***/
  union {
    word Word;
  } I2C0_CR1_STR;
  
  #define I2C0_CR1_WUEN_MASK            0x02U
  #define I2C0_CR1_RSTA_MASK            0x04U
  #define I2C0_CR1_TXAK_MASK            0x08U
  #define I2C0_CR1_TX_MASK              0x10U
  #define I2C0_CR1_MST_MASK             0x20U
  #define I2C0_CR1_IICIE_MASK           0x40U
  #define I2C0_CR1_IICEN_MASK           0x80U
  #define I2C0_CR1                      (*((volatile word *)0x0000F212))


  /*** I2C0_SR - I2C Bus Status Register; 0x0000F213 ***/
  union {
    word Word;
  } I2C0_SR_STR;
  
  #define I2C0_SR_RXAK_MASK             0x01U
  #define I2C0_SR_IICIF_MASK            0x02U
  #define I2C0_SR_SRW_MASK              0x04U
  #define I2C0_SR_ARBL_MASK             0x10U
  #define I2C0_SR_BUSY_MASK             0x20U
  #define I2C0_SR_IAAS_MASK             0x40U
  #define I2C0_SR_TCF_MASK              0x80U
  #define I2C0_SR                       (*((volatile word *)0x0000F213))


  /*** I2C0_DATA - I2C Bus Data I/O Register; 0x0000F214 ***/
  union {
    word Word;
  } I2C0_DATA_STR;
  
  #define I2C0_DATA_DATA0_MASK          0x01U
  #define I2C0_DATA_DATA1_MASK          0x02U
  #define I2C0_DATA_DATA2_MASK          0x04U
  #define I2C0_DATA_DATA3_MASK          0x08U
  #define I2C0_DATA_DATA4_MASK          0x10U
  #define I2C0_DATA_DATA5_MASK          0x20U
  #define I2C0_DATA_DATA6_MASK          0x40U
  #define I2C0_DATA_DATA7_MASK          0x80U
  #define I2C0_DATA_DATA_MASK           0xFFU
  #define I2C0_DATA_DATA_BITNUM         0x00U
  #define I2C0_DATA                     (*((volatile word *)0x0000F214))


  /*** I2C0_CR2 - I2C Control Register; 0x0000F215 ***/
  union {
    word Word;
  } I2C0_CR2_STR;
  
  #define I2C0_CR2_AD8_MASK             0x01U
  #define I2C0_CR2_AD9_MASK             0x02U
  #define I2C0_CR2_AD10_MASK            0x04U
  #define I2C0_CR2_ADEXT_MASK           0x40U
  #define I2C0_CR2_GCAEN_MASK           0x80U
  #define I2C0_CR2_AD_8_MASK            0x07U
  #define I2C0_CR2_AD_8_BITNUM          0x00U
  #define I2C0_CR2                      (*((volatile word *)0x0000F215))


  /*** I2C0_FILT - I2C Programmable Input Glitch Filter; 0x0000F216 ***/
  union {
    word Word;
  } I2C0_FILT_STR;
  
  #define I2C0_FILT_FLT0_MASK           0x01U
  #define I2C0_FILT_FLT1_MASK           0x02U
  #define I2C0_FILT_FLT2_MASK           0x04U
  #define I2C0_FILT_FLT_MASK            0x07U
  #define I2C0_FILT_FLT_BITNUM          0x00U
  #define I2C0_FILT                     (*((volatile word *)0x0000F216))


  /*** I2C0_SMB_CSR - I2C SMBus Control and Status Register; 0x0000F217 ***/
  union {
    word Word;
  } I2C0_SMB_CSR_STR;
  
  #define I2C0_SMB_CSR_SHTF2IE_MASK     0x01U
  #define I2C0_SMB_CSR_SHTF2_MASK       0x02U
  #define I2C0_SMB_CSR_SHTF_MASK        0x04U
  #define I2C0_SMB_CSR_SLTF_MASK        0x08U
  #define I2C0_SMB_CSR_TCKSEL_MASK      0x10U
  #define I2C0_SMB_CSR_SIICAEN_MASK     0x20U
  #define I2C0_SMB_CSR_ALERTEN_MASK     0x40U
  #define I2C0_SMB_CSR_FACK_MASK        0x80U
  #define I2C0_SMB_CSR                  (*((volatile word *)0x0000F217))


  /*** I2C0_ADDR2 - I2C Bus Address Register 2; 0x0000F218 ***/
  union {
    word Word;
  } I2C0_ADDR2_STR;
  
  #define I2C0_ADDR2_SAD0_MASK          0x02U
  #define I2C0_ADDR2_SAD1_MASK          0x04U
  #define I2C0_ADDR2_SAD2_MASK          0x08U
  #define I2C0_ADDR2_SAD3_MASK          0x10U
  #define I2C0_ADDR2_SAD4_MASK          0x20U
  #define I2C0_ADDR2_SAD5_MASK          0x40U
  #define I2C0_ADDR2_SAD6_MASK          0x80U
  #define I2C0_ADDR2_SAD_MASK           0xFEU
  #define I2C0_ADDR2_SAD_BITNUM         0x01U
  #define I2C0_ADDR2                    (*((volatile word *)0x0000F218))


  /*** I2C0_SLT1 - I2C SCL Low Time Out Register High; 0x0000F219 ***/
  union {
    word Word;
  } I2C0_SLT1_STR;
  
  #define I2C0_SLT1_SSLT8_MASK          0x01U
  #define I2C0_SLT1_SSLT9_MASK          0x02U
  #define I2C0_SLT1_SSLT10_MASK         0x04U
  #define I2C0_SLT1_SSLT11_MASK         0x08U
  #define I2C0_SLT1_SSLT12_MASK         0x10U
  #define I2C0_SLT1_SSLT13_MASK         0x20U
  #define I2C0_SLT1_SSLT14_MASK         0x40U
  #define I2C0_SLT1_SSLT15_MASK         0x80U
  #define I2C0_SLT1_SSLT_8_MASK         0xFFU
  #define I2C0_SLT1_SSLT_8_BITNUM       0x00U
  #define I2C0_SLT1                     (*((volatile word *)0x0000F219))


  /*** I2C0_SLT2 - I2C SCL Low Time Out Register Low; 0x0000F21A ***/
  union {
    word Word;
  } I2C0_SLT2_STR;
  
  #define I2C0_SLT2_SSLT0_MASK          0x01U
  #define I2C0_SLT2_SSLT1_MASK          0x02U
  #define I2C0_SLT2_SSLT2_MASK          0x04U
  #define I2C0_SLT2_SSLT3_MASK          0x08U
  #define I2C0_SLT2_SSLT4_MASK          0x10U
  #define I2C0_SLT2_SSLT5_MASK          0x20U
  #define I2C0_SLT2_SSLT6_MASK          0x40U
  #define I2C0_SLT2_SSLT7_MASK          0x80U
  #define I2C0_SLT2_SSLT_MASK           0xFFU
  #define I2C0_SLT2_SSLT_BITNUM         0x00U
  #define I2C0_SLT2                     (*((volatile word *)0x0000F21A))


  word Reserved0[5];                   /* Reserved (unused) registers */

} I2C0_PRPH;

/******************************************
*** Peripheral I2C1
*******************************************/
typedef volatile struct {
  /*** I2C1_ADDR - I2C Bus Address Register; 0x0000F220 ***/
  union {
    word Word;
  } I2C1_ADDR_STR;
  
  #define I2C1_ADDR_AD0_MASK            0x02U
  #define I2C1_ADDR_AD1_MASK            0x04U
  #define I2C1_ADDR_AD2_MASK            0x08U
  #define I2C1_ADDR_AD3_MASK            0x10U
  #define I2C1_ADDR_AD4_MASK            0x20U
  #define I2C1_ADDR_AD5_MASK            0x40U
  #define I2C1_ADDR_AD6_MASK            0x80U
  #define I2C1_ADDR_AD_MASK             0xFEU
  #define I2C1_ADDR_AD_BITNUM           0x01U
  #define I2C1_ADDR                     (*((volatile word *)0x0000F220))


  /*** I2C1_FREQDIV - I2C Bus Frequency Divider Register; 0x0000F221 ***/
  union {
    word Word;
  } I2C1_FREQDIV_STR;
  
  #define I2C1_FREQDIV_TAP10_MASK       0x01U
  #define I2C1_FREQDIV_TAP11_MASK       0x02U
  #define I2C1_FREQDIV_TAP12_MASK       0x04U
  #define I2C1_FREQDIV_TAP20_MASK       0x08U
  #define I2C1_FREQDIV_TAP21_MASK       0x10U
  #define I2C1_FREQDIV_TAP22_MASK       0x20U
  #define I2C1_FREQDIV_MULT0_MASK       0x40U
  #define I2C1_FREQDIV_MULT1_MASK       0x80U
  #define I2C1_FREQDIV_TAP1_MASK        0x07U
  #define I2C1_FREQDIV_TAP1_BITNUM      0x00U
  #define I2C1_FREQDIV_TAP2_MASK        0x38U
  #define I2C1_FREQDIV_TAP2_BITNUM      0x03U
  #define I2C1_FREQDIV_MULT_MASK        0xC0U
  #define I2C1_FREQDIV_MULT_BITNUM      0x06U
  #define I2C1_FREQDIV                  (*((volatile word *)0x0000F221))


  /*** I2C1_CR1 - I2C-Bus Control Register; 0x0000F222 ***/
  union {
    word Word;
  } I2C1_CR1_STR;
  
  #define I2C1_CR1_WUEN_MASK            0x02U
  #define I2C1_CR1_RSTA_MASK            0x04U
  #define I2C1_CR1_TXAK_MASK            0x08U
  #define I2C1_CR1_TX_MASK              0x10U
  #define I2C1_CR1_MST_MASK             0x20U
  #define I2C1_CR1_IICIE_MASK           0x40U
  #define I2C1_CR1_IICEN_MASK           0x80U
  #define I2C1_CR1                      (*((volatile word *)0x0000F222))


  /*** I2C1_SR - I2C Bus Status Register; 0x0000F223 ***/
  union {
    word Word;
  } I2C1_SR_STR;
  
  #define I2C1_SR_RXAK_MASK             0x01U
  #define I2C1_SR_IICIF_MASK            0x02U
  #define I2C1_SR_SRW_MASK              0x04U
  #define I2C1_SR_ARBL_MASK             0x10U
  #define I2C1_SR_BUSY_MASK             0x20U
  #define I2C1_SR_IAAS_MASK             0x40U
  #define I2C1_SR_TCF_MASK              0x80U
  #define I2C1_SR                       (*((volatile word *)0x0000F223))


  /*** I2C1_DATA - I2C Bus Data I/O Register; 0x0000F224 ***/
  union {
    word Word;
  } I2C1_DATA_STR;
  
  #define I2C1_DATA_DATA0_MASK          0x01U
  #define I2C1_DATA_DATA1_MASK          0x02U
  #define I2C1_DATA_DATA2_MASK          0x04U
  #define I2C1_DATA_DATA3_MASK          0x08U
  #define I2C1_DATA_DATA4_MASK          0x10U
  #define I2C1_DATA_DATA5_MASK          0x20U
  #define I2C1_DATA_DATA6_MASK          0x40U
  #define I2C1_DATA_DATA7_MASK          0x80U
  #define I2C1_DATA_DATA_MASK           0xFFU
  #define I2C1_DATA_DATA_BITNUM         0x00U
  #define I2C1_DATA                     (*((volatile word *)0x0000F224))


  /*** I2C1_CR2 - I2C Control Register; 0x0000F225 ***/
  union {
    word Word;
  } I2C1_CR2_STR;
  
  #define I2C1_CR2_AD8_MASK             0x01U
  #define I2C1_CR2_AD9_MASK             0x02U
  #define I2C1_CR2_AD10_MASK            0x04U
  #define I2C1_CR2_ADEXT_MASK           0x40U
  #define I2C1_CR2_GCAEN_MASK           0x80U
  #define I2C1_CR2_AD_8_MASK            0x07U
  #define I2C1_CR2_AD_8_BITNUM          0x00U
  #define I2C1_CR2                      (*((volatile word *)0x0000F225))


  /*** I2C1_FILT - I2C Programmable Input Glitch Filter; 0x0000F226 ***/
  union {
    word Word;
  } I2C1_FILT_STR;
  
  #define I2C1_FILT_FLT0_MASK           0x01U
  #define I2C1_FILT_FLT1_MASK           0x02U
  #define I2C1_FILT_FLT2_MASK           0x04U
  #define I2C1_FILT_FLT_MASK            0x07U
  #define I2C1_FILT_FLT_BITNUM          0x00U
  #define I2C1_FILT                     (*((volatile word *)0x0000F226))


  /*** I2C1_SMB_CSR - I2C SMBus Control and Status Register; 0x0000F227 ***/
  union {
    word Word;
  } I2C1_SMB_CSR_STR;
  
  #define I2C1_SMB_CSR_SHTF2IE_MASK     0x01U
  #define I2C1_SMB_CSR_SHTF2_MASK       0x02U
  #define I2C1_SMB_CSR_SHTF_MASK        0x04U
  #define I2C1_SMB_CSR_SLTF_MASK        0x08U
  #define I2C1_SMB_CSR_TCKSEL_MASK      0x10U
  #define I2C1_SMB_CSR_SIICAEN_MASK     0x20U
  #define I2C1_SMB_CSR_ALERTEN_MASK     0x40U
  #define I2C1_SMB_CSR_FACK_MASK        0x80U
  #define I2C1_SMB_CSR                  (*((volatile word *)0x0000F227))


  /*** I2C1_ADDR2 - I2C Bus Address Register 2; 0x0000F228 ***/
  union {
    word Word;
  } I2C1_ADDR2_STR;
  
  #define I2C1_ADDR2_SAD0_MASK          0x02U
  #define I2C1_ADDR2_SAD1_MASK          0x04U
  #define I2C1_ADDR2_SAD2_MASK          0x08U
  #define I2C1_ADDR2_SAD3_MASK          0x10U
  #define I2C1_ADDR2_SAD4_MASK          0x20U
  #define I2C1_ADDR2_SAD5_MASK          0x40U
  #define I2C1_ADDR2_SAD6_MASK          0x80U
  #define I2C1_ADDR2_SAD_MASK           0xFEU
  #define I2C1_ADDR2_SAD_BITNUM         0x01U
  #define I2C1_ADDR2                    (*((volatile word *)0x0000F228))


  /*** I2C1_SLT1 - I2C SCL Low Time Out Register High; 0x0000F229 ***/
  union {
    word Word;
  } I2C1_SLT1_STR;
  
  #define I2C1_SLT1_SSLT8_MASK          0x01U
  #define I2C1_SLT1_SSLT9_MASK          0x02U
  #define I2C1_SLT1_SSLT10_MASK         0x04U
  #define I2C1_SLT1_SSLT11_MASK         0x08U
  #define I2C1_SLT1_SSLT12_MASK         0x10U
  #define I2C1_SLT1_SSLT13_MASK         0x20U
  #define I2C1_SLT1_SSLT14_MASK         0x40U
  #define I2C1_SLT1_SSLT15_MASK         0x80U
  #define I2C1_SLT1_SSLT_8_MASK         0xFFU
  #define I2C1_SLT1_SSLT_8_BITNUM       0x00U
  #define I2C1_SLT1                     (*((volatile word *)0x0000F229))


  /*** I2C1_SLT2 - I2C SCL Low Time Out Register Low; 0x0000F22A ***/
  union {
    word Word;
  } I2C1_SLT2_STR;
  
  #define I2C1_SLT2_SSLT0_MASK          0x01U
  #define I2C1_SLT2_SSLT1_MASK          0x02U
  #define I2C1_SLT2_SSLT2_MASK          0x04U
  #define I2C1_SLT2_SSLT3_MASK          0x08U
  #define I2C1_SLT2_SSLT4_MASK          0x10U
  #define I2C1_SLT2_SSLT5_MASK          0x20U
  #define I2C1_SLT2_SSLT6_MASK          0x40U
  #define I2C1_SLT2_SSLT7_MASK          0x80U
  #define I2C1_SLT2_SSLT_MASK           0xFFU
  #define I2C1_SLT2_SSLT_BITNUM         0x00U
  #define I2C1_SLT2                     (*((volatile word *)0x0000F22A))


  word Reserved0[5];                   /* Reserved (unused) registers */

} I2C1_PRPH;

/******************************************
*** Peripheral CRC
*******************************************/
typedef volatile struct {
  /*** CRC_CRCH - CRC High Register; 0x0000F230 ***/
  union {
    word Word;
  } CRC_CRCH_STR;
  
  #define CRC_CRCH_CRCH0_MASK           0x01U
  #define CRC_CRCH_CRCH1_MASK           0x02U
  #define CRC_CRCH_CRCH2_MASK           0x04U
  #define CRC_CRCH_CRCH3_MASK           0x08U
  #define CRC_CRCH_CRCH4_MASK           0x10U
  #define CRC_CRCH_CRCH5_MASK           0x20U
  #define CRC_CRCH_CRCH6_MASK           0x40U
  #define CRC_CRCH_CRCH7_MASK           0x80U
  #define CRC_CRCH_CRCH_MASK            0xFFU
  #define CRC_CRCH_CRCH_BITNUM          0x00U
  #define CRC_CRCH                      (*((volatile word *)0x0000F230))


  /*** CRC_CRCL - CRC Low Register; 0x0000F231 ***/
  union {
    word Word;
  } CRC_CRCL_STR;
  
  #define CRC_CRCL_CRCL0_MASK           0x01U
  #define CRC_CRCL_CRCL1_MASK           0x02U
  #define CRC_CRCL_CRCL2_MASK           0x04U
  #define CRC_CRCL_CRCL3_MASK           0x08U
  #define CRC_CRCL_CRCL4_MASK           0x10U
  #define CRC_CRCL_CRCL5_MASK           0x20U
  #define CRC_CRCL_CRCL6_MASK           0x40U
  #define CRC_CRCL_CRCL7_MASK           0x80U
  #define CRC_CRCL_CRCL_MASK            0xFFU
  #define CRC_CRCL_CRCL_BITNUM          0x00U
  #define CRC_CRCL                      (*((volatile word *)0x0000F231))


  /*** CRC_TRANSPOSE - Transpose Register; 0x0000F232 ***/
  union {
    word Word;
  } CRC_TRANSPOSE_STR;
  
  #define CRC_TRANSPOSE_TRANSPOSE0_MASK 0x01U
  #define CRC_TRANSPOSE_TRANSPOSE1_MASK 0x02U
  #define CRC_TRANSPOSE_TRANSPOSE2_MASK 0x04U
  #define CRC_TRANSPOSE_TRANSPOSE3_MASK 0x08U
  #define CRC_TRANSPOSE_TRANSPOSE4_MASK 0x10U
  #define CRC_TRANSPOSE_TRANSPOSE5_MASK 0x20U
  #define CRC_TRANSPOSE_TRANSPOSE6_MASK 0x40U
  #define CRC_TRANSPOSE_TRANSPOSE7_MASK 0x80U
  #define CRC_TRANSPOSE_TRANSPOSE_MASK  0xFFU
  #define CRC_TRANSPOSE_TRANSPOSE_BITNUM 0x00U
  #define CRC_TRANSPOSE                 (*((volatile word *)0x0000F232))


  word Reserved0[13];                  /* Reserved (unused) registers */

} CRC_PRPH;

/******************************************
*** Peripheral REFA
*******************************************/
typedef volatile struct {
  /*** REFA_DACCTRL - DAC Control Register; 0x0000F240 ***/
  union {
    word Word;
  } REFA_DACCTRL_STR;
  
  #define REFA_DACCTRL_VOSEL0_MASK      0x01U
  #define REFA_DACCTRL_VOSEL1_MASK      0x02U
  #define REFA_DACCTRL_VOSEL2_MASK      0x04U
  #define REFA_DACCTRL_VOSEL3_MASK      0x08U
  #define REFA_DACCTRL_VOSEL4_MASK      0x10U
  #define REFA_DACCTRL_DACEN_MASK       0x80U
  #define REFA_DACCTRL_VOSEL_MASK       0x1FU
  #define REFA_DACCTRL_VOSEL_BITNUM     0x00U
  #define REFA_DACCTRL                  (*((volatile word *)0x0000F240))


  word Reserved0[15];                  /* Reserved (unused) registers */

} REFA_PRPH;

/******************************************
*** Peripheral REFB
*******************************************/
typedef volatile struct {
  /*** REFB_DACCTRL - DAC Control Register; 0x0000F250 ***/
  union {
    word Word;
  } REFB_DACCTRL_STR;
  
  #define REFB_DACCTRL_VOSEL0_MASK      0x01U
  #define REFB_DACCTRL_VOSEL1_MASK      0x02U
  #define REFB_DACCTRL_VOSEL2_MASK      0x04U
  #define REFB_DACCTRL_VOSEL3_MASK      0x08U
  #define REFB_DACCTRL_VOSEL4_MASK      0x10U
  #define REFB_DACCTRL_DACEN_MASK       0x80U
  #define REFB_DACCTRL_VOSEL_MASK       0x1FU
  #define REFB_DACCTRL_VOSEL_BITNUM     0x00U
  #define REFB_DACCTRL                  (*((volatile word *)0x0000F250))


  word Reserved0[15];                  /* Reserved (unused) registers */

} REFB_PRPH;

/******************************************
*** Peripheral REFC
*******************************************/
typedef volatile struct {
  /*** REFC_DACCTRL - DAC Control Register; 0x0000F260 ***/
  union {
    word Word;
  } REFC_DACCTRL_STR;
  
  #define REFC_DACCTRL_VOSEL0_MASK      0x01U
  #define REFC_DACCTRL_VOSEL1_MASK      0x02U
  #define REFC_DACCTRL_VOSEL2_MASK      0x04U
  #define REFC_DACCTRL_VOSEL3_MASK      0x08U
  #define REFC_DACCTRL_VOSEL4_MASK      0x10U
  #define REFC_DACCTRL_DACEN_MASK       0x80U
  #define REFC_DACCTRL_VOSEL_MASK       0x1FU
  #define REFC_DACCTRL_VOSEL_BITNUM     0x00U
  #define REFC_DACCTRL                  (*((volatile word *)0x0000F260))


  word Reserved0[159];                 /* Reserved (unused) registers */

} REFC_PRPH;

/******************************************
*** Peripheral eFlexPWM
*******************************************/
typedef volatile struct {
  /*** PWM_SM0_CNT - PWM_SM0 Counter Register; 0x0000F300 ***/
  union {
    word Word;
  } PWM_SM0_CNT_STR;
  
  #define PWM_SM0_CNT                   (*((volatile word *)0x0000F300))


  /*** PWM_SM0_INIT - PWM_SM0 Initial Count Register; 0x0000F301 ***/
  union {
    word Word;
  } PWM_SM0_INIT_STR;
  
  #define PWM_SM0_INIT_INIT0_MASK       0x01U
  #define PWM_SM0_INIT_INIT1_MASK       0x02U
  #define PWM_SM0_INIT_INIT2_MASK       0x04U
  #define PWM_SM0_INIT_INIT3_MASK       0x08U
  #define PWM_SM0_INIT_INIT4_MASK       0x10U
  #define PWM_SM0_INIT_INIT5_MASK       0x20U
  #define PWM_SM0_INIT_INIT6_MASK       0x40U
  #define PWM_SM0_INIT_INIT7_MASK       0x80U
  #define PWM_SM0_INIT_INIT8_MASK       0x0100U
  #define PWM_SM0_INIT_INIT9_MASK       0x0200U
  #define PWM_SM0_INIT_INIT10_MASK      0x0400U
  #define PWM_SM0_INIT_INIT11_MASK      0x0800U
  #define PWM_SM0_INIT_INIT12_MASK      0x1000U
  #define PWM_SM0_INIT_INIT13_MASK      0x2000U
  #define PWM_SM0_INIT_INIT14_MASK      0x4000U
  #define PWM_SM0_INIT_INIT15_MASK      0x8000U
  #define PWM_SM0_INIT                  (*((volatile word *)0x0000F301))


  /*** PWM_SM0_CTRL2 - PWM_SM0 Control 2 Register; 0x0000F302 ***/
  union {
    word Word;
  } PWM_SM0_CTRL2_STR;
  
  #define PWM_SM0_CTRL2_CLK_SEL0_MASK   0x01U
  #define PWM_SM0_CTRL2_CLK_SEL1_MASK   0x02U
  #define PWM_SM0_CTRL2_RELOAD_SEL_MASK 0x04U
  #define PWM_SM0_CTRL2_FORCE_SEL0_MASK 0x08U
  #define PWM_SM0_CTRL2_FORCE_SEL1_MASK 0x10U
  #define PWM_SM0_CTRL2_FORCE_SEL2_MASK 0x20U
  #define PWM_SM0_CTRL2_FORCE_MASK      0x40U
  #define PWM_SM0_CTRL2_FRCEN_MASK      0x80U
  #define PWM_SM0_CTRL2_INIT_SEL0_MASK  0x0100U
  #define PWM_SM0_CTRL2_INIT_SEL1_MASK  0x0200U
  #define PWM_SM0_CTRL2_PWMX_INIT_MASK  0x0400U
  #define PWM_SM0_CTRL2_PWM45_INIT_MASK 0x0800U
  #define PWM_SM0_CTRL2_PWM23_INIT_MASK 0x1000U
  #define PWM_SM0_CTRL2_INDEP_MASK      0x2000U
  #define PWM_SM0_CTRL2_WAITEN_MASK     0x4000U
  #define PWM_SM0_CTRL2_DBGEN_MASK      0x8000U
  #define PWM_SM0_CTRL2_CLK_SEL_MASK    0x03U
  #define PWM_SM0_CTRL2_CLK_SEL_BITNUM  0x00U
  #define PWM_SM0_CTRL2_FORCE_SEL_MASK  0x38U
  #define PWM_SM0_CTRL2_FORCE_SEL_BITNUM 0x03U
  #define PWM_SM0_CTRL2_INIT_SEL_MASK   0x0300U
  #define PWM_SM0_CTRL2_INIT_SEL_BITNUM 0x08U
  #define PWM_SM0_CTRL2                 (*((volatile word *)0x0000F302))


  /*** PWM_SM0_CTRL - PWM_SM0 Control Register; 0x0000F303 ***/
  union {
    word Word;
  } PWM_SM0_CTRL_STR;
  
  #define PWM_SM0_CTRL_DBLEN_MASK       0x01U
  #define PWM_SM0_CTRL_LDMOD_MASK       0x04U
  #define PWM_SM0_CTRL_PRSC0_MASK       0x10U
  #define PWM_SM0_CTRL_PRSC1_MASK       0x20U
  #define PWM_SM0_CTRL_PRSC2_MASK       0x40U
  #define PWM_SM0_CTRL_DT0_MASK         0x0100U
  #define PWM_SM0_CTRL_DT1_MASK         0x0200U
  #define PWM_SM0_CTRL_FULL_MASK        0x0400U
  #define PWM_SM0_CTRL_HALF_MASK        0x0800U
  #define PWM_SM0_CTRL_LDFQ0_MASK       0x1000U
  #define PWM_SM0_CTRL_LDFQ1_MASK       0x2000U
  #define PWM_SM0_CTRL_LDFQ2_MASK       0x4000U
  #define PWM_SM0_CTRL_LDFQ3_MASK       0x8000U
  #define PWM_SM0_CTRL_PRSC_MASK        0x70U
  #define PWM_SM0_CTRL_PRSC_BITNUM      0x04U
  #define PWM_SM0_CTRL_DT_MASK          0x0300U
  #define PWM_SM0_CTRL_DT_BITNUM        0x08U
  #define PWM_SM0_CTRL_LDFQ_MASK        0xF000U
  #define PWM_SM0_CTRL_LDFQ_BITNUM      0x0CU
  #define PWM_SM0_CTRL                  (*((volatile word *)0x0000F303))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** PWM_SM0_VAL0 - PWM_SM0 Value Register 0; 0x0000F305 ***/
  union {
    word Word;
  } PWM_SM0_VAL0_STR;
  
  #define PWM_SM0_VAL0_VAL00_MASK       0x01U
  #define PWM_SM0_VAL0_VAL01_MASK       0x02U
  #define PWM_SM0_VAL0_VAL02_MASK       0x04U
  #define PWM_SM0_VAL0_VAL03_MASK       0x08U
  #define PWM_SM0_VAL0_VAL04_MASK       0x10U
  #define PWM_SM0_VAL0_VAL05_MASK       0x20U
  #define PWM_SM0_VAL0_VAL06_MASK       0x40U
  #define PWM_SM0_VAL0_VAL07_MASK       0x80U
  #define PWM_SM0_VAL0_VAL08_MASK       0x0100U
  #define PWM_SM0_VAL0_VAL09_MASK       0x0200U
  #define PWM_SM0_VAL0_VAL010_MASK      0x0400U
  #define PWM_SM0_VAL0_VAL011_MASK      0x0800U
  #define PWM_SM0_VAL0_VAL012_MASK      0x1000U
  #define PWM_SM0_VAL0_VAL013_MASK      0x2000U
  #define PWM_SM0_VAL0_VAL014_MASK      0x4000U
  #define PWM_SM0_VAL0_VAL015_MASK      0x8000U
  #define PWM_SM0_VAL0                  (*((volatile word *)0x0000F305))


  /*** PWM_SM0_FRACVAL1 - PWM_SM0 Fractional Value Register 1; 0x0000F306 ***/
  union {
    word Word;
  } PWM_SM0_FRACVAL1_STR;
  
  #define PWM_SM0_FRACVAL1_FRACVAL10_MASK 0x0800U
  #define PWM_SM0_FRACVAL1_FRACVAL11_MASK 0x1000U
  #define PWM_SM0_FRACVAL1_FRACVAL12_MASK 0x2000U
  #define PWM_SM0_FRACVAL1_FRACVAL13_MASK 0x4000U
  #define PWM_SM0_FRACVAL1_FRACVAL14_MASK 0x8000U
  #define PWM_SM0_FRACVAL1_FRACVAL1_MASK 0xF800U
  #define PWM_SM0_FRACVAL1_FRACVAL1_BITNUM 0x0BU
  #define PWM_SM0_FRACVAL1              (*((volatile word *)0x0000F306))


  /*** PWM_SM0_VAL1 - PWM_SM0 Value Register 1; 0x0000F307 ***/
  union {
    word Word;
  } PWM_SM0_VAL1_STR;
  
  #define PWM_SM0_VAL1_VAL10_MASK       0x01U
  #define PWM_SM0_VAL1_VAL11_MASK       0x02U
  #define PWM_SM0_VAL1_VAL12_MASK       0x04U
  #define PWM_SM0_VAL1_VAL13_MASK       0x08U
  #define PWM_SM0_VAL1_VAL14_MASK       0x10U
  #define PWM_SM0_VAL1_VAL15_MASK       0x20U
  #define PWM_SM0_VAL1_VAL16_MASK       0x40U
  #define PWM_SM0_VAL1_VAL17_MASK       0x80U
  #define PWM_SM0_VAL1_VAL18_MASK       0x0100U
  #define PWM_SM0_VAL1_VAL19_MASK       0x0200U
  #define PWM_SM0_VAL1_VAL110_MASK      0x0400U
  #define PWM_SM0_VAL1_VAL111_MASK      0x0800U
  #define PWM_SM0_VAL1_VAL112_MASK      0x1000U
  #define PWM_SM0_VAL1_VAL113_MASK      0x2000U
  #define PWM_SM0_VAL1_VAL114_MASK      0x4000U
  #define PWM_SM0_VAL1_VAL115_MASK      0x8000U
  #define PWM_SM0_VAL1                  (*((volatile word *)0x0000F307))


  /*** PWM_SM0_FRACVAL2 - PWM_SM0 Fractional Value Register 2; 0x0000F308 ***/
  union {
    word Word;
  } PWM_SM0_FRACVAL2_STR;
  
  #define PWM_SM0_FRACVAL2_FRACVAL20_MASK 0x0800U
  #define PWM_SM0_FRACVAL2_FRACVAL21_MASK 0x1000U
  #define PWM_SM0_FRACVAL2_FRACVAL22_MASK 0x2000U
  #define PWM_SM0_FRACVAL2_FRACVAL23_MASK 0x4000U
  #define PWM_SM0_FRACVAL2_FRACVAL24_MASK 0x8000U
  #define PWM_SM0_FRACVAL2_FRACVAL2_MASK 0xF800U
  #define PWM_SM0_FRACVAL2_FRACVAL2_BITNUM 0x0BU
  #define PWM_SM0_FRACVAL2              (*((volatile word *)0x0000F308))


  /*** PWM_SM0_VAL2 - PWM_SM0 Value Register 2; 0x0000F309 ***/
  union {
    word Word;
  } PWM_SM0_VAL2_STR;
  
  #define PWM_SM0_VAL2                  (*((volatile word *)0x0000F309))


  /*** PWM_SM0_FRACVAL3 - PWM_SM0 Fractional Value Register 3; 0x0000F30A ***/
  union {
    word Word;
  } PWM_SM0_FRACVAL3_STR;
  
  #define PWM_SM0_FRACVAL3_FRACVAL30_MASK 0x0800U
  #define PWM_SM0_FRACVAL3_FRACVAL31_MASK 0x1000U
  #define PWM_SM0_FRACVAL3_FRACVAL32_MASK 0x2000U
  #define PWM_SM0_FRACVAL3_FRACVAL33_MASK 0x4000U
  #define PWM_SM0_FRACVAL3_FRACVAL34_MASK 0x8000U
  #define PWM_SM0_FRACVAL3_FRACVAL3_MASK 0xF800U
  #define PWM_SM0_FRACVAL3_FRACVAL3_BITNUM 0x0BU
  #define PWM_SM0_FRACVAL3              (*((volatile word *)0x0000F30A))


  /*** PWM_SM0_VAL3 - PWM_SM0 Value Register 3; 0x0000F30B ***/
  union {
    word Word;
  } PWM_SM0_VAL3_STR;
  
  #define PWM_SM0_VAL3_VAL30_MASK       0x01U
  #define PWM_SM0_VAL3_VAL31_MASK       0x02U
  #define PWM_SM0_VAL3_VAL32_MASK       0x04U
  #define PWM_SM0_VAL3_VAL33_MASK       0x08U
  #define PWM_SM0_VAL3_VAL34_MASK       0x10U
  #define PWM_SM0_VAL3_VAL35_MASK       0x20U
  #define PWM_SM0_VAL3_VAL36_MASK       0x40U
  #define PWM_SM0_VAL3_VAL37_MASK       0x80U
  #define PWM_SM0_VAL3_VAL38_MASK       0x0100U
  #define PWM_SM0_VAL3_VAL39_MASK       0x0200U
  #define PWM_SM0_VAL3_VAL310_MASK      0x0400U
  #define PWM_SM0_VAL3_VAL311_MASK      0x0800U
  #define PWM_SM0_VAL3_VAL312_MASK      0x1000U
  #define PWM_SM0_VAL3_VAL313_MASK      0x2000U
  #define PWM_SM0_VAL3_VAL314_MASK      0x4000U
  #define PWM_SM0_VAL3_VAL315_MASK      0x8000U
  #define PWM_SM0_VAL3                  (*((volatile word *)0x0000F30B))


  /*** PWM_SM0_FRACVAL4 - PWM_SM0 Fractional Value Register 4; 0x0000F30C ***/
  union {
    word Word;
  } PWM_SM0_FRACVAL4_STR;
  
  #define PWM_SM0_FRACVAL4_FRACVAL40_MASK 0x0800U
  #define PWM_SM0_FRACVAL4_FRACVAL41_MASK 0x1000U
  #define PWM_SM0_FRACVAL4_FRACVAL42_MASK 0x2000U
  #define PWM_SM0_FRACVAL4_FRACVAL43_MASK 0x4000U
  #define PWM_SM0_FRACVAL4_FRACVAL44_MASK 0x8000U
  #define PWM_SM0_FRACVAL4_FRACVAL4_MASK 0xF800U
  #define PWM_SM0_FRACVAL4_FRACVAL4_BITNUM 0x0BU
  #define PWM_SM0_FRACVAL4              (*((volatile word *)0x0000F30C))


  /*** PWM_SM0_VAL4 - PWM_SM0 Value Register 4; 0x0000F30D ***/
  union {
    word Word;
  } PWM_SM0_VAL4_STR;
  
  #define PWM_SM0_VAL4                  (*((volatile word *)0x0000F30D))


  /*** PWM_SM0_FRACVAL5 - PWM_SM0 Fractional Value Register 5; 0x0000F30E ***/
  union {
    word Word;
  } PWM_SM0_FRACVAL5_STR;
  
  #define PWM_SM0_FRACVAL5_FRACVAL50_MASK 0x0800U
  #define PWM_SM0_FRACVAL5_FRACVAL51_MASK 0x1000U
  #define PWM_SM0_FRACVAL5_FRACVAL52_MASK 0x2000U
  #define PWM_SM0_FRACVAL5_FRACVAL53_MASK 0x4000U
  #define PWM_SM0_FRACVAL5_FRACVAL54_MASK 0x8000U
  #define PWM_SM0_FRACVAL5_FRACVAL5_MASK 0xF800U
  #define PWM_SM0_FRACVAL5_FRACVAL5_BITNUM 0x0BU
  #define PWM_SM0_FRACVAL5              (*((volatile word *)0x0000F30E))


  /*** PWM_SM0_VAL5 - PWM_SM0 Value Register 5; 0x0000F30F ***/
  union {
    word Word;
  } PWM_SM0_VAL5_STR;
  
  #define PWM_SM0_VAL5_VAL50_MASK       0x01U
  #define PWM_SM0_VAL5_VAL51_MASK       0x02U
  #define PWM_SM0_VAL5_VAL52_MASK       0x04U
  #define PWM_SM0_VAL5_VAL53_MASK       0x08U
  #define PWM_SM0_VAL5_VAL54_MASK       0x10U
  #define PWM_SM0_VAL5_VAL55_MASK       0x20U
  #define PWM_SM0_VAL5_VAL56_MASK       0x40U
  #define PWM_SM0_VAL5_VAL57_MASK       0x80U
  #define PWM_SM0_VAL5_VAL58_MASK       0x0100U
  #define PWM_SM0_VAL5_VAL59_MASK       0x0200U
  #define PWM_SM0_VAL5_VAL510_MASK      0x0400U
  #define PWM_SM0_VAL5_VAL511_MASK      0x0800U
  #define PWM_SM0_VAL5_VAL512_MASK      0x1000U
  #define PWM_SM0_VAL5_VAL513_MASK      0x2000U
  #define PWM_SM0_VAL5_VAL514_MASK      0x4000U
  #define PWM_SM0_VAL5_VAL515_MASK      0x8000U
  #define PWM_SM0_VAL5                  (*((volatile word *)0x0000F30F))


  /*** PWM_SM0_FRCTRL - PWM_SM0 Fractional Control Register; 0x0000F310 ***/
  union {
    word Word;
  } PWM_SM0_FRCTRL_STR;
  
  #define PWM_SM0_FRCTRL_FRAC1_EN_MASK  0x02U
  #define PWM_SM0_FRCTRL_FRAC23_EN_MASK 0x04U
  #define PWM_SM0_FRCTRL_FRAC45_EN_MASK 0x10U
  #define PWM_SM0_FRCTRL_FRAC_PU_MASK   0x0100U
  #define PWM_SM0_FRCTRL                (*((volatile word *)0x0000F310))


  /*** PWM_SM0_OCTRL - PWM_SM0 Output Control Register; 0x0000F311 ***/
  union {
    word Word;
  } PWM_SM0_OCTRL_STR;
  
  #define PWM_SM0_OCTRL_PWMXFS0_MASK    0x01U
  #define PWM_SM0_OCTRL_PWMXFS1_MASK    0x02U
  #define PWM_SM0_OCTRL_PWMBFS0_MASK    0x04U
  #define PWM_SM0_OCTRL_PWMBFS1_MASK    0x08U
  #define PWM_SM0_OCTRL_PWMAFS0_MASK    0x10U
  #define PWM_SM0_OCTRL_PWMAFS1_MASK    0x20U
  #define PWM_SM0_OCTRL_POLX_MASK       0x0100U
  #define PWM_SM0_OCTRL_POLB_MASK       0x0200U
  #define PWM_SM0_OCTRL_POLA_MASK       0x0400U
  #define PWM_SM0_OCTRL_PWMX_IN_MASK    0x2000U
  #define PWM_SM0_OCTRL_PWMB_IN_MASK    0x4000U
  #define PWM_SM0_OCTRL_PWMA_IN_MASK    0x8000U
  #define PWM_SM0_OCTRL_PWMXFS_MASK     0x03U
  #define PWM_SM0_OCTRL_PWMXFS_BITNUM   0x00U
  #define PWM_SM0_OCTRL_PWMBFS_MASK     0x0CU
  #define PWM_SM0_OCTRL_PWMBFS_BITNUM   0x02U
  #define PWM_SM0_OCTRL_PWMAFS_MASK     0x30U
  #define PWM_SM0_OCTRL_PWMAFS_BITNUM   0x04U
  #define PWM_SM0_OCTRL                 (*((volatile word *)0x0000F311))


  /*** PWM_SM0_STS - PWM_SM0 Status Register; 0x0000F312 ***/
  union {
    word Word;
  } PWM_SM0_STS_STR;
  
  #define PWM_SM0_STS_CMPF0_MASK        0x01U
  #define PWM_SM0_STS_CMPF1_MASK        0x02U
  #define PWM_SM0_STS_CMPF2_MASK        0x04U
  #define PWM_SM0_STS_CMPF3_MASK        0x08U
  #define PWM_SM0_STS_CMPF4_MASK        0x10U
  #define PWM_SM0_STS_CMPF5_MASK        0x20U
  #define PWM_SM0_STS_CFX0_MASK         0x40U
  #define PWM_SM0_STS_CFX1_MASK         0x80U
  #define PWM_SM0_STS_CFB0_MASK         0x0100U
  #define PWM_SM0_STS_CFB1_MASK         0x0200U
  #define PWM_SM0_STS_CFA0_MASK         0x0400U
  #define PWM_SM0_STS_CFA1_MASK         0x0800U
  #define PWM_SM0_STS_RF_MASK           0x1000U
  #define PWM_SM0_STS_REF_MASK          0x2000U
  #define PWM_SM0_STS_RUF_MASK          0x4000U
  #define PWM_SM0_STS_CMPF_MASK         0x3FU
  #define PWM_SM0_STS_CMPF_BITNUM       0x00U
  #define PWM_SM0_STS_CFX_MASK          0xC0U
  #define PWM_SM0_STS_CFX_BITNUM        0x06U
  #define PWM_SM0_STS_CFB_MASK          0x0300U
  #define PWM_SM0_STS_CFB_BITNUM        0x08U
  #define PWM_SM0_STS_CFA_MASK          0x0C00U
  #define PWM_SM0_STS_CFA_BITNUM        0x0AU
  #define PWM_SM0_STS                   (*((volatile word *)0x0000F312))


  /*** PWM_SM0_INTEN - PWM_SM0 Interrupt Enable Register; 0x0000F313 ***/
  union {
    word Word;
  } PWM_SM0_INTEN_STR;
  
  #define PWM_SM0_INTEN_CMPIE0_MASK     0x01U
  #define PWM_SM0_INTEN_CMPIE1_MASK     0x02U
  #define PWM_SM0_INTEN_CMPIE2_MASK     0x04U
  #define PWM_SM0_INTEN_CMPIE3_MASK     0x08U
  #define PWM_SM0_INTEN_CMPIE4_MASK     0x10U
  #define PWM_SM0_INTEN_CMPIE5_MASK     0x20U
  #define PWM_SM0_INTEN_CX0IE_MASK      0x40U
  #define PWM_SM0_INTEN_CX1IE_MASK      0x80U
  #define PWM_SM0_INTEN_CB0IE_MASK      0x0100U
  #define PWM_SM0_INTEN_CB1IE_MASK      0x0200U
  #define PWM_SM0_INTEN_CA0IE_MASK      0x0400U
  #define PWM_SM0_INTEN_CA1IE_MASK      0x0800U
  #define PWM_SM0_INTEN_RIE_MASK        0x1000U
  #define PWM_SM0_INTEN_REIE_MASK       0x2000U
  #define PWM_SM0_INTEN_CMPIE_MASK      0x3FU
  #define PWM_SM0_INTEN_CMPIE_BITNUM    0x00U
  #define PWM_SM0_INTEN                 (*((volatile word *)0x0000F313))


  word Reserved1[1];                   /* Reserved (unused) registers */
  
  /*** PWM_SM0_TCTRL - PWM_SM0 Output Trigger Control Register; 0x0000F315 ***/
  union {
    word Word;
  } PWM_SM0_TCTRL_STR;
  
  #define PWM_SM0_TCTRL_OUT_TRIG_EN0_MASK 0x01U
  #define PWM_SM0_TCTRL_OUT_TRIG_EN1_MASK 0x02U
  #define PWM_SM0_TCTRL_OUT_TRIG_EN2_MASK 0x04U
  #define PWM_SM0_TCTRL_OUT_TRIG_EN3_MASK 0x08U
  #define PWM_SM0_TCTRL_OUT_TRIG_EN4_MASK 0x10U
  #define PWM_SM0_TCTRL_OUT_TRIG_EN5_MASK 0x20U
  #define PWM_SM0_TCTRL_OUT_TRIG_EN_MASK 0x3FU
  #define PWM_SM0_TCTRL_OUT_TRIG_EN_BITNUM 0x00U
  #define PWM_SM0_TCTRL                 (*((volatile word *)0x0000F315))


  /*** PWM_SM0_DISMAP - PWM_SM0 Fault Disable Mapping Register; 0x0000F316 ***/
  union {
    word Word;
  } PWM_SM0_DISMAP_STR;
  
  #define PWM_SM0_DISMAP_DISA0_MASK     0x01U
  #define PWM_SM0_DISMAP_DISA1_MASK     0x02U
  #define PWM_SM0_DISMAP_DISA2_MASK     0x04U
  #define PWM_SM0_DISMAP_DISA3_MASK     0x08U
  #define PWM_SM0_DISMAP_DISB0_MASK     0x10U
  #define PWM_SM0_DISMAP_DISB1_MASK     0x20U
  #define PWM_SM0_DISMAP_DISB2_MASK     0x40U
  #define PWM_SM0_DISMAP_DISB3_MASK     0x80U
  #define PWM_SM0_DISMAP_DISX0_MASK     0x0100U
  #define PWM_SM0_DISMAP_DISX1_MASK     0x0200U
  #define PWM_SM0_DISMAP_DISX2_MASK     0x0400U
  #define PWM_SM0_DISMAP_DISX3_MASK     0x0800U
  #define PWM_SM0_DISMAP_DISA_MASK      0x0FU
  #define PWM_SM0_DISMAP_DISA_BITNUM    0x00U
  #define PWM_SM0_DISMAP_DISB_MASK      0xF0U
  #define PWM_SM0_DISMAP_DISB_BITNUM    0x04U
  #define PWM_SM0_DISMAP_DISX_MASK      0x0F00U
  #define PWM_SM0_DISMAP_DISX_BITNUM    0x08U
  #define PWM_SM0_DISMAP                (*((volatile word *)0x0000F316))


  /*** PWM_SM0_DTCNT0 - PWM_SM0 Deadtime Count Register 0; 0x0000F317 ***/
  union {
    word Word;
  } PWM_SM0_DTCNT0_STR;
  
  #define PWM_SM0_DTCNT0_DTCNT00_MASK   0x01U
  #define PWM_SM0_DTCNT0_DTCNT01_MASK   0x02U
  #define PWM_SM0_DTCNT0_DTCNT02_MASK   0x04U
  #define PWM_SM0_DTCNT0_DTCNT03_MASK   0x08U
  #define PWM_SM0_DTCNT0_DTCNT04_MASK   0x10U
  #define PWM_SM0_DTCNT0_DTCNT05_MASK   0x20U
  #define PWM_SM0_DTCNT0_DTCNT06_MASK   0x40U
  #define PWM_SM0_DTCNT0_DTCNT07_MASK   0x80U
  #define PWM_SM0_DTCNT0_DTCNT08_MASK   0x0100U
  #define PWM_SM0_DTCNT0_DTCNT09_MASK   0x0200U
  #define PWM_SM0_DTCNT0_DTCNT010_MASK  0x0400U
  #define PWM_SM0_DTCNT0_DTCNT0_MASK    0x07FFU
  #define PWM_SM0_DTCNT0_DTCNT0_BITNUM  0x00U
  #define PWM_SM0_DTCNT0                (*((volatile word *)0x0000F317))


  /*** PWM_SM0_DTCNT1 - PWM_SM0 Deadtime Count Register 1; 0x0000F318 ***/
  union {
    word Word;
  } PWM_SM0_DTCNT1_STR;
  
  #define PWM_SM0_DTCNT1_DTCNT10_MASK   0x01U
  #define PWM_SM0_DTCNT1_DTCNT11_MASK   0x02U
  #define PWM_SM0_DTCNT1_DTCNT12_MASK   0x04U
  #define PWM_SM0_DTCNT1_DTCNT13_MASK   0x08U
  #define PWM_SM0_DTCNT1_DTCNT14_MASK   0x10U
  #define PWM_SM0_DTCNT1_DTCNT15_MASK   0x20U
  #define PWM_SM0_DTCNT1_DTCNT16_MASK   0x40U
  #define PWM_SM0_DTCNT1_DTCNT17_MASK   0x80U
  #define PWM_SM0_DTCNT1_DTCNT18_MASK   0x0100U
  #define PWM_SM0_DTCNT1_DTCNT19_MASK   0x0200U
  #define PWM_SM0_DTCNT1_DTCNT110_MASK  0x0400U
  #define PWM_SM0_DTCNT1_DTCNT1_MASK    0x07FFU
  #define PWM_SM0_DTCNT1_DTCNT1_BITNUM  0x00U
  #define PWM_SM0_DTCNT1                (*((volatile word *)0x0000F318))


  word Reserved2[23];                  /* Reserved (unused) registers */
  
  /*** PWM_SM1_CNT - PWM_SM1 Counter Register; 0x0000F330 ***/
  union {
    word Word;
  } PWM_SM1_CNT_STR;
  
  #define PWM_SM1_CNT                   (*((volatile word *)0x0000F330))


  /*** PWM_SM1_INIT - PWM_SM1 Initial Count Register; 0x0000F331 ***/
  union {
    word Word;
  } PWM_SM1_INIT_STR;
  
  #define PWM_SM1_INIT_INIT0_MASK       0x01U
  #define PWM_SM1_INIT_INIT1_MASK       0x02U
  #define PWM_SM1_INIT_INIT2_MASK       0x04U
  #define PWM_SM1_INIT_INIT3_MASK       0x08U
  #define PWM_SM1_INIT_INIT4_MASK       0x10U
  #define PWM_SM1_INIT_INIT5_MASK       0x20U
  #define PWM_SM1_INIT_INIT6_MASK       0x40U
  #define PWM_SM1_INIT_INIT7_MASK       0x80U
  #define PWM_SM1_INIT_INIT8_MASK       0x0100U
  #define PWM_SM1_INIT_INIT9_MASK       0x0200U
  #define PWM_SM1_INIT_INIT10_MASK      0x0400U
  #define PWM_SM1_INIT_INIT11_MASK      0x0800U
  #define PWM_SM1_INIT_INIT12_MASK      0x1000U
  #define PWM_SM1_INIT_INIT13_MASK      0x2000U
  #define PWM_SM1_INIT_INIT14_MASK      0x4000U
  #define PWM_SM1_INIT_INIT15_MASK      0x8000U
  #define PWM_SM1_INIT                  (*((volatile word *)0x0000F331))


  /*** PWM_SM1_CTRL2 - PWM_SM1 Control 2 Register; 0x0000F332 ***/
  union {
    word Word;
  } PWM_SM1_CTRL2_STR;
  
  #define PWM_SM1_CTRL2_CLK_SEL0_MASK   0x01U
  #define PWM_SM1_CTRL2_CLK_SEL1_MASK   0x02U
  #define PWM_SM1_CTRL2_RELOAD_SEL_MASK 0x04U
  #define PWM_SM1_CTRL2_FORCE_SEL0_MASK 0x08U
  #define PWM_SM1_CTRL2_FORCE_SEL1_MASK 0x10U
  #define PWM_SM1_CTRL2_FORCE_SEL2_MASK 0x20U
  #define PWM_SM1_CTRL2_FORCE_MASK      0x40U
  #define PWM_SM1_CTRL2_FRCEN_MASK      0x80U
  #define PWM_SM1_CTRL2_INIT_SEL0_MASK  0x0100U
  #define PWM_SM1_CTRL2_INIT_SEL1_MASK  0x0200U
  #define PWM_SM1_CTRL2_PWMX_INIT_MASK  0x0400U
  #define PWM_SM1_CTRL2_PWM45_INIT_MASK 0x0800U
  #define PWM_SM1_CTRL2_PWM23_INIT_MASK 0x1000U
  #define PWM_SM1_CTRL2_INDEP_MASK      0x2000U
  #define PWM_SM1_CTRL2_WAITEN_MASK     0x4000U
  #define PWM_SM1_CTRL2_DBGEN_MASK      0x8000U
  #define PWM_SM1_CTRL2_CLK_SEL_MASK    0x03U
  #define PWM_SM1_CTRL2_CLK_SEL_BITNUM  0x00U
  #define PWM_SM1_CTRL2_FORCE_SEL_MASK  0x38U
  #define PWM_SM1_CTRL2_FORCE_SEL_BITNUM 0x03U
  #define PWM_SM1_CTRL2_INIT_SEL_MASK   0x0300U
  #define PWM_SM1_CTRL2_INIT_SEL_BITNUM 0x08U
  #define PWM_SM1_CTRL2                 (*((volatile word *)0x0000F332))


  /*** PWM_SM1_CTRL - PWM_SM1 Control Register; 0x0000F333 ***/
  union {
    word Word;
  } PWM_SM1_CTRL_STR;
  
  #define PWM_SM1_CTRL_DBLEN_MASK       0x01U
  #define PWM_SM1_CTRL_LDMOD_MASK       0x04U
  #define PWM_SM1_CTRL_PRSC0_MASK       0x10U
  #define PWM_SM1_CTRL_PRSC1_MASK       0x20U
  #define PWM_SM1_CTRL_PRSC2_MASK       0x40U
  #define PWM_SM1_CTRL_DT0_MASK         0x0100U
  #define PWM_SM1_CTRL_DT1_MASK         0x0200U
  #define PWM_SM1_CTRL_FULL_MASK        0x0400U
  #define PWM_SM1_CTRL_HALF_MASK        0x0800U
  #define PWM_SM1_CTRL_LDFQ0_MASK       0x1000U
  #define PWM_SM1_CTRL_LDFQ1_MASK       0x2000U
  #define PWM_SM1_CTRL_LDFQ2_MASK       0x4000U
  #define PWM_SM1_CTRL_LDFQ3_MASK       0x8000U
  #define PWM_SM1_CTRL_PRSC_MASK        0x70U
  #define PWM_SM1_CTRL_PRSC_BITNUM      0x04U
  #define PWM_SM1_CTRL_DT_MASK          0x0300U
  #define PWM_SM1_CTRL_DT_BITNUM        0x08U
  #define PWM_SM1_CTRL_LDFQ_MASK        0xF000U
  #define PWM_SM1_CTRL_LDFQ_BITNUM      0x0CU
  #define PWM_SM1_CTRL                  (*((volatile word *)0x0000F333))


  word Reserved3[1];                   /* Reserved (unused) registers */
  
  /*** PWM_SM1_VAL0 - PWM_SM1 Value Register 0; 0x0000F335 ***/
  union {
    word Word;
  } PWM_SM1_VAL0_STR;
  
  #define PWM_SM1_VAL0_VAL00_MASK       0x01U
  #define PWM_SM1_VAL0_VAL01_MASK       0x02U
  #define PWM_SM1_VAL0_VAL02_MASK       0x04U
  #define PWM_SM1_VAL0_VAL03_MASK       0x08U
  #define PWM_SM1_VAL0_VAL04_MASK       0x10U
  #define PWM_SM1_VAL0_VAL05_MASK       0x20U
  #define PWM_SM1_VAL0_VAL06_MASK       0x40U
  #define PWM_SM1_VAL0_VAL07_MASK       0x80U
  #define PWM_SM1_VAL0_VAL08_MASK       0x0100U
  #define PWM_SM1_VAL0_VAL09_MASK       0x0200U
  #define PWM_SM1_VAL0_VAL010_MASK      0x0400U
  #define PWM_SM1_VAL0_VAL011_MASK      0x0800U
  #define PWM_SM1_VAL0_VAL012_MASK      0x1000U
  #define PWM_SM1_VAL0_VAL013_MASK      0x2000U
  #define PWM_SM1_VAL0_VAL014_MASK      0x4000U
  #define PWM_SM1_VAL0_VAL015_MASK      0x8000U
  #define PWM_SM1_VAL0                  (*((volatile word *)0x0000F335))


  /*** PWM_SM1_FRACVAL1 - PWM_SM1 Fractional Value Register 1; 0x0000F336 ***/
  union {
    word Word;
  } PWM_SM1_FRACVAL1_STR;
  
  #define PWM_SM1_FRACVAL1_FRACVAL10_MASK 0x0800U
  #define PWM_SM1_FRACVAL1_FRACVAL11_MASK 0x1000U
  #define PWM_SM1_FRACVAL1_FRACVAL12_MASK 0x2000U
  #define PWM_SM1_FRACVAL1_FRACVAL13_MASK 0x4000U
  #define PWM_SM1_FRACVAL1_FRACVAL14_MASK 0x8000U
  #define PWM_SM1_FRACVAL1_FRACVAL1_MASK 0xF800U
  #define PWM_SM1_FRACVAL1_FRACVAL1_BITNUM 0x0BU
  #define PWM_SM1_FRACVAL1              (*((volatile word *)0x0000F336))


  /*** PWM_SM1_VAL1 - PWM_SM1 Value Register 1; 0x0000F337 ***/
  union {
    word Word;
  } PWM_SM1_VAL1_STR;
  
  #define PWM_SM1_VAL1_VAL10_MASK       0x01U
  #define PWM_SM1_VAL1_VAL11_MASK       0x02U
  #define PWM_SM1_VAL1_VAL12_MASK       0x04U
  #define PWM_SM1_VAL1_VAL13_MASK       0x08U
  #define PWM_SM1_VAL1_VAL14_MASK       0x10U
  #define PWM_SM1_VAL1_VAL15_MASK       0x20U
  #define PWM_SM1_VAL1_VAL16_MASK       0x40U
  #define PWM_SM1_VAL1_VAL17_MASK       0x80U
  #define PWM_SM1_VAL1_VAL18_MASK       0x0100U
  #define PWM_SM1_VAL1_VAL19_MASK       0x0200U
  #define PWM_SM1_VAL1_VAL110_MASK      0x0400U
  #define PWM_SM1_VAL1_VAL111_MASK      0x0800U
  #define PWM_SM1_VAL1_VAL112_MASK      0x1000U
  #define PWM_SM1_VAL1_VAL113_MASK      0x2000U
  #define PWM_SM1_VAL1_VAL114_MASK      0x4000U
  #define PWM_SM1_VAL1_VAL115_MASK      0x8000U
  #define PWM_SM1_VAL1                  (*((volatile word *)0x0000F337))


  /*** PWM_SM1_FRACVAL2 - PWM_SM1 Fractional Value Register 2; 0x0000F338 ***/
  union {
    word Word;
  } PWM_SM1_FRACVAL2_STR;
  
  #define PWM_SM1_FRACVAL2_FRACVAL20_MASK 0x0800U
  #define PWM_SM1_FRACVAL2_FRACVAL21_MASK 0x1000U
  #define PWM_SM1_FRACVAL2_FRACVAL22_MASK 0x2000U
  #define PWM_SM1_FRACVAL2_FRACVAL23_MASK 0x4000U
  #define PWM_SM1_FRACVAL2_FRACVAL24_MASK 0x8000U
  #define PWM_SM1_FRACVAL2_FRACVAL2_MASK 0xF800U
  #define PWM_SM1_FRACVAL2_FRACVAL2_BITNUM 0x0BU
  #define PWM_SM1_FRACVAL2              (*((volatile word *)0x0000F338))


  /*** PWM_SM1_VAL2 - PWM_SM1 Value Register 2; 0x0000F339 ***/
  union {
    word Word;
  } PWM_SM1_VAL2_STR;
  
  #define PWM_SM1_VAL2                  (*((volatile word *)0x0000F339))


  /*** PWM_SM1_FRACVAL3 - PWM_SM1 Fractional Value Register 3; 0x0000F33A ***/
  union {
    word Word;
  } PWM_SM1_FRACVAL3_STR;
  
  #define PWM_SM1_FRACVAL3_FRACVAL30_MASK 0x0800U
  #define PWM_SM1_FRACVAL3_FRACVAL31_MASK 0x1000U
  #define PWM_SM1_FRACVAL3_FRACVAL32_MASK 0x2000U
  #define PWM_SM1_FRACVAL3_FRACVAL33_MASK 0x4000U
  #define PWM_SM1_FRACVAL3_FRACVAL34_MASK 0x8000U
  #define PWM_SM1_FRACVAL3_FRACVAL3_MASK 0xF800U
  #define PWM_SM1_FRACVAL3_FRACVAL3_BITNUM 0x0BU
  #define PWM_SM1_FRACVAL3              (*((volatile word *)0x0000F33A))


  /*** PWM_SM1_VAL3 - PWM_SM1 Value Register 3; 0x0000F33B ***/
  union {
    word Word;
  } PWM_SM1_VAL3_STR;
  
  #define PWM_SM1_VAL3_VAL30_MASK       0x01U
  #define PWM_SM1_VAL3_VAL31_MASK       0x02U
  #define PWM_SM1_VAL3_VAL32_MASK       0x04U
  #define PWM_SM1_VAL3_VAL33_MASK       0x08U
  #define PWM_SM1_VAL3_VAL34_MASK       0x10U
  #define PWM_SM1_VAL3_VAL35_MASK       0x20U
  #define PWM_SM1_VAL3_VAL36_MASK       0x40U
  #define PWM_SM1_VAL3_VAL37_MASK       0x80U
  #define PWM_SM1_VAL3_VAL38_MASK       0x0100U
  #define PWM_SM1_VAL3_VAL39_MASK       0x0200U
  #define PWM_SM1_VAL3_VAL310_MASK      0x0400U
  #define PWM_SM1_VAL3_VAL311_MASK      0x0800U
  #define PWM_SM1_VAL3_VAL312_MASK      0x1000U
  #define PWM_SM1_VAL3_VAL313_MASK      0x2000U
  #define PWM_SM1_VAL3_VAL314_MASK      0x4000U
  #define PWM_SM1_VAL3_VAL315_MASK      0x8000U
  #define PWM_SM1_VAL3                  (*((volatile word *)0x0000F33B))


  /*** PWM_SM1_FRACVAL4 - PWM_SM1 Fractional Value Register 4; 0x0000F33C ***/
  union {
    word Word;
  } PWM_SM1_FRACVAL4_STR;
  
  #define PWM_SM1_FRACVAL4_FRACVAL40_MASK 0x0800U
  #define PWM_SM1_FRACVAL4_FRACVAL41_MASK 0x1000U
  #define PWM_SM1_FRACVAL4_FRACVAL42_MASK 0x2000U
  #define PWM_SM1_FRACVAL4_FRACVAL43_MASK 0x4000U
  #define PWM_SM1_FRACVAL4_FRACVAL44_MASK 0x8000U
  #define PWM_SM1_FRACVAL4_FRACVAL4_MASK 0xF800U
  #define PWM_SM1_FRACVAL4_FRACVAL4_BITNUM 0x0BU
  #define PWM_SM1_FRACVAL4              (*((volatile word *)0x0000F33C))


  /*** PWM_SM1_VAL4 - PWM_SM1 Value Register 4; 0x0000F33D ***/
  union {
    word Word;
  } PWM_SM1_VAL4_STR;
  
  #define PWM_SM1_VAL4                  (*((volatile word *)0x0000F33D))


  /*** PWM_SM1_FRACVAL5 - PWM_SM1 Fractional Value Register 5; 0x0000F33E ***/
  union {
    word Word;
  } PWM_SM1_FRACVAL5_STR;
  
  #define PWM_SM1_FRACVAL5_FRACVAL50_MASK 0x0800U
  #define PWM_SM1_FRACVAL5_FRACVAL51_MASK 0x1000U
  #define PWM_SM1_FRACVAL5_FRACVAL52_MASK 0x2000U
  #define PWM_SM1_FRACVAL5_FRACVAL53_MASK 0x4000U
  #define PWM_SM1_FRACVAL5_FRACVAL54_MASK 0x8000U
  #define PWM_SM1_FRACVAL5_FRACVAL5_MASK 0xF800U
  #define PWM_SM1_FRACVAL5_FRACVAL5_BITNUM 0x0BU
  #define PWM_SM1_FRACVAL5              (*((volatile word *)0x0000F33E))


  /*** PWM_SM1_VAL5 - PWM_SM1 Value Register 5; 0x0000F33F ***/
  union {
    word Word;
  } PWM_SM1_VAL5_STR;
  
  #define PWM_SM1_VAL5_VAL50_MASK       0x01U
  #define PWM_SM1_VAL5_VAL51_MASK       0x02U
  #define PWM_SM1_VAL5_VAL52_MASK       0x04U
  #define PWM_SM1_VAL5_VAL53_MASK       0x08U
  #define PWM_SM1_VAL5_VAL54_MASK       0x10U
  #define PWM_SM1_VAL5_VAL55_MASK       0x20U
  #define PWM_SM1_VAL5_VAL56_MASK       0x40U
  #define PWM_SM1_VAL5_VAL57_MASK       0x80U
  #define PWM_SM1_VAL5_VAL58_MASK       0x0100U
  #define PWM_SM1_VAL5_VAL59_MASK       0x0200U
  #define PWM_SM1_VAL5_VAL510_MASK      0x0400U
  #define PWM_SM1_VAL5_VAL511_MASK      0x0800U
  #define PWM_SM1_VAL5_VAL512_MASK      0x1000U
  #define PWM_SM1_VAL5_VAL513_MASK      0x2000U
  #define PWM_SM1_VAL5_VAL514_MASK      0x4000U
  #define PWM_SM1_VAL5_VAL515_MASK      0x8000U
  #define PWM_SM1_VAL5                  (*((volatile word *)0x0000F33F))


  /*** PWM_SM1_FRCTRL - PWM_SM1 Fractional Control Register; 0x0000F340 ***/
  union {
    word Word;
  } PWM_SM1_FRCTRL_STR;
  
  #define PWM_SM1_FRCTRL_FRAC1_EN_MASK  0x02U
  #define PWM_SM1_FRCTRL_FRAC23_EN_MASK 0x04U
  #define PWM_SM1_FRCTRL_FRAC45_EN_MASK 0x10U
  #define PWM_SM1_FRCTRL_FRAC_PU_MASK   0x0100U
  #define PWM_SM1_FRCTRL                (*((volatile word *)0x0000F340))


  /*** PWM_SM1_OCTRL - PWM_SM1 Output Control Register; 0x0000F341 ***/
  union {
    word Word;
  } PWM_SM1_OCTRL_STR;
  
  #define PWM_SM1_OCTRL_PWMXFS0_MASK    0x01U
  #define PWM_SM1_OCTRL_PWMXFS1_MASK    0x02U
  #define PWM_SM1_OCTRL_PWMBFS0_MASK    0x04U
  #define PWM_SM1_OCTRL_PWMBFS1_MASK    0x08U
  #define PWM_SM1_OCTRL_PWMAFS0_MASK    0x10U
  #define PWM_SM1_OCTRL_PWMAFS1_MASK    0x20U
  #define PWM_SM1_OCTRL_POLX_MASK       0x0100U
  #define PWM_SM1_OCTRL_POLB_MASK       0x0200U
  #define PWM_SM1_OCTRL_POLA_MASK       0x0400U
  #define PWM_SM1_OCTRL_PWMX_IN_MASK    0x2000U
  #define PWM_SM1_OCTRL_PWMB_IN_MASK    0x4000U
  #define PWM_SM1_OCTRL_PWMA_IN_MASK    0x8000U
  #define PWM_SM1_OCTRL_PWMXFS_MASK     0x03U
  #define PWM_SM1_OCTRL_PWMXFS_BITNUM   0x00U
  #define PWM_SM1_OCTRL_PWMBFS_MASK     0x0CU
  #define PWM_SM1_OCTRL_PWMBFS_BITNUM   0x02U
  #define PWM_SM1_OCTRL_PWMAFS_MASK     0x30U
  #define PWM_SM1_OCTRL_PWMAFS_BITNUM   0x04U
  #define PWM_SM1_OCTRL                 (*((volatile word *)0x0000F341))


  /*** PWM_SM1_STS - PWM_SM1 Status Register; 0x0000F342 ***/
  union {
    word Word;
  } PWM_SM1_STS_STR;
  
  #define PWM_SM1_STS_CMPF0_MASK        0x01U
  #define PWM_SM1_STS_CMPF1_MASK        0x02U
  #define PWM_SM1_STS_CMPF2_MASK        0x04U
  #define PWM_SM1_STS_CMPF3_MASK        0x08U
  #define PWM_SM1_STS_CMPF4_MASK        0x10U
  #define PWM_SM1_STS_CMPF5_MASK        0x20U
  #define PWM_SM1_STS_CFX0_MASK         0x40U
  #define PWM_SM1_STS_CFX1_MASK         0x80U
  #define PWM_SM1_STS_CFB0_MASK         0x0100U
  #define PWM_SM1_STS_CFB1_MASK         0x0200U
  #define PWM_SM1_STS_CFA0_MASK         0x0400U
  #define PWM_SM1_STS_CFA1_MASK         0x0800U
  #define PWM_SM1_STS_RF_MASK           0x1000U
  #define PWM_SM1_STS_REF_MASK          0x2000U
  #define PWM_SM1_STS_RUF_MASK          0x4000U
  #define PWM_SM1_STS_CMPF_MASK         0x3FU
  #define PWM_SM1_STS_CMPF_BITNUM       0x00U
  #define PWM_SM1_STS_CFX_MASK          0xC0U
  #define PWM_SM1_STS_CFX_BITNUM        0x06U
  #define PWM_SM1_STS_CFB_MASK          0x0300U
  #define PWM_SM1_STS_CFB_BITNUM        0x08U
  #define PWM_SM1_STS_CFA_MASK          0x0C00U
  #define PWM_SM1_STS_CFA_BITNUM        0x0AU
  #define PWM_SM1_STS                   (*((volatile word *)0x0000F342))


  /*** PWM_SM1_INTEN - PWM_SM1 Interrupt Enable Register; 0x0000F343 ***/
  union {
    word Word;
  } PWM_SM1_INTEN_STR;
  
  #define PWM_SM1_INTEN_CMPIE0_MASK     0x01U
  #define PWM_SM1_INTEN_CMPIE1_MASK     0x02U
  #define PWM_SM1_INTEN_CMPIE2_MASK     0x04U
  #define PWM_SM1_INTEN_CMPIE3_MASK     0x08U
  #define PWM_SM1_INTEN_CMPIE4_MASK     0x10U
  #define PWM_SM1_INTEN_CMPIE5_MASK     0x20U
  #define PWM_SM1_INTEN_CX0IE_MASK      0x40U
  #define PWM_SM1_INTEN_CX1IE_MASK      0x80U
  #define PWM_SM1_INTEN_CB0IE_MASK      0x0100U
  #define PWM_SM1_INTEN_CB1IE_MASK      0x0200U
  #define PWM_SM1_INTEN_CA0IE_MASK      0x0400U
  #define PWM_SM1_INTEN_CA1IE_MASK      0x0800U
  #define PWM_SM1_INTEN_RIE_MASK        0x1000U
  #define PWM_SM1_INTEN_REIE_MASK       0x2000U
  #define PWM_SM1_INTEN_CMPIE_MASK      0x3FU
  #define PWM_SM1_INTEN_CMPIE_BITNUM    0x00U
  #define PWM_SM1_INTEN                 (*((volatile word *)0x0000F343))


  word Reserved4[1];                   /* Reserved (unused) registers */
  
  /*** PWM_SM1_TCTRL - PWM_SM1 Output Trigger Control Register; 0x0000F345 ***/
  union {
    word Word;
  } PWM_SM1_TCTRL_STR;
  
  #define PWM_SM1_TCTRL_OUT_TRIG_EN0_MASK 0x01U
  #define PWM_SM1_TCTRL_OUT_TRIG_EN1_MASK 0x02U
  #define PWM_SM1_TCTRL_OUT_TRIG_EN2_MASK 0x04U
  #define PWM_SM1_TCTRL_OUT_TRIG_EN3_MASK 0x08U
  #define PWM_SM1_TCTRL_OUT_TRIG_EN4_MASK 0x10U
  #define PWM_SM1_TCTRL_OUT_TRIG_EN5_MASK 0x20U
  #define PWM_SM1_TCTRL_OUT_TRIG_EN_MASK 0x3FU
  #define PWM_SM1_TCTRL_OUT_TRIG_EN_BITNUM 0x00U
  #define PWM_SM1_TCTRL                 (*((volatile word *)0x0000F345))


  /*** PWM_SM1_DISMAP - PWM_SM1 Fault Disable Mapping Register; 0x0000F346 ***/
  union {
    word Word;
  } PWM_SM1_DISMAP_STR;
  
  #define PWM_SM1_DISMAP_DISA0_MASK     0x01U
  #define PWM_SM1_DISMAP_DISA1_MASK     0x02U
  #define PWM_SM1_DISMAP_DISA2_MASK     0x04U
  #define PWM_SM1_DISMAP_DISA3_MASK     0x08U
  #define PWM_SM1_DISMAP_DISB0_MASK     0x10U
  #define PWM_SM1_DISMAP_DISB1_MASK     0x20U
  #define PWM_SM1_DISMAP_DISB2_MASK     0x40U
  #define PWM_SM1_DISMAP_DISB3_MASK     0x80U
  #define PWM_SM1_DISMAP_DISX0_MASK     0x0100U
  #define PWM_SM1_DISMAP_DISX1_MASK     0x0200U
  #define PWM_SM1_DISMAP_DISX2_MASK     0x0400U
  #define PWM_SM1_DISMAP_DISX3_MASK     0x0800U
  #define PWM_SM1_DISMAP_DISA_MASK      0x0FU
  #define PWM_SM1_DISMAP_DISA_BITNUM    0x00U
  #define PWM_SM1_DISMAP_DISB_MASK      0xF0U
  #define PWM_SM1_DISMAP_DISB_BITNUM    0x04U
  #define PWM_SM1_DISMAP_DISX_MASK      0x0F00U
  #define PWM_SM1_DISMAP_DISX_BITNUM    0x08U
  #define PWM_SM1_DISMAP                (*((volatile word *)0x0000F346))


  /*** PWM_SM1_DTCNT0 - PWM_SM1 Deadtime Count Register 0; 0x0000F347 ***/
  union {
    word Word;
  } PWM_SM1_DTCNT0_STR;
  
  #define PWM_SM1_DTCNT0_DTCNT00_MASK   0x01U
  #define PWM_SM1_DTCNT0_DTCNT01_MASK   0x02U
  #define PWM_SM1_DTCNT0_DTCNT02_MASK   0x04U
  #define PWM_SM1_DTCNT0_DTCNT03_MASK   0x08U
  #define PWM_SM1_DTCNT0_DTCNT04_MASK   0x10U
  #define PWM_SM1_DTCNT0_DTCNT05_MASK   0x20U
  #define PWM_SM1_DTCNT0_DTCNT06_MASK   0x40U
  #define PWM_SM1_DTCNT0_DTCNT07_MASK   0x80U
  #define PWM_SM1_DTCNT0_DTCNT08_MASK   0x0100U
  #define PWM_SM1_DTCNT0_DTCNT09_MASK   0x0200U
  #define PWM_SM1_DTCNT0_DTCNT010_MASK  0x0400U
  #define PWM_SM1_DTCNT0_DTCNT0_MASK    0x07FFU
  #define PWM_SM1_DTCNT0_DTCNT0_BITNUM  0x00U
  #define PWM_SM1_DTCNT0                (*((volatile word *)0x0000F347))


  /*** PWM_SM1_DTCNT1 - PWM_SM1 Deadtime Count Register 1; 0x0000F348 ***/
  union {
    word Word;
  } PWM_SM1_DTCNT1_STR;
  
  #define PWM_SM1_DTCNT1_DTCNT10_MASK   0x01U
  #define PWM_SM1_DTCNT1_DTCNT11_MASK   0x02U
  #define PWM_SM1_DTCNT1_DTCNT12_MASK   0x04U
  #define PWM_SM1_DTCNT1_DTCNT13_MASK   0x08U
  #define PWM_SM1_DTCNT1_DTCNT14_MASK   0x10U
  #define PWM_SM1_DTCNT1_DTCNT15_MASK   0x20U
  #define PWM_SM1_DTCNT1_DTCNT16_MASK   0x40U
  #define PWM_SM1_DTCNT1_DTCNT17_MASK   0x80U
  #define PWM_SM1_DTCNT1_DTCNT18_MASK   0x0100U
  #define PWM_SM1_DTCNT1_DTCNT19_MASK   0x0200U
  #define PWM_SM1_DTCNT1_DTCNT110_MASK  0x0400U
  #define PWM_SM1_DTCNT1_DTCNT1_MASK    0x07FFU
  #define PWM_SM1_DTCNT1_DTCNT1_BITNUM  0x00U
  #define PWM_SM1_DTCNT1                (*((volatile word *)0x0000F348))


  word Reserved5[23];                  /* Reserved (unused) registers */
  
  /*** PWM_SM2_CNT - PWM_SM2 Counter Register; 0x0000F360 ***/
  union {
    word Word;
  } PWM_SM2_CNT_STR;
  
  #define PWM_SM2_CNT                   (*((volatile word *)0x0000F360))


  /*** PWM_SM2_INIT - PWM_SM2 Initial Count Register; 0x0000F361 ***/
  union {
    word Word;
  } PWM_SM2_INIT_STR;
  
  #define PWM_SM2_INIT_INIT0_MASK       0x01U
  #define PWM_SM2_INIT_INIT1_MASK       0x02U
  #define PWM_SM2_INIT_INIT2_MASK       0x04U
  #define PWM_SM2_INIT_INIT3_MASK       0x08U
  #define PWM_SM2_INIT_INIT4_MASK       0x10U
  #define PWM_SM2_INIT_INIT5_MASK       0x20U
  #define PWM_SM2_INIT_INIT6_MASK       0x40U
  #define PWM_SM2_INIT_INIT7_MASK       0x80U
  #define PWM_SM2_INIT_INIT8_MASK       0x0100U
  #define PWM_SM2_INIT_INIT9_MASK       0x0200U
  #define PWM_SM2_INIT_INIT10_MASK      0x0400U
  #define PWM_SM2_INIT_INIT11_MASK      0x0800U
  #define PWM_SM2_INIT_INIT12_MASK      0x1000U
  #define PWM_SM2_INIT_INIT13_MASK      0x2000U
  #define PWM_SM2_INIT_INIT14_MASK      0x4000U
  #define PWM_SM2_INIT_INIT15_MASK      0x8000U
  #define PWM_SM2_INIT                  (*((volatile word *)0x0000F361))


  /*** PWM_SM2_CTRL2 - PWM_SM2 Control 2 Register; 0x0000F362 ***/
  union {
    word Word;
  } PWM_SM2_CTRL2_STR;
  
  #define PWM_SM2_CTRL2_CLK_SEL0_MASK   0x01U
  #define PWM_SM2_CTRL2_CLK_SEL1_MASK   0x02U
  #define PWM_SM2_CTRL2_RELOAD_SEL_MASK 0x04U
  #define PWM_SM2_CTRL2_FORCE_SEL0_MASK 0x08U
  #define PWM_SM2_CTRL2_FORCE_SEL1_MASK 0x10U
  #define PWM_SM2_CTRL2_FORCE_SEL2_MASK 0x20U
  #define PWM_SM2_CTRL2_FORCE_MASK      0x40U
  #define PWM_SM2_CTRL2_FRCEN_MASK      0x80U
  #define PWM_SM2_CTRL2_INIT_SEL0_MASK  0x0100U
  #define PWM_SM2_CTRL2_INIT_SEL1_MASK  0x0200U
  #define PWM_SM2_CTRL2_PWMX_INIT_MASK  0x0400U
  #define PWM_SM2_CTRL2_PWM45_INIT_MASK 0x0800U
  #define PWM_SM2_CTRL2_PWM23_INIT_MASK 0x1000U
  #define PWM_SM2_CTRL2_INDEP_MASK      0x2000U
  #define PWM_SM2_CTRL2_WAITEN_MASK     0x4000U
  #define PWM_SM2_CTRL2_DBGEN_MASK      0x8000U
  #define PWM_SM2_CTRL2_CLK_SEL_MASK    0x03U
  #define PWM_SM2_CTRL2_CLK_SEL_BITNUM  0x00U
  #define PWM_SM2_CTRL2_FORCE_SEL_MASK  0x38U
  #define PWM_SM2_CTRL2_FORCE_SEL_BITNUM 0x03U
  #define PWM_SM2_CTRL2_INIT_SEL_MASK   0x0300U
  #define PWM_SM2_CTRL2_INIT_SEL_BITNUM 0x08U
  #define PWM_SM2_CTRL2                 (*((volatile word *)0x0000F362))


  /*** PWM_SM2_CTRL - PWM_SM2 Control Register; 0x0000F363 ***/
  union {
    word Word;
  } PWM_SM2_CTRL_STR;
  
  #define PWM_SM2_CTRL_DBLEN_MASK       0x01U
  #define PWM_SM2_CTRL_LDMOD_MASK       0x04U
  #define PWM_SM2_CTRL_PRSC0_MASK       0x10U
  #define PWM_SM2_CTRL_PRSC1_MASK       0x20U
  #define PWM_SM2_CTRL_PRSC2_MASK       0x40U
  #define PWM_SM2_CTRL_DT0_MASK         0x0100U
  #define PWM_SM2_CTRL_DT1_MASK         0x0200U
  #define PWM_SM2_CTRL_FULL_MASK        0x0400U
  #define PWM_SM2_CTRL_HALF_MASK        0x0800U
  #define PWM_SM2_CTRL_LDFQ0_MASK       0x1000U
  #define PWM_SM2_CTRL_LDFQ1_MASK       0x2000U
  #define PWM_SM2_CTRL_LDFQ2_MASK       0x4000U
  #define PWM_SM2_CTRL_LDFQ3_MASK       0x8000U
  #define PWM_SM2_CTRL_PRSC_MASK        0x70U
  #define PWM_SM2_CTRL_PRSC_BITNUM      0x04U
  #define PWM_SM2_CTRL_DT_MASK          0x0300U
  #define PWM_SM2_CTRL_DT_BITNUM        0x08U
  #define PWM_SM2_CTRL_LDFQ_MASK        0xF000U
  #define PWM_SM2_CTRL_LDFQ_BITNUM      0x0CU
  #define PWM_SM2_CTRL                  (*((volatile word *)0x0000F363))


  word Reserved6[1];                   /* Reserved (unused) registers */
  
  /*** PWM_SM2_VAL0 - PWM_SM2 Value Register 0; 0x0000F365 ***/
  union {
    word Word;
  } PWM_SM2_VAL0_STR;
  
  #define PWM_SM2_VAL0_VAL00_MASK       0x01U
  #define PWM_SM2_VAL0_VAL01_MASK       0x02U
  #define PWM_SM2_VAL0_VAL02_MASK       0x04U
  #define PWM_SM2_VAL0_VAL03_MASK       0x08U
  #define PWM_SM2_VAL0_VAL04_MASK       0x10U
  #define PWM_SM2_VAL0_VAL05_MASK       0x20U
  #define PWM_SM2_VAL0_VAL06_MASK       0x40U
  #define PWM_SM2_VAL0_VAL07_MASK       0x80U
  #define PWM_SM2_VAL0_VAL08_MASK       0x0100U
  #define PWM_SM2_VAL0_VAL09_MASK       0x0200U
  #define PWM_SM2_VAL0_VAL010_MASK      0x0400U
  #define PWM_SM2_VAL0_VAL011_MASK      0x0800U
  #define PWM_SM2_VAL0_VAL012_MASK      0x1000U
  #define PWM_SM2_VAL0_VAL013_MASK      0x2000U
  #define PWM_SM2_VAL0_VAL014_MASK      0x4000U
  #define PWM_SM2_VAL0_VAL015_MASK      0x8000U
  #define PWM_SM2_VAL0                  (*((volatile word *)0x0000F365))


  /*** PWM_SM2_FRACVAL1 - PWM_SM2 Fractional Value Register 1; 0x0000F366 ***/
  union {
    word Word;
  } PWM_SM2_FRACVAL1_STR;
  
  #define PWM_SM2_FRACVAL1_FRACVAL10_MASK 0x0800U
  #define PWM_SM2_FRACVAL1_FRACVAL11_MASK 0x1000U
  #define PWM_SM2_FRACVAL1_FRACVAL12_MASK 0x2000U
  #define PWM_SM2_FRACVAL1_FRACVAL13_MASK 0x4000U
  #define PWM_SM2_FRACVAL1_FRACVAL14_MASK 0x8000U
  #define PWM_SM2_FRACVAL1_FRACVAL1_MASK 0xF800U
  #define PWM_SM2_FRACVAL1_FRACVAL1_BITNUM 0x0BU
  #define PWM_SM2_FRACVAL1              (*((volatile word *)0x0000F366))


  /*** PWM_SM2_VAL1 - PWM_SM2 Value Register 1; 0x0000F367 ***/
  union {
    word Word;
  } PWM_SM2_VAL1_STR;
  
  #define PWM_SM2_VAL1_VAL10_MASK       0x01U
  #define PWM_SM2_VAL1_VAL11_MASK       0x02U
  #define PWM_SM2_VAL1_VAL12_MASK       0x04U
  #define PWM_SM2_VAL1_VAL13_MASK       0x08U
  #define PWM_SM2_VAL1_VAL14_MASK       0x10U
  #define PWM_SM2_VAL1_VAL15_MASK       0x20U
  #define PWM_SM2_VAL1_VAL16_MASK       0x40U
  #define PWM_SM2_VAL1_VAL17_MASK       0x80U
  #define PWM_SM2_VAL1_VAL18_MASK       0x0100U
  #define PWM_SM2_VAL1_VAL19_MASK       0x0200U
  #define PWM_SM2_VAL1_VAL110_MASK      0x0400U
  #define PWM_SM2_VAL1_VAL111_MASK      0x0800U
  #define PWM_SM2_VAL1_VAL112_MASK      0x1000U
  #define PWM_SM2_VAL1_VAL113_MASK      0x2000U
  #define PWM_SM2_VAL1_VAL114_MASK      0x4000U
  #define PWM_SM2_VAL1_VAL115_MASK      0x8000U
  #define PWM_SM2_VAL1                  (*((volatile word *)0x0000F367))


  /*** PWM_SM2_FRACVAL2 - PWM_SM2 Fractional Value Register 2; 0x0000F368 ***/
  union {
    word Word;
  } PWM_SM2_FRACVAL2_STR;
  
  #define PWM_SM2_FRACVAL2_FRACVAL20_MASK 0x0800U
  #define PWM_SM2_FRACVAL2_FRACVAL21_MASK 0x1000U
  #define PWM_SM2_FRACVAL2_FRACVAL22_MASK 0x2000U
  #define PWM_SM2_FRACVAL2_FRACVAL23_MASK 0x4000U
  #define PWM_SM2_FRACVAL2_FRACVAL24_MASK 0x8000U
  #define PWM_SM2_FRACVAL2_FRACVAL2_MASK 0xF800U
  #define PWM_SM2_FRACVAL2_FRACVAL2_BITNUM 0x0BU
  #define PWM_SM2_FRACVAL2              (*((volatile word *)0x0000F368))


  /*** PWM_SM2_VAL2 - PWM_SM2 Value Register 2; 0x0000F369 ***/
  union {
    word Word;
  } PWM_SM2_VAL2_STR;
  
  #define PWM_SM2_VAL2                  (*((volatile word *)0x0000F369))


  /*** PWM_SM2_FRACVAL3 - PWM_SM2 Fractional Value Register 3; 0x0000F36A ***/
  union {
    word Word;
  } PWM_SM2_FRACVAL3_STR;
  
  #define PWM_SM2_FRACVAL3_FRACVAL30_MASK 0x0800U
  #define PWM_SM2_FRACVAL3_FRACVAL31_MASK 0x1000U
  #define PWM_SM2_FRACVAL3_FRACVAL32_MASK 0x2000U
  #define PWM_SM2_FRACVAL3_FRACVAL33_MASK 0x4000U
  #define PWM_SM2_FRACVAL3_FRACVAL34_MASK 0x8000U
  #define PWM_SM2_FRACVAL3_FRACVAL3_MASK 0xF800U
  #define PWM_SM2_FRACVAL3_FRACVAL3_BITNUM 0x0BU
  #define PWM_SM2_FRACVAL3              (*((volatile word *)0x0000F36A))


  /*** PWM_SM2_VAL3 - PWM_SM2 Value Register 3; 0x0000F36B ***/
  union {
    word Word;
  } PWM_SM2_VAL3_STR;
  
  #define PWM_SM2_VAL3_VAL30_MASK       0x01U
  #define PWM_SM2_VAL3_VAL31_MASK       0x02U
  #define PWM_SM2_VAL3_VAL32_MASK       0x04U
  #define PWM_SM2_VAL3_VAL33_MASK       0x08U
  #define PWM_SM2_VAL3_VAL34_MASK       0x10U
  #define PWM_SM2_VAL3_VAL35_MASK       0x20U
  #define PWM_SM2_VAL3_VAL36_MASK       0x40U
  #define PWM_SM2_VAL3_VAL37_MASK       0x80U
  #define PWM_SM2_VAL3_VAL38_MASK       0x0100U
  #define PWM_SM2_VAL3_VAL39_MASK       0x0200U
  #define PWM_SM2_VAL3_VAL310_MASK      0x0400U
  #define PWM_SM2_VAL3_VAL311_MASK      0x0800U
  #define PWM_SM2_VAL3_VAL312_MASK      0x1000U
  #define PWM_SM2_VAL3_VAL313_MASK      0x2000U
  #define PWM_SM2_VAL3_VAL314_MASK      0x4000U
  #define PWM_SM2_VAL3_VAL315_MASK      0x8000U
  #define PWM_SM2_VAL3                  (*((volatile word *)0x0000F36B))


  /*** PWM_SM2_FRACVAL4 - PWM_SM2 Fractional Value Register 4; 0x0000F36C ***/
  union {
    word Word;
  } PWM_SM2_FRACVAL4_STR;
  
  #define PWM_SM2_FRACVAL4_FRACVAL40_MASK 0x0800U
  #define PWM_SM2_FRACVAL4_FRACVAL41_MASK 0x1000U
  #define PWM_SM2_FRACVAL4_FRACVAL42_MASK 0x2000U
  #define PWM_SM2_FRACVAL4_FRACVAL43_MASK 0x4000U
  #define PWM_SM2_FRACVAL4_FRACVAL44_MASK 0x8000U
  #define PWM_SM2_FRACVAL4_FRACVAL4_MASK 0xF800U
  #define PWM_SM2_FRACVAL4_FRACVAL4_BITNUM 0x0BU
  #define PWM_SM2_FRACVAL4              (*((volatile word *)0x0000F36C))


  /*** PWM_SM2_VAL4 - PWM_SM2 Value Register 4; 0x0000F36D ***/
  union {
    word Word;
  } PWM_SM2_VAL4_STR;
  
  #define PWM_SM2_VAL4                  (*((volatile word *)0x0000F36D))


  /*** PWM_SM2_FRACVAL5 - PWM_SM2 Fractional Value Register 5; 0x0000F36E ***/
  union {
    word Word;
  } PWM_SM2_FRACVAL5_STR;
  
  #define PWM_SM2_FRACVAL5_FRACVAL50_MASK 0x0800U
  #define PWM_SM2_FRACVAL5_FRACVAL51_MASK 0x1000U
  #define PWM_SM2_FRACVAL5_FRACVAL52_MASK 0x2000U
  #define PWM_SM2_FRACVAL5_FRACVAL53_MASK 0x4000U
  #define PWM_SM2_FRACVAL5_FRACVAL54_MASK 0x8000U
  #define PWM_SM2_FRACVAL5_FRACVAL5_MASK 0xF800U
  #define PWM_SM2_FRACVAL5_FRACVAL5_BITNUM 0x0BU
  #define PWM_SM2_FRACVAL5              (*((volatile word *)0x0000F36E))


  /*** PWM_SM2_VAL5 - PWM_SM2 Value Register 5; 0x0000F36F ***/
  union {
    word Word;
  } PWM_SM2_VAL5_STR;
  
  #define PWM_SM2_VAL5_VAL50_MASK       0x01U
  #define PWM_SM2_VAL5_VAL51_MASK       0x02U
  #define PWM_SM2_VAL5_VAL52_MASK       0x04U
  #define PWM_SM2_VAL5_VAL53_MASK       0x08U
  #define PWM_SM2_VAL5_VAL54_MASK       0x10U
  #define PWM_SM2_VAL5_VAL55_MASK       0x20U
  #define PWM_SM2_VAL5_VAL56_MASK       0x40U
  #define PWM_SM2_VAL5_VAL57_MASK       0x80U
  #define PWM_SM2_VAL5_VAL58_MASK       0x0100U
  #define PWM_SM2_VAL5_VAL59_MASK       0x0200U
  #define PWM_SM2_VAL5_VAL510_MASK      0x0400U
  #define PWM_SM2_VAL5_VAL511_MASK      0x0800U
  #define PWM_SM2_VAL5_VAL512_MASK      0x1000U
  #define PWM_SM2_VAL5_VAL513_MASK      0x2000U
  #define PWM_SM2_VAL5_VAL514_MASK      0x4000U
  #define PWM_SM2_VAL5_VAL515_MASK      0x8000U
  #define PWM_SM2_VAL5                  (*((volatile word *)0x0000F36F))


  /*** PWM_SM2_FRCTRL - PWM_SM2 Fractional Control Register; 0x0000F370 ***/
  union {
    word Word;
  } PWM_SM2_FRCTRL_STR;
  
  #define PWM_SM2_FRCTRL_FRAC1_EN_MASK  0x02U
  #define PWM_SM2_FRCTRL_FRAC23_EN_MASK 0x04U
  #define PWM_SM2_FRCTRL_FRAC45_EN_MASK 0x10U
  #define PWM_SM2_FRCTRL_FRAC_PU_MASK   0x0100U
  #define PWM_SM2_FRCTRL                (*((volatile word *)0x0000F370))


  /*** PWM_SM2_OCTRL - PWM_SM2 Output Control Register; 0x0000F371 ***/
  union {
    word Word;
  } PWM_SM2_OCTRL_STR;
  
  #define PWM_SM2_OCTRL_PWMXFS0_MASK    0x01U
  #define PWM_SM2_OCTRL_PWMXFS1_MASK    0x02U
  #define PWM_SM2_OCTRL_PWMBFS0_MASK    0x04U
  #define PWM_SM2_OCTRL_PWMBFS1_MASK    0x08U
  #define PWM_SM2_OCTRL_PWMAFS0_MASK    0x10U
  #define PWM_SM2_OCTRL_PWMAFS1_MASK    0x20U
  #define PWM_SM2_OCTRL_POLX_MASK       0x0100U
  #define PWM_SM2_OCTRL_POLB_MASK       0x0200U
  #define PWM_SM2_OCTRL_POLA_MASK       0x0400U
  #define PWM_SM2_OCTRL_PWMX_IN_MASK    0x2000U
  #define PWM_SM2_OCTRL_PWMB_IN_MASK    0x4000U
  #define PWM_SM2_OCTRL_PWMA_IN_MASK    0x8000U
  #define PWM_SM2_OCTRL_PWMXFS_MASK     0x03U
  #define PWM_SM2_OCTRL_PWMXFS_BITNUM   0x00U
  #define PWM_SM2_OCTRL_PWMBFS_MASK     0x0CU
  #define PWM_SM2_OCTRL_PWMBFS_BITNUM   0x02U
  #define PWM_SM2_OCTRL_PWMAFS_MASK     0x30U
  #define PWM_SM2_OCTRL_PWMAFS_BITNUM   0x04U
  #define PWM_SM2_OCTRL                 (*((volatile word *)0x0000F371))


  /*** PWM_SM2_STS - PWM_SM2 Status Register; 0x0000F372 ***/
  union {
    word Word;
  } PWM_SM2_STS_STR;
  
  #define PWM_SM2_STS_CMPF0_MASK        0x01U
  #define PWM_SM2_STS_CMPF1_MASK        0x02U
  #define PWM_SM2_STS_CMPF2_MASK        0x04U
  #define PWM_SM2_STS_CMPF3_MASK        0x08U
  #define PWM_SM2_STS_CMPF4_MASK        0x10U
  #define PWM_SM2_STS_CMPF5_MASK        0x20U
  #define PWM_SM2_STS_CFX0_MASK         0x40U
  #define PWM_SM2_STS_CFX1_MASK         0x80U
  #define PWM_SM2_STS_CFB0_MASK         0x0100U
  #define PWM_SM2_STS_CFB1_MASK         0x0200U
  #define PWM_SM2_STS_CFA0_MASK         0x0400U
  #define PWM_SM2_STS_CFA1_MASK         0x0800U
  #define PWM_SM2_STS_RF_MASK           0x1000U
  #define PWM_SM2_STS_REF_MASK          0x2000U
  #define PWM_SM2_STS_RUF_MASK          0x4000U
  #define PWM_SM2_STS_CMPF_MASK         0x3FU
  #define PWM_SM2_STS_CMPF_BITNUM       0x00U
  #define PWM_SM2_STS_CFX_MASK          0xC0U
  #define PWM_SM2_STS_CFX_BITNUM        0x06U
  #define PWM_SM2_STS_CFB_MASK          0x0300U
  #define PWM_SM2_STS_CFB_BITNUM        0x08U
  #define PWM_SM2_STS_CFA_MASK          0x0C00U
  #define PWM_SM2_STS_CFA_BITNUM        0x0AU
  #define PWM_SM2_STS                   (*((volatile word *)0x0000F372))


  /*** PWM_SM2_INTEN - PWM_SM2 Interrupt Enable Register; 0x0000F373 ***/
  union {
    word Word;
  } PWM_SM2_INTEN_STR;
  
  #define PWM_SM2_INTEN_CMPIE0_MASK     0x01U
  #define PWM_SM2_INTEN_CMPIE1_MASK     0x02U
  #define PWM_SM2_INTEN_CMPIE2_MASK     0x04U
  #define PWM_SM2_INTEN_CMPIE3_MASK     0x08U
  #define PWM_SM2_INTEN_CMPIE4_MASK     0x10U
  #define PWM_SM2_INTEN_CMPIE5_MASK     0x20U
  #define PWM_SM2_INTEN_CX0IE_MASK      0x40U
  #define PWM_SM2_INTEN_CX1IE_MASK      0x80U
  #define PWM_SM2_INTEN_CB0IE_MASK      0x0100U
  #define PWM_SM2_INTEN_CB1IE_MASK      0x0200U
  #define PWM_SM2_INTEN_CA0IE_MASK      0x0400U
  #define PWM_SM2_INTEN_CA1IE_MASK      0x0800U
  #define PWM_SM2_INTEN_RIE_MASK        0x1000U
  #define PWM_SM2_INTEN_REIE_MASK       0x2000U
  #define PWM_SM2_INTEN_CMPIE_MASK      0x3FU
  #define PWM_SM2_INTEN_CMPIE_BITNUM    0x00U
  #define PWM_SM2_INTEN                 (*((volatile word *)0x0000F373))


  word Reserved7[1];                   /* Reserved (unused) registers */
  
  /*** PWM_SM2_TCTRL - PWM_SM2 Output Trigger Control Register; 0x0000F375 ***/
  union {
    word Word;
  } PWM_SM2_TCTRL_STR;
  
  #define PWM_SM2_TCTRL_OUT_TRIG_EN0_MASK 0x01U
  #define PWM_SM2_TCTRL_OUT_TRIG_EN1_MASK 0x02U
  #define PWM_SM2_TCTRL_OUT_TRIG_EN2_MASK 0x04U
  #define PWM_SM2_TCTRL_OUT_TRIG_EN3_MASK 0x08U
  #define PWM_SM2_TCTRL_OUT_TRIG_EN4_MASK 0x10U
  #define PWM_SM2_TCTRL_OUT_TRIG_EN5_MASK 0x20U
  #define PWM_SM2_TCTRL_OUT_TRIG_EN_MASK 0x3FU
  #define PWM_SM2_TCTRL_OUT_TRIG_EN_BITNUM 0x00U
  #define PWM_SM2_TCTRL                 (*((volatile word *)0x0000F375))


  /*** PWM_SM2_DISMAP - PWM_SM2 Fault Disable Mapping Register; 0x0000F376 ***/
  union {
    word Word;
  } PWM_SM2_DISMAP_STR;
  
  #define PWM_SM2_DISMAP_DISA0_MASK     0x01U
  #define PWM_SM2_DISMAP_DISA1_MASK     0x02U
  #define PWM_SM2_DISMAP_DISA2_MASK     0x04U
  #define PWM_SM2_DISMAP_DISA3_MASK     0x08U
  #define PWM_SM2_DISMAP_DISB0_MASK     0x10U
  #define PWM_SM2_DISMAP_DISB1_MASK     0x20U
  #define PWM_SM2_DISMAP_DISB2_MASK     0x40U
  #define PWM_SM2_DISMAP_DISB3_MASK     0x80U
  #define PWM_SM2_DISMAP_DISX0_MASK     0x0100U
  #define PWM_SM2_DISMAP_DISX1_MASK     0x0200U
  #define PWM_SM2_DISMAP_DISX2_MASK     0x0400U
  #define PWM_SM2_DISMAP_DISX3_MASK     0x0800U
  #define PWM_SM2_DISMAP_DISA_MASK      0x0FU
  #define PWM_SM2_DISMAP_DISA_BITNUM    0x00U
  #define PWM_SM2_DISMAP_DISB_MASK      0xF0U
  #define PWM_SM2_DISMAP_DISB_BITNUM    0x04U
  #define PWM_SM2_DISMAP_DISX_MASK      0x0F00U
  #define PWM_SM2_DISMAP_DISX_BITNUM    0x08U
  #define PWM_SM2_DISMAP                (*((volatile word *)0x0000F376))


  /*** PWM_SM2_DTCNT0 - PWM_SM2 Deadtime Count Register 0; 0x0000F377 ***/
  union {
    word Word;
  } PWM_SM2_DTCNT0_STR;
  
  #define PWM_SM2_DTCNT0_DTCNT00_MASK   0x01U
  #define PWM_SM2_DTCNT0_DTCNT01_MASK   0x02U
  #define PWM_SM2_DTCNT0_DTCNT02_MASK   0x04U
  #define PWM_SM2_DTCNT0_DTCNT03_MASK   0x08U
  #define PWM_SM2_DTCNT0_DTCNT04_MASK   0x10U
  #define PWM_SM2_DTCNT0_DTCNT05_MASK   0x20U
  #define PWM_SM2_DTCNT0_DTCNT06_MASK   0x40U
  #define PWM_SM2_DTCNT0_DTCNT07_MASK   0x80U
  #define PWM_SM2_DTCNT0_DTCNT08_MASK   0x0100U
  #define PWM_SM2_DTCNT0_DTCNT09_MASK   0x0200U
  #define PWM_SM2_DTCNT0_DTCNT010_MASK  0x0400U
  #define PWM_SM2_DTCNT0_DTCNT0_MASK    0x07FFU
  #define PWM_SM2_DTCNT0_DTCNT0_BITNUM  0x00U
  #define PWM_SM2_DTCNT0                (*((volatile word *)0x0000F377))


  /*** PWM_SM2_DTCNT1 - PWM_SM2 Deadtime Count Register 1; 0x0000F378 ***/
  union {
    word Word;
  } PWM_SM2_DTCNT1_STR;
  
  #define PWM_SM2_DTCNT1_DTCNT10_MASK   0x01U
  #define PWM_SM2_DTCNT1_DTCNT11_MASK   0x02U
  #define PWM_SM2_DTCNT1_DTCNT12_MASK   0x04U
  #define PWM_SM2_DTCNT1_DTCNT13_MASK   0x08U
  #define PWM_SM2_DTCNT1_DTCNT14_MASK   0x10U
  #define PWM_SM2_DTCNT1_DTCNT15_MASK   0x20U
  #define PWM_SM2_DTCNT1_DTCNT16_MASK   0x40U
  #define PWM_SM2_DTCNT1_DTCNT17_MASK   0x80U
  #define PWM_SM2_DTCNT1_DTCNT18_MASK   0x0100U
  #define PWM_SM2_DTCNT1_DTCNT19_MASK   0x0200U
  #define PWM_SM2_DTCNT1_DTCNT110_MASK  0x0400U
  #define PWM_SM2_DTCNT1_DTCNT1_MASK    0x07FFU
  #define PWM_SM2_DTCNT1_DTCNT1_BITNUM  0x00U
  #define PWM_SM2_DTCNT1                (*((volatile word *)0x0000F378))


  word Reserved8[23];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_CNT - PWM_SM3 Counter Register; 0x0000F390 ***/
  union {
    word Word;
  } PWM_SM3_CNT_STR;
  
  #define PWM_SM3_CNT                   (*((volatile word *)0x0000F390))


  /*** PWM_SM3_INIT - PWM_SM3 Initial Count Register; 0x0000F391 ***/
  union {
    word Word;
  } PWM_SM3_INIT_STR;
  
  #define PWM_SM3_INIT_INIT0_MASK       0x01U
  #define PWM_SM3_INIT_INIT1_MASK       0x02U
  #define PWM_SM3_INIT_INIT2_MASK       0x04U
  #define PWM_SM3_INIT_INIT3_MASK       0x08U
  #define PWM_SM3_INIT_INIT4_MASK       0x10U
  #define PWM_SM3_INIT_INIT5_MASK       0x20U
  #define PWM_SM3_INIT_INIT6_MASK       0x40U
  #define PWM_SM3_INIT_INIT7_MASK       0x80U
  #define PWM_SM3_INIT_INIT8_MASK       0x0100U
  #define PWM_SM3_INIT_INIT9_MASK       0x0200U
  #define PWM_SM3_INIT_INIT10_MASK      0x0400U
  #define PWM_SM3_INIT_INIT11_MASK      0x0800U
  #define PWM_SM3_INIT_INIT12_MASK      0x1000U
  #define PWM_SM3_INIT_INIT13_MASK      0x2000U
  #define PWM_SM3_INIT_INIT14_MASK      0x4000U
  #define PWM_SM3_INIT_INIT15_MASK      0x8000U
  #define PWM_SM3_INIT                  (*((volatile word *)0x0000F391))


  /*** PWM_SM3_CTRL2 - PWM_SM3 Control 2 Register; 0x0000F392 ***/
  union {
    word Word;
  } PWM_SM3_CTRL2_STR;
  
  #define PWM_SM3_CTRL2_CLK_SEL0_MASK   0x01U
  #define PWM_SM3_CTRL2_CLK_SEL1_MASK   0x02U
  #define PWM_SM3_CTRL2_RELOAD_SEL_MASK 0x04U
  #define PWM_SM3_CTRL2_FORCE_SEL0_MASK 0x08U
  #define PWM_SM3_CTRL2_FORCE_SEL1_MASK 0x10U
  #define PWM_SM3_CTRL2_FORCE_SEL2_MASK 0x20U
  #define PWM_SM3_CTRL2_FORCE_MASK      0x40U
  #define PWM_SM3_CTRL2_FRCEN_MASK      0x80U
  #define PWM_SM3_CTRL2_INIT_SEL0_MASK  0x0100U
  #define PWM_SM3_CTRL2_INIT_SEL1_MASK  0x0200U
  #define PWM_SM3_CTRL2_PWMX_INIT_MASK  0x0400U
  #define PWM_SM3_CTRL2_PWM45_INIT_MASK 0x0800U
  #define PWM_SM3_CTRL2_PWM23_INIT_MASK 0x1000U
  #define PWM_SM3_CTRL2_INDEP_MASK      0x2000U
  #define PWM_SM3_CTRL2_WAITEN_MASK     0x4000U
  #define PWM_SM3_CTRL2_DBGEN_MASK      0x8000U
  #define PWM_SM3_CTRL2_CLK_SEL_MASK    0x03U
  #define PWM_SM3_CTRL2_CLK_SEL_BITNUM  0x00U
  #define PWM_SM3_CTRL2_FORCE_SEL_MASK  0x38U
  #define PWM_SM3_CTRL2_FORCE_SEL_BITNUM 0x03U
  #define PWM_SM3_CTRL2_INIT_SEL_MASK   0x0300U
  #define PWM_SM3_CTRL2_INIT_SEL_BITNUM 0x08U
  #define PWM_SM3_CTRL2                 (*((volatile word *)0x0000F392))


  /*** PWM_SM3_CTRL - PWM_SM3 Control Register; 0x0000F393 ***/
  union {
    word Word;
  } PWM_SM3_CTRL_STR;
  
  #define PWM_SM3_CTRL_DBLEN_MASK       0x01U
  #define PWM_SM3_CTRL_LDMOD_MASK       0x04U
  #define PWM_SM3_CTRL_PRSC0_MASK       0x10U
  #define PWM_SM3_CTRL_PRSC1_MASK       0x20U
  #define PWM_SM3_CTRL_PRSC2_MASK       0x40U
  #define PWM_SM3_CTRL_DT0_MASK         0x0100U
  #define PWM_SM3_CTRL_DT1_MASK         0x0200U
  #define PWM_SM3_CTRL_FULL_MASK        0x0400U
  #define PWM_SM3_CTRL_HALF_MASK        0x0800U
  #define PWM_SM3_CTRL_LDFQ0_MASK       0x1000U
  #define PWM_SM3_CTRL_LDFQ1_MASK       0x2000U
  #define PWM_SM3_CTRL_LDFQ2_MASK       0x4000U
  #define PWM_SM3_CTRL_LDFQ3_MASK       0x8000U
  #define PWM_SM3_CTRL_PRSC_MASK        0x70U
  #define PWM_SM3_CTRL_PRSC_BITNUM      0x04U
  #define PWM_SM3_CTRL_DT_MASK          0x0300U
  #define PWM_SM3_CTRL_DT_BITNUM        0x08U
  #define PWM_SM3_CTRL_LDFQ_MASK        0xF000U
  #define PWM_SM3_CTRL_LDFQ_BITNUM      0x0CU
  #define PWM_SM3_CTRL                  (*((volatile word *)0x0000F393))


  word Reserved9[1];                   /* Reserved (unused) registers */
  
  /*** PWM_SM3_VAL0 - PWM_SM3 Value Register 0; 0x0000F395 ***/
  union {
    word Word;
  } PWM_SM3_VAL0_STR;
  
  #define PWM_SM3_VAL0_VAL00_MASK       0x01U
  #define PWM_SM3_VAL0_VAL01_MASK       0x02U
  #define PWM_SM3_VAL0_VAL02_MASK       0x04U
  #define PWM_SM3_VAL0_VAL03_MASK       0x08U
  #define PWM_SM3_VAL0_VAL04_MASK       0x10U
  #define PWM_SM3_VAL0_VAL05_MASK       0x20U
  #define PWM_SM3_VAL0_VAL06_MASK       0x40U
  #define PWM_SM3_VAL0_VAL07_MASK       0x80U
  #define PWM_SM3_VAL0_VAL08_MASK       0x0100U
  #define PWM_SM3_VAL0_VAL09_MASK       0x0200U
  #define PWM_SM3_VAL0_VAL010_MASK      0x0400U
  #define PWM_SM3_VAL0_VAL011_MASK      0x0800U
  #define PWM_SM3_VAL0_VAL012_MASK      0x1000U
  #define PWM_SM3_VAL0_VAL013_MASK      0x2000U
  #define PWM_SM3_VAL0_VAL014_MASK      0x4000U
  #define PWM_SM3_VAL0_VAL015_MASK      0x8000U
  #define PWM_SM3_VAL0                  (*((volatile word *)0x0000F395))


  word Reserved10[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_VAL1 - PWM_SM3 Value Register 1; 0x0000F397 ***/
  union {
    word Word;
  } PWM_SM3_VAL1_STR;
  
  #define PWM_SM3_VAL1_VAL10_MASK       0x01U
  #define PWM_SM3_VAL1_VAL11_MASK       0x02U
  #define PWM_SM3_VAL1_VAL12_MASK       0x04U
  #define PWM_SM3_VAL1_VAL13_MASK       0x08U
  #define PWM_SM3_VAL1_VAL14_MASK       0x10U
  #define PWM_SM3_VAL1_VAL15_MASK       0x20U
  #define PWM_SM3_VAL1_VAL16_MASK       0x40U
  #define PWM_SM3_VAL1_VAL17_MASK       0x80U
  #define PWM_SM3_VAL1_VAL18_MASK       0x0100U
  #define PWM_SM3_VAL1_VAL19_MASK       0x0200U
  #define PWM_SM3_VAL1_VAL110_MASK      0x0400U
  #define PWM_SM3_VAL1_VAL111_MASK      0x0800U
  #define PWM_SM3_VAL1_VAL112_MASK      0x1000U
  #define PWM_SM3_VAL1_VAL113_MASK      0x2000U
  #define PWM_SM3_VAL1_VAL114_MASK      0x4000U
  #define PWM_SM3_VAL1_VAL115_MASK      0x8000U
  #define PWM_SM3_VAL1                  (*((volatile word *)0x0000F397))


  word Reserved11[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_VAL2 - PWM_SM3 Value Register 2; 0x0000F399 ***/
  union {
    word Word;
  } PWM_SM3_VAL2_STR;
  
  #define PWM_SM3_VAL2                  (*((volatile word *)0x0000F399))


  word Reserved12[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_VAL3 - PWM_SM3 Value Register 3; 0x0000F39B ***/
  union {
    word Word;
  } PWM_SM3_VAL3_STR;
  
  #define PWM_SM3_VAL3_VAL30_MASK       0x01U
  #define PWM_SM3_VAL3_VAL31_MASK       0x02U
  #define PWM_SM3_VAL3_VAL32_MASK       0x04U
  #define PWM_SM3_VAL3_VAL33_MASK       0x08U
  #define PWM_SM3_VAL3_VAL34_MASK       0x10U
  #define PWM_SM3_VAL3_VAL35_MASK       0x20U
  #define PWM_SM3_VAL3_VAL36_MASK       0x40U
  #define PWM_SM3_VAL3_VAL37_MASK       0x80U
  #define PWM_SM3_VAL3_VAL38_MASK       0x0100U
  #define PWM_SM3_VAL3_VAL39_MASK       0x0200U
  #define PWM_SM3_VAL3_VAL310_MASK      0x0400U
  #define PWM_SM3_VAL3_VAL311_MASK      0x0800U
  #define PWM_SM3_VAL3_VAL312_MASK      0x1000U
  #define PWM_SM3_VAL3_VAL313_MASK      0x2000U
  #define PWM_SM3_VAL3_VAL314_MASK      0x4000U
  #define PWM_SM3_VAL3_VAL315_MASK      0x8000U
  #define PWM_SM3_VAL3                  (*((volatile word *)0x0000F39B))


  word Reserved13[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_VAL4 - PWM_SM3 Value Register 4; 0x0000F39D ***/
  union {
    word Word;
  } PWM_SM3_VAL4_STR;
  
  #define PWM_SM3_VAL4                  (*((volatile word *)0x0000F39D))


  word Reserved14[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_VAL5 - PWM_SM3 Value Register 5; 0x0000F39F ***/
  union {
    word Word;
  } PWM_SM3_VAL5_STR;
  
  #define PWM_SM3_VAL5_VAL50_MASK       0x01U
  #define PWM_SM3_VAL5_VAL51_MASK       0x02U
  #define PWM_SM3_VAL5_VAL52_MASK       0x04U
  #define PWM_SM3_VAL5_VAL53_MASK       0x08U
  #define PWM_SM3_VAL5_VAL54_MASK       0x10U
  #define PWM_SM3_VAL5_VAL55_MASK       0x20U
  #define PWM_SM3_VAL5_VAL56_MASK       0x40U
  #define PWM_SM3_VAL5_VAL57_MASK       0x80U
  #define PWM_SM3_VAL5_VAL58_MASK       0x0100U
  #define PWM_SM3_VAL5_VAL59_MASK       0x0200U
  #define PWM_SM3_VAL5_VAL510_MASK      0x0400U
  #define PWM_SM3_VAL5_VAL511_MASK      0x0800U
  #define PWM_SM3_VAL5_VAL512_MASK      0x1000U
  #define PWM_SM3_VAL5_VAL513_MASK      0x2000U
  #define PWM_SM3_VAL5_VAL514_MASK      0x4000U
  #define PWM_SM3_VAL5_VAL515_MASK      0x8000U
  #define PWM_SM3_VAL5                  (*((volatile word *)0x0000F39F))


  word Reserved15[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_OCTRL - PWM_SM3 Output Control Register; 0x0000F3A1 ***/
  union {
    word Word;
  } PWM_SM3_OCTRL_STR;
  
  #define PWM_SM3_OCTRL_PWMXFS0_MASK    0x01U
  #define PWM_SM3_OCTRL_PWMXFS1_MASK    0x02U
  #define PWM_SM3_OCTRL_PWMBFS0_MASK    0x04U
  #define PWM_SM3_OCTRL_PWMBFS1_MASK    0x08U
  #define PWM_SM3_OCTRL_PWMAFS0_MASK    0x10U
  #define PWM_SM3_OCTRL_PWMAFS1_MASK    0x20U
  #define PWM_SM3_OCTRL_POLX_MASK       0x0100U
  #define PWM_SM3_OCTRL_POLB_MASK       0x0200U
  #define PWM_SM3_OCTRL_POLA_MASK       0x0400U
  #define PWM_SM3_OCTRL_PWMX_IN_MASK    0x2000U
  #define PWM_SM3_OCTRL_PWMB_IN_MASK    0x4000U
  #define PWM_SM3_OCTRL_PWMA_IN_MASK    0x8000U
  #define PWM_SM3_OCTRL_PWMXFS_MASK     0x03U
  #define PWM_SM3_OCTRL_PWMXFS_BITNUM   0x00U
  #define PWM_SM3_OCTRL_PWMBFS_MASK     0x0CU
  #define PWM_SM3_OCTRL_PWMBFS_BITNUM   0x02U
  #define PWM_SM3_OCTRL_PWMAFS_MASK     0x30U
  #define PWM_SM3_OCTRL_PWMAFS_BITNUM   0x04U
  #define PWM_SM3_OCTRL                 (*((volatile word *)0x0000F3A1))


  /*** PWM_SM3_STS - PWM_SM3 Status Register; 0x0000F3A2 ***/
  union {
    word Word;
  } PWM_SM3_STS_STR;
  
  #define PWM_SM3_STS_CMPF0_MASK        0x01U
  #define PWM_SM3_STS_CMPF1_MASK        0x02U
  #define PWM_SM3_STS_CMPF2_MASK        0x04U
  #define PWM_SM3_STS_CMPF3_MASK        0x08U
  #define PWM_SM3_STS_CMPF4_MASK        0x10U
  #define PWM_SM3_STS_CMPF5_MASK        0x20U
  #define PWM_SM3_STS_CFX0_MASK         0x40U
  #define PWM_SM3_STS_CFX1_MASK         0x80U
  #define PWM_SM3_STS_CFB0_MASK         0x0100U
  #define PWM_SM3_STS_CFB1_MASK         0x0200U
  #define PWM_SM3_STS_CFA0_MASK         0x0400U
  #define PWM_SM3_STS_CFA1_MASK         0x0800U
  #define PWM_SM3_STS_RF_MASK           0x1000U
  #define PWM_SM3_STS_REF_MASK          0x2000U
  #define PWM_SM3_STS_RUF_MASK          0x4000U
  #define PWM_SM3_STS_CMPF_MASK         0x3FU
  #define PWM_SM3_STS_CMPF_BITNUM       0x00U
  #define PWM_SM3_STS_CFX_MASK          0xC0U
  #define PWM_SM3_STS_CFX_BITNUM        0x06U
  #define PWM_SM3_STS_CFB_MASK          0x0300U
  #define PWM_SM3_STS_CFB_BITNUM        0x08U
  #define PWM_SM3_STS_CFA_MASK          0x0C00U
  #define PWM_SM3_STS_CFA_BITNUM        0x0AU
  #define PWM_SM3_STS                   (*((volatile word *)0x0000F3A2))


  /*** PWM_SM3_INTEN - PWM_SM3 Interrupt Enable Register; 0x0000F3A3 ***/
  union {
    word Word;
  } PWM_SM3_INTEN_STR;
  
  #define PWM_SM3_INTEN_CMPIE0_MASK     0x01U
  #define PWM_SM3_INTEN_CMPIE1_MASK     0x02U
  #define PWM_SM3_INTEN_CMPIE2_MASK     0x04U
  #define PWM_SM3_INTEN_CMPIE3_MASK     0x08U
  #define PWM_SM3_INTEN_CMPIE4_MASK     0x10U
  #define PWM_SM3_INTEN_CMPIE5_MASK     0x20U
  #define PWM_SM3_INTEN_CX0IE_MASK      0x40U
  #define PWM_SM3_INTEN_CX1IE_MASK      0x80U
  #define PWM_SM3_INTEN_CB0IE_MASK      0x0100U
  #define PWM_SM3_INTEN_CB1IE_MASK      0x0200U
  #define PWM_SM3_INTEN_CA0IE_MASK      0x0400U
  #define PWM_SM3_INTEN_CA1IE_MASK      0x0800U
  #define PWM_SM3_INTEN_RIE_MASK        0x1000U
  #define PWM_SM3_INTEN_REIE_MASK       0x2000U
  #define PWM_SM3_INTEN_CMPIE_MASK      0x3FU
  #define PWM_SM3_INTEN_CMPIE_BITNUM    0x00U
  #define PWM_SM3_INTEN                 (*((volatile word *)0x0000F3A3))


  word Reserved16[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_TCTRL - PWM_SM3 Output Trigger Control Register; 0x0000F3A5 ***/
  union {
    word Word;
  } PWM_SM3_TCTRL_STR;
  
  #define PWM_SM3_TCTRL_OUT_TRIG_EN0_MASK 0x01U
  #define PWM_SM3_TCTRL_OUT_TRIG_EN1_MASK 0x02U
  #define PWM_SM3_TCTRL_OUT_TRIG_EN2_MASK 0x04U
  #define PWM_SM3_TCTRL_OUT_TRIG_EN3_MASK 0x08U
  #define PWM_SM3_TCTRL_OUT_TRIG_EN4_MASK 0x10U
  #define PWM_SM3_TCTRL_OUT_TRIG_EN5_MASK 0x20U
  #define PWM_SM3_TCTRL_OUT_TRIG_EN_MASK 0x3FU
  #define PWM_SM3_TCTRL_OUT_TRIG_EN_BITNUM 0x00U
  #define PWM_SM3_TCTRL                 (*((volatile word *)0x0000F3A5))


  /*** PWM_SM3_DISMAP - PWM_SM3 Fault Disable Mapping Register; 0x0000F3A6 ***/
  union {
    word Word;
  } PWM_SM3_DISMAP_STR;
  
  #define PWM_SM3_DISMAP_DISA0_MASK     0x01U
  #define PWM_SM3_DISMAP_DISA1_MASK     0x02U
  #define PWM_SM3_DISMAP_DISA2_MASK     0x04U
  #define PWM_SM3_DISMAP_DISA3_MASK     0x08U
  #define PWM_SM3_DISMAP_DISB0_MASK     0x10U
  #define PWM_SM3_DISMAP_DISB1_MASK     0x20U
  #define PWM_SM3_DISMAP_DISB2_MASK     0x40U
  #define PWM_SM3_DISMAP_DISB3_MASK     0x80U
  #define PWM_SM3_DISMAP_DISX0_MASK     0x0100U
  #define PWM_SM3_DISMAP_DISX1_MASK     0x0200U
  #define PWM_SM3_DISMAP_DISX2_MASK     0x0400U
  #define PWM_SM3_DISMAP_DISX3_MASK     0x0800U
  #define PWM_SM3_DISMAP_DISA_MASK      0x0FU
  #define PWM_SM3_DISMAP_DISA_BITNUM    0x00U
  #define PWM_SM3_DISMAP_DISB_MASK      0xF0U
  #define PWM_SM3_DISMAP_DISB_BITNUM    0x04U
  #define PWM_SM3_DISMAP_DISX_MASK      0x0F00U
  #define PWM_SM3_DISMAP_DISX_BITNUM    0x08U
  #define PWM_SM3_DISMAP                (*((volatile word *)0x0000F3A6))


  /*** PWM_SM3_DTCNT0 - PWM_SM3 Deadtime Count Register 0; 0x0000F3A7 ***/
  union {
    word Word;
  } PWM_SM3_DTCNT0_STR;
  
  #define PWM_SM3_DTCNT0_DTCNT00_MASK   0x01U
  #define PWM_SM3_DTCNT0_DTCNT01_MASK   0x02U
  #define PWM_SM3_DTCNT0_DTCNT02_MASK   0x04U
  #define PWM_SM3_DTCNT0_DTCNT03_MASK   0x08U
  #define PWM_SM3_DTCNT0_DTCNT04_MASK   0x10U
  #define PWM_SM3_DTCNT0_DTCNT05_MASK   0x20U
  #define PWM_SM3_DTCNT0_DTCNT06_MASK   0x40U
  #define PWM_SM3_DTCNT0_DTCNT07_MASK   0x80U
  #define PWM_SM3_DTCNT0_DTCNT08_MASK   0x0100U
  #define PWM_SM3_DTCNT0_DTCNT09_MASK   0x0200U
  #define PWM_SM3_DTCNT0_DTCNT010_MASK  0x0400U
  #define PWM_SM3_DTCNT0_DTCNT0_MASK    0x07FFU
  #define PWM_SM3_DTCNT0_DTCNT0_BITNUM  0x00U
  #define PWM_SM3_DTCNT0                (*((volatile word *)0x0000F3A7))


  /*** PWM_SM3_DTCNT1 - PWM_SM3 Deadtime Count Register 1; 0x0000F3A8 ***/
  union {
    word Word;
  } PWM_SM3_DTCNT1_STR;
  
  #define PWM_SM3_DTCNT1_DTCNT10_MASK   0x01U
  #define PWM_SM3_DTCNT1_DTCNT11_MASK   0x02U
  #define PWM_SM3_DTCNT1_DTCNT12_MASK   0x04U
  #define PWM_SM3_DTCNT1_DTCNT13_MASK   0x08U
  #define PWM_SM3_DTCNT1_DTCNT14_MASK   0x10U
  #define PWM_SM3_DTCNT1_DTCNT15_MASK   0x20U
  #define PWM_SM3_DTCNT1_DTCNT16_MASK   0x40U
  #define PWM_SM3_DTCNT1_DTCNT17_MASK   0x80U
  #define PWM_SM3_DTCNT1_DTCNT18_MASK   0x0100U
  #define PWM_SM3_DTCNT1_DTCNT19_MASK   0x0200U
  #define PWM_SM3_DTCNT1_DTCNT110_MASK  0x0400U
  #define PWM_SM3_DTCNT1_DTCNT1_MASK    0x07FFU
  #define PWM_SM3_DTCNT1_DTCNT1_BITNUM  0x00U
  #define PWM_SM3_DTCNT1                (*((volatile word *)0x0000F3A8))


  word Reserved17[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_CAPTCTRLA - PWM_SM3 Capture Control Register A; 0x0000F3AA ***/
  union {
    word Word;
  } PWM_SM3_CAPTCTRLA_STR;
  
  #define PWM_SM3_CAPTCTRLA_ARMA_MASK   0x01U
  #define PWM_SM3_CAPTCTRLA_ONESHOTA_MASK 0x02U
  #define PWM_SM3_CAPTCTRLA_EDGA00_MASK 0x04U
  #define PWM_SM3_CAPTCTRLA_EDGA01_MASK 0x08U
  #define PWM_SM3_CAPTCTRLA_EDGA10_MASK 0x10U
  #define PWM_SM3_CAPTCTRLA_EDGA11_MASK 0x20U
  #define PWM_SM3_CAPTCTRLA_INP_SELA_MASK 0x40U
  #define PWM_SM3_CAPTCTRLA_EDGCNTA_EN_MASK 0x80U
  #define PWM_SM3_CAPTCTRLA_CFAWM0_MASK 0x0100U
  #define PWM_SM3_CAPTCTRLA_CFAWM1_MASK 0x0200U
  #define PWM_SM3_CAPTCTRLA_CA0CNT0_MASK 0x0400U
  #define PWM_SM3_CAPTCTRLA_CA0CNT1_MASK 0x0800U
  #define PWM_SM3_CAPTCTRLA_CA0CNT2_MASK 0x1000U
  #define PWM_SM3_CAPTCTRLA_CA1CNT0_MASK 0x2000U
  #define PWM_SM3_CAPTCTRLA_CA1CNT1_MASK 0x4000U
  #define PWM_SM3_CAPTCTRLA_CA1CNT2_MASK 0x8000U
  #define PWM_SM3_CAPTCTRLA_EDGA0_MASK  0x0CU
  #define PWM_SM3_CAPTCTRLA_EDGA0_BITNUM 0x02U
  #define PWM_SM3_CAPTCTRLA_EDGA1_MASK  0x30U
  #define PWM_SM3_CAPTCTRLA_EDGA1_BITNUM 0x04U
  #define PWM_SM3_CAPTCTRLA_CFAWM_MASK  0x0300U
  #define PWM_SM3_CAPTCTRLA_CFAWM_BITNUM 0x08U
  #define PWM_SM3_CAPTCTRLA_CA0CNT_MASK 0x1C00U
  #define PWM_SM3_CAPTCTRLA_CA0CNT_BITNUM 0x0AU
  #define PWM_SM3_CAPTCTRLA_CA1CNT_MASK 0xE000U
  #define PWM_SM3_CAPTCTRLA_CA1CNT_BITNUM 0x0DU
  #define PWM_SM3_CAPTCTRLA             (*((volatile word *)0x0000F3AA))


  /*** PWM_SM3_CAPTCOMPA - PWM_SM3 Capture Compare Register A; 0x0000F3AB ***/
  union {
    word Word;
  } PWM_SM3_CAPTCOMPA_STR;
  
  #define PWM_SM3_CAPTCOMPA_EDGCMPA0_MASK 0x01U
  #define PWM_SM3_CAPTCOMPA_EDGCMPA1_MASK 0x02U
  #define PWM_SM3_CAPTCOMPA_EDGCMPA2_MASK 0x04U
  #define PWM_SM3_CAPTCOMPA_EDGCMPA3_MASK 0x08U
  #define PWM_SM3_CAPTCOMPA_EDGCMPA4_MASK 0x10U
  #define PWM_SM3_CAPTCOMPA_EDGCMPA5_MASK 0x20U
  #define PWM_SM3_CAPTCOMPA_EDGCMPA6_MASK 0x40U
  #define PWM_SM3_CAPTCOMPA_EDGCMPA7_MASK 0x80U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA0_MASK 0x0100U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA1_MASK 0x0200U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA2_MASK 0x0400U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA3_MASK 0x0800U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA4_MASK 0x1000U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA5_MASK 0x2000U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA6_MASK 0x4000U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA7_MASK 0x8000U
  #define PWM_SM3_CAPTCOMPA_EDGCMPA_MASK 0xFFU
  #define PWM_SM3_CAPTCOMPA_EDGCMPA_BITNUM 0x00U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA_MASK 0xFF00U
  #define PWM_SM3_CAPTCOMPA_EDGCNTA_BITNUM 0x08U
  #define PWM_SM3_CAPTCOMPA             (*((volatile word *)0x0000F3AB))


  /*** PWM_SM3_CAPTCTRLB - PWM_SM3 Capture Control Register B; 0x0000F3AC ***/
  union {
    word Word;
  } PWM_SM3_CAPTCTRLB_STR;
  
  #define PWM_SM3_CAPTCTRLB_ARMB_MASK   0x01U
  #define PWM_SM3_CAPTCTRLB_ONESHOTB_MASK 0x02U
  #define PWM_SM3_CAPTCTRLB_EDGB00_MASK 0x04U
  #define PWM_SM3_CAPTCTRLB_EDGB01_MASK 0x08U
  #define PWM_SM3_CAPTCTRLB_EDGB10_MASK 0x10U
  #define PWM_SM3_CAPTCTRLB_EDGB11_MASK 0x20U
  #define PWM_SM3_CAPTCTRLB_INP_SELB_MASK 0x40U
  #define PWM_SM3_CAPTCTRLB_EDGCNTB_EN_MASK 0x80U
  #define PWM_SM3_CAPTCTRLB_CFBWM0_MASK 0x0100U
  #define PWM_SM3_CAPTCTRLB_CFBWM1_MASK 0x0200U
  #define PWM_SM3_CAPTCTRLB_CB0CNT0_MASK 0x0400U
  #define PWM_SM3_CAPTCTRLB_CB0CNT1_MASK 0x0800U
  #define PWM_SM3_CAPTCTRLB_CB0CNT2_MASK 0x1000U
  #define PWM_SM3_CAPTCTRLB_CB1CNT0_MASK 0x2000U
  #define PWM_SM3_CAPTCTRLB_CB1CNT1_MASK 0x4000U
  #define PWM_SM3_CAPTCTRLB_CB1CNT2_MASK 0x8000U
  #define PWM_SM3_CAPTCTRLB_EDGB0_MASK  0x0CU
  #define PWM_SM3_CAPTCTRLB_EDGB0_BITNUM 0x02U
  #define PWM_SM3_CAPTCTRLB_EDGB1_MASK  0x30U
  #define PWM_SM3_CAPTCTRLB_EDGB1_BITNUM 0x04U
  #define PWM_SM3_CAPTCTRLB_CFBWM_MASK  0x0300U
  #define PWM_SM3_CAPTCTRLB_CFBWM_BITNUM 0x08U
  #define PWM_SM3_CAPTCTRLB_CB0CNT_MASK 0x1C00U
  #define PWM_SM3_CAPTCTRLB_CB0CNT_BITNUM 0x0AU
  #define PWM_SM3_CAPTCTRLB_CB1CNT_MASK 0xE000U
  #define PWM_SM3_CAPTCTRLB_CB1CNT_BITNUM 0x0DU
  #define PWM_SM3_CAPTCTRLB             (*((volatile word *)0x0000F3AC))


  /*** PWM_SM3_CAPTCOMPB - PWM_SM3 Capture Compare Register B; 0x0000F3AD ***/
  union {
    word Word;
  } PWM_SM3_CAPTCOMPB_STR;
  
  #define PWM_SM3_CAPTCOMPB_EDGCMPB0_MASK 0x01U
  #define PWM_SM3_CAPTCOMPB_EDGCMPB1_MASK 0x02U
  #define PWM_SM3_CAPTCOMPB_EDGCMPB2_MASK 0x04U
  #define PWM_SM3_CAPTCOMPB_EDGCMPB3_MASK 0x08U
  #define PWM_SM3_CAPTCOMPB_EDGCMPB4_MASK 0x10U
  #define PWM_SM3_CAPTCOMPB_EDGCMPB5_MASK 0x20U
  #define PWM_SM3_CAPTCOMPB_EDGCMPB6_MASK 0x40U
  #define PWM_SM3_CAPTCOMPB_EDGCMPB7_MASK 0x80U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB0_MASK 0x0100U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB1_MASK 0x0200U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB2_MASK 0x0400U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB3_MASK 0x0800U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB4_MASK 0x1000U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB5_MASK 0x2000U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB6_MASK 0x4000U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB7_MASK 0x8000U
  #define PWM_SM3_CAPTCOMPB_EDGCMPB_MASK 0xFFU
  #define PWM_SM3_CAPTCOMPB_EDGCMPB_BITNUM 0x00U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB_MASK 0xFF00U
  #define PWM_SM3_CAPTCOMPB_EDGCNTB_BITNUM 0x08U
  #define PWM_SM3_CAPTCOMPB             (*((volatile word *)0x0000F3AD))


  /*** PWM_SM3_CAPTCTRLX - PWM_SM3 Capture Control Register X; 0x0000F3AE ***/
  union {
    word Word;
  } PWM_SM3_CAPTCTRLX_STR;
  
  #define PWM_SM3_CAPTCTRLX_ARMX_MASK   0x01U
  #define PWM_SM3_CAPTCTRLX_ONESHOTX_MASK 0x02U
  #define PWM_SM3_CAPTCTRLX_EDGX00_MASK 0x04U
  #define PWM_SM3_CAPTCTRLX_EDGX01_MASK 0x08U
  #define PWM_SM3_CAPTCTRLX_EDGX10_MASK 0x10U
  #define PWM_SM3_CAPTCTRLX_EDGX11_MASK 0x20U
  #define PWM_SM3_CAPTCTRLX_INP_SELX_MASK 0x40U
  #define PWM_SM3_CAPTCTRLX_EDGCNTX_EN_MASK 0x80U
  #define PWM_SM3_CAPTCTRLX_CFXWM0_MASK 0x0100U
  #define PWM_SM3_CAPTCTRLX_CFXWM1_MASK 0x0200U
  #define PWM_SM3_CAPTCTRLX_CX0CNT0_MASK 0x0400U
  #define PWM_SM3_CAPTCTRLX_CX0CNT1_MASK 0x0800U
  #define PWM_SM3_CAPTCTRLX_CX0CNT2_MASK 0x1000U
  #define PWM_SM3_CAPTCTRLX_CX1CNT0_MASK 0x2000U
  #define PWM_SM3_CAPTCTRLX_CX1CNT1_MASK 0x4000U
  #define PWM_SM3_CAPTCTRLX_CX1CNT2_MASK 0x8000U
  #define PWM_SM3_CAPTCTRLX_EDGX0_MASK  0x0CU
  #define PWM_SM3_CAPTCTRLX_EDGX0_BITNUM 0x02U
  #define PWM_SM3_CAPTCTRLX_EDGX1_MASK  0x30U
  #define PWM_SM3_CAPTCTRLX_EDGX1_BITNUM 0x04U
  #define PWM_SM3_CAPTCTRLX_CFXWM_MASK  0x0300U
  #define PWM_SM3_CAPTCTRLX_CFXWM_BITNUM 0x08U
  #define PWM_SM3_CAPTCTRLX_CX0CNT_MASK 0x1C00U
  #define PWM_SM3_CAPTCTRLX_CX0CNT_BITNUM 0x0AU
  #define PWM_SM3_CAPTCTRLX_CX1CNT_MASK 0xE000U
  #define PWM_SM3_CAPTCTRLX_CX1CNT_BITNUM 0x0DU
  #define PWM_SM3_CAPTCTRLX             (*((volatile word *)0x0000F3AE))


  /*** PWM_SM3_CAPTCOMPX - PWM_SM3 Capture Compare Register X; 0x0000F3AF ***/
  union {
    word Word;
  } PWM_SM3_CAPTCOMPX_STR;
  
  #define PWM_SM3_CAPTCOMPX_EDGCMPX0_MASK 0x01U
  #define PWM_SM3_CAPTCOMPX_EDGCMPX1_MASK 0x02U
  #define PWM_SM3_CAPTCOMPX_EDGCMPX2_MASK 0x04U
  #define PWM_SM3_CAPTCOMPX_EDGCMPX3_MASK 0x08U
  #define PWM_SM3_CAPTCOMPX_EDGCMPX4_MASK 0x10U
  #define PWM_SM3_CAPTCOMPX_EDGCMPX5_MASK 0x20U
  #define PWM_SM3_CAPTCOMPX_EDGCMPX6_MASK 0x40U
  #define PWM_SM3_CAPTCOMPX_EDGCMPX7_MASK 0x80U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX0_MASK 0x0100U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX1_MASK 0x0200U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX2_MASK 0x0400U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX3_MASK 0x0800U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX4_MASK 0x1000U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX5_MASK 0x2000U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX6_MASK 0x4000U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX7_MASK 0x8000U
  #define PWM_SM3_CAPTCOMPX_EDGCMPX_MASK 0xFFU
  #define PWM_SM3_CAPTCOMPX_EDGCMPX_BITNUM 0x00U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX_MASK 0xFF00U
  #define PWM_SM3_CAPTCOMPX_EDGCNTX_BITNUM 0x08U
  #define PWM_SM3_CAPTCOMPX             (*((volatile word *)0x0000F3AF))


  /*** PWM_SM3_CVAL0 - PWM_SM3 Capture Value 0 Register; 0x0000F3B0 ***/
  union {
    word Word;
  } PWM_SM3_CVAL0_STR;
  
  #define PWM_SM3_CVAL0_CAPTVAL00_MASK  0x01U
  #define PWM_SM3_CVAL0_CAPTVAL01_MASK  0x02U
  #define PWM_SM3_CVAL0_CAPTVAL02_MASK  0x04U
  #define PWM_SM3_CVAL0_CAPTVAL03_MASK  0x08U
  #define PWM_SM3_CVAL0_CAPTVAL04_MASK  0x10U
  #define PWM_SM3_CVAL0_CAPTVAL05_MASK  0x20U
  #define PWM_SM3_CVAL0_CAPTVAL06_MASK  0x40U
  #define PWM_SM3_CVAL0_CAPTVAL07_MASK  0x80U
  #define PWM_SM3_CVAL0_CAPTVAL08_MASK  0x0100U
  #define PWM_SM3_CVAL0_CAPTVAL09_MASK  0x0200U
  #define PWM_SM3_CVAL0_CAPTVAL010_MASK 0x0400U
  #define PWM_SM3_CVAL0_CAPTVAL011_MASK 0x0800U
  #define PWM_SM3_CVAL0_CAPTVAL012_MASK 0x1000U
  #define PWM_SM3_CVAL0_CAPTVAL013_MASK 0x2000U
  #define PWM_SM3_CVAL0_CAPTVAL014_MASK 0x4000U
  #define PWM_SM3_CVAL0_CAPTVAL015_MASK 0x8000U
  #define PWM_SM3_CVAL0                 (*((volatile word *)0x0000F3B0))


  word Reserved18[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_CVAL1 - PWM_SM3 Capture Value 1 Register; 0x0000F3B2 ***/
  union {
    word Word;
  } PWM_SM3_CVAL1_STR;
  
  #define PWM_SM3_CVAL1_CAPTVAL10_MASK  0x01U
  #define PWM_SM3_CVAL1_CAPTVAL11_MASK  0x02U
  #define PWM_SM3_CVAL1_CAPTVAL12_MASK  0x04U
  #define PWM_SM3_CVAL1_CAPTVAL13_MASK  0x08U
  #define PWM_SM3_CVAL1_CAPTVAL14_MASK  0x10U
  #define PWM_SM3_CVAL1_CAPTVAL15_MASK  0x20U
  #define PWM_SM3_CVAL1_CAPTVAL16_MASK  0x40U
  #define PWM_SM3_CVAL1_CAPTVAL17_MASK  0x80U
  #define PWM_SM3_CVAL1_CAPTVAL18_MASK  0x0100U
  #define PWM_SM3_CVAL1_CAPTVAL19_MASK  0x0200U
  #define PWM_SM3_CVAL1_CAPTVAL110_MASK 0x0400U
  #define PWM_SM3_CVAL1_CAPTVAL111_MASK 0x0800U
  #define PWM_SM3_CVAL1_CAPTVAL112_MASK 0x1000U
  #define PWM_SM3_CVAL1_CAPTVAL113_MASK 0x2000U
  #define PWM_SM3_CVAL1_CAPTVAL114_MASK 0x4000U
  #define PWM_SM3_CVAL1_CAPTVAL115_MASK 0x8000U
  #define PWM_SM3_CVAL1                 (*((volatile word *)0x0000F3B2))


  word Reserved19[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_CVAL2 - PWM_SM3 Capture Value 2 Register; 0x0000F3B4 ***/
  union {
    word Word;
  } PWM_SM3_CVAL2_STR;
  
  #define PWM_SM3_CVAL2_CAPTVAL20_MASK  0x01U
  #define PWM_SM3_CVAL2_CAPTVAL21_MASK  0x02U
  #define PWM_SM3_CVAL2_CAPTVAL22_MASK  0x04U
  #define PWM_SM3_CVAL2_CAPTVAL23_MASK  0x08U
  #define PWM_SM3_CVAL2_CAPTVAL24_MASK  0x10U
  #define PWM_SM3_CVAL2_CAPTVAL25_MASK  0x20U
  #define PWM_SM3_CVAL2_CAPTVAL26_MASK  0x40U
  #define PWM_SM3_CVAL2_CAPTVAL27_MASK  0x80U
  #define PWM_SM3_CVAL2_CAPTVAL28_MASK  0x0100U
  #define PWM_SM3_CVAL2_CAPTVAL29_MASK  0x0200U
  #define PWM_SM3_CVAL2_CAPTVAL210_MASK 0x0400U
  #define PWM_SM3_CVAL2_CAPTVAL211_MASK 0x0800U
  #define PWM_SM3_CVAL2_CAPTVAL212_MASK 0x1000U
  #define PWM_SM3_CVAL2_CAPTVAL213_MASK 0x2000U
  #define PWM_SM3_CVAL2_CAPTVAL214_MASK 0x4000U
  #define PWM_SM3_CVAL2_CAPTVAL215_MASK 0x8000U
  #define PWM_SM3_CVAL2                 (*((volatile word *)0x0000F3B4))


  word Reserved20[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_CVAL3 - PWM_SM3 Capture Value 3 Register; 0x0000F3B6 ***/
  union {
    word Word;
  } PWM_SM3_CVAL3_STR;
  
  #define PWM_SM3_CVAL3_CAPTVAL30_MASK  0x01U
  #define PWM_SM3_CVAL3_CAPTVAL31_MASK  0x02U
  #define PWM_SM3_CVAL3_CAPTVAL32_MASK  0x04U
  #define PWM_SM3_CVAL3_CAPTVAL33_MASK  0x08U
  #define PWM_SM3_CVAL3_CAPTVAL34_MASK  0x10U
  #define PWM_SM3_CVAL3_CAPTVAL35_MASK  0x20U
  #define PWM_SM3_CVAL3_CAPTVAL36_MASK  0x40U
  #define PWM_SM3_CVAL3_CAPTVAL37_MASK  0x80U
  #define PWM_SM3_CVAL3_CAPTVAL38_MASK  0x0100U
  #define PWM_SM3_CVAL3_CAPTVAL39_MASK  0x0200U
  #define PWM_SM3_CVAL3_CAPTVAL310_MASK 0x0400U
  #define PWM_SM3_CVAL3_CAPTVAL311_MASK 0x0800U
  #define PWM_SM3_CVAL3_CAPTVAL312_MASK 0x1000U
  #define PWM_SM3_CVAL3_CAPTVAL313_MASK 0x2000U
  #define PWM_SM3_CVAL3_CAPTVAL314_MASK 0x4000U
  #define PWM_SM3_CVAL3_CAPTVAL315_MASK 0x8000U
  #define PWM_SM3_CVAL3                 (*((volatile word *)0x0000F3B6))


  word Reserved21[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_CVAL4 - PWM_SM3 Capture Value 4 Register; 0x0000F3B8 ***/
  union {
    word Word;
  } PWM_SM3_CVAL4_STR;
  
  #define PWM_SM3_CVAL4_CAPTVAL40_MASK  0x01U
  #define PWM_SM3_CVAL4_CAPTVAL41_MASK  0x02U
  #define PWM_SM3_CVAL4_CAPTVAL42_MASK  0x04U
  #define PWM_SM3_CVAL4_CAPTVAL43_MASK  0x08U
  #define PWM_SM3_CVAL4_CAPTVAL44_MASK  0x10U
  #define PWM_SM3_CVAL4_CAPTVAL45_MASK  0x20U
  #define PWM_SM3_CVAL4_CAPTVAL46_MASK  0x40U
  #define PWM_SM3_CVAL4_CAPTVAL47_MASK  0x80U
  #define PWM_SM3_CVAL4_CAPTVAL48_MASK  0x0100U
  #define PWM_SM3_CVAL4_CAPTVAL49_MASK  0x0200U
  #define PWM_SM3_CVAL4_CAPTVAL410_MASK 0x0400U
  #define PWM_SM3_CVAL4_CAPTVAL411_MASK 0x0800U
  #define PWM_SM3_CVAL4_CAPTVAL412_MASK 0x1000U
  #define PWM_SM3_CVAL4_CAPTVAL413_MASK 0x2000U
  #define PWM_SM3_CVAL4_CAPTVAL414_MASK 0x4000U
  #define PWM_SM3_CVAL4_CAPTVAL415_MASK 0x8000U
  #define PWM_SM3_CVAL4                 (*((volatile word *)0x0000F3B8))


  word Reserved22[1];                  /* Reserved (unused) registers */
  
  /*** PWM_SM3_CVAL5 - PWM_SM3 Capture Value 5 Register; 0x0000F3BA ***/
  union {
    word Word;
  } PWM_SM3_CVAL5_STR;
  
  #define PWM_SM3_CVAL5_CAPTVAL50_MASK  0x01U
  #define PWM_SM3_CVAL5_CAPTVAL51_MASK  0x02U
  #define PWM_SM3_CVAL5_CAPTVAL52_MASK  0x04U
  #define PWM_SM3_CVAL5_CAPTVAL53_MASK  0x08U
  #define PWM_SM3_CVAL5_CAPTVAL54_MASK  0x10U
  #define PWM_SM3_CVAL5_CAPTVAL55_MASK  0x20U
  #define PWM_SM3_CVAL5_CAPTVAL56_MASK  0x40U
  #define PWM_SM3_CVAL5_CAPTVAL57_MASK  0x80U
  #define PWM_SM3_CVAL5_CAPTVAL58_MASK  0x0100U
  #define PWM_SM3_CVAL5_CAPTVAL59_MASK  0x0200U
  #define PWM_SM3_CVAL5_CAPTVAL510_MASK 0x0400U
  #define PWM_SM3_CVAL5_CAPTVAL511_MASK 0x0800U
  #define PWM_SM3_CVAL5_CAPTVAL512_MASK 0x1000U
  #define PWM_SM3_CVAL5_CAPTVAL513_MASK 0x2000U
  #define PWM_SM3_CVAL5_CAPTVAL514_MASK 0x4000U
  #define PWM_SM3_CVAL5_CAPTVAL515_MASK 0x8000U
  #define PWM_SM3_CVAL5                 (*((volatile word *)0x0000F3BA))


  word Reserved23[5];                  /* Reserved (unused) registers */
  
  /*** PWM_OUTEN - PWM Output Enable Register; 0x0000F3C0 ***/
  union {
    word Word;
  } PWM_OUTEN_STR;
  
  #define PWM_OUTEN_PWMX_EN0_MASK       0x01U
  #define PWM_OUTEN_PWMX_EN1_MASK       0x02U
  #define PWM_OUTEN_PWMX_EN2_MASK       0x04U
  #define PWM_OUTEN_PWMX_EN3_MASK       0x08U
  #define PWM_OUTEN_PWMB_EN0_MASK       0x10U
  #define PWM_OUTEN_PWMB_EN1_MASK       0x20U
  #define PWM_OUTEN_PWMB_EN2_MASK       0x40U
  #define PWM_OUTEN_PWMB_EN3_MASK       0x80U
  #define PWM_OUTEN_PWMA_EN0_MASK       0x0100U
  #define PWM_OUTEN_PWMA_EN1_MASK       0x0200U
  #define PWM_OUTEN_PWMA_EN2_MASK       0x0400U
  #define PWM_OUTEN_PWMA_EN3_MASK       0x0800U
  #define PWM_OUTEN_PWMX_EN_MASK        0x0FU
  #define PWM_OUTEN_PWMX_EN_BITNUM      0x00U
  #define PWM_OUTEN_PWMB_EN_MASK        0xF0U
  #define PWM_OUTEN_PWMB_EN_BITNUM      0x04U
  #define PWM_OUTEN_PWMA_EN_MASK        0x0F00U
  #define PWM_OUTEN_PWMA_EN_BITNUM      0x08U
  #define PWM_OUTEN                     (*((volatile word *)0x0000F3C0))


  /*** PWM_MASK - PWM Output Mask Register; 0x0000F3C1 ***/
  union {
    word Word;
  } PWM_MASK_STR;
  
  #define PWM_MASK_MASKX0_MASK          0x01U
  #define PWM_MASK_MASKX1_MASK          0x02U
  #define PWM_MASK_MASKX2_MASK          0x04U
  #define PWM_MASK_MASKX3_MASK          0x08U
  #define PWM_MASK_MASKB0_MASK          0x10U
  #define PWM_MASK_MASKB1_MASK          0x20U
  #define PWM_MASK_MASKB2_MASK          0x40U
  #define PWM_MASK_MASKB3_MASK          0x80U
  #define PWM_MASK_MASKA0_MASK          0x0100U
  #define PWM_MASK_MASKA1_MASK          0x0200U
  #define PWM_MASK_MASKA2_MASK          0x0400U
  #define PWM_MASK_MASKA3_MASK          0x0800U
  #define PWM_MASK_MASKX_MASK           0x0FU
  #define PWM_MASK_MASKX_BITNUM         0x00U
  #define PWM_MASK_MASKB_MASK           0xF0U
  #define PWM_MASK_MASKB_BITNUM         0x04U
  #define PWM_MASK_MASKA_MASK           0x0F00U
  #define PWM_MASK_MASKA_BITNUM         0x08U
  #define PWM_MASK                      (*((volatile word *)0x0000F3C1))


  /*** PWM_SWCOUT - PWM Software Controlled Output Register; 0x0000F3C2 ***/
  union {
    word Word;
  } PWM_SWCOUT_STR;
  
  #define PWM_SWCOUT_SM0OUT45_MASK      0x01U
  #define PWM_SWCOUT_SM0OUT23_MASK      0x02U
  #define PWM_SWCOUT_SM1OUT45_MASK      0x04U
  #define PWM_SWCOUT_SM1OUT23_MASK      0x08U
  #define PWM_SWCOUT_SM2OUT45_MASK      0x10U
  #define PWM_SWCOUT_SM2OUT23_MASK      0x20U
  #define PWM_SWCOUT_SM3OUT45_MASK      0x40U
  #define PWM_SWCOUT_SM3OUT23_MASK      0x80U
  #define PWM_SWCOUT                    (*((volatile word *)0x0000F3C2))


  /*** PWM_DTSRCSEL - PWM Deadtime Source Select Register; 0x0000F3C3 ***/
  union {
    word Word;
  } PWM_DTSRCSEL_STR;
  
  #define PWM_DTSRCSEL_SM0SEL450_MASK   0x01U
  #define PWM_DTSRCSEL_SM0SEL451_MASK   0x02U
  #define PWM_DTSRCSEL_SM0SEL230_MASK   0x04U
  #define PWM_DTSRCSEL_SM0SEL231_MASK   0x08U
  #define PWM_DTSRCSEL_SM1SEL450_MASK   0x10U
  #define PWM_DTSRCSEL_SM1SEL451_MASK   0x20U
  #define PWM_DTSRCSEL_SM1SEL230_MASK   0x40U
  #define PWM_DTSRCSEL_SM1SEL231_MASK   0x80U
  #define PWM_DTSRCSEL_SM2SEL450_MASK   0x0100U
  #define PWM_DTSRCSEL_SM2SEL451_MASK   0x0200U
  #define PWM_DTSRCSEL_SM2SEL230_MASK   0x0400U
  #define PWM_DTSRCSEL_SM2SEL231_MASK   0x0800U
  #define PWM_DTSRCSEL_SM3SEL450_MASK   0x1000U
  #define PWM_DTSRCSEL_SM3SEL451_MASK   0x2000U
  #define PWM_DTSRCSEL_SM3SEL230_MASK   0x4000U
  #define PWM_DTSRCSEL_SM3SEL231_MASK   0x8000U
  #define PWM_DTSRCSEL_SM0SEL45_MASK    0x03U
  #define PWM_DTSRCSEL_SM0SEL45_BITNUM  0x00U
  #define PWM_DTSRCSEL_SM0SEL23_MASK    0x0CU
  #define PWM_DTSRCSEL_SM0SEL23_BITNUM  0x02U
  #define PWM_DTSRCSEL_SM1SEL45_MASK    0x30U
  #define PWM_DTSRCSEL_SM1SEL45_BITNUM  0x04U
  #define PWM_DTSRCSEL_SM1SEL23_MASK    0xC0U
  #define PWM_DTSRCSEL_SM1SEL23_BITNUM  0x06U
  #define PWM_DTSRCSEL_SM2SEL45_MASK    0x0300U
  #define PWM_DTSRCSEL_SM2SEL45_BITNUM  0x08U
  #define PWM_DTSRCSEL_SM2SEL23_MASK    0x0C00U
  #define PWM_DTSRCSEL_SM2SEL23_BITNUM  0x0AU
  #define PWM_DTSRCSEL_SM3SEL45_MASK    0x3000U
  #define PWM_DTSRCSEL_SM3SEL45_BITNUM  0x0CU
  #define PWM_DTSRCSEL_SM3SEL23_MASK    0xC000U
  #define PWM_DTSRCSEL_SM3SEL23_BITNUM  0x0EU
  #define PWM_DTSRCSEL                  (*((volatile word *)0x0000F3C3))


  /*** PWM_MCTRL - PWM Master Control Register; 0x0000F3C4 ***/
  union {
    word Word;
  } PWM_MCTRL_STR;
  
  #define PWM_MCTRL_LDOK0_MASK          0x01U
  #define PWM_MCTRL_LDOK1_MASK          0x02U
  #define PWM_MCTRL_LDOK2_MASK          0x04U
  #define PWM_MCTRL_LDOK3_MASK          0x08U
  #define PWM_MCTRL_CLDOK0_MASK         0x10U
  #define PWM_MCTRL_CLDOK1_MASK         0x20U
  #define PWM_MCTRL_CLDOK2_MASK         0x40U
  #define PWM_MCTRL_CLDOK3_MASK         0x80U
  #define PWM_MCTRL_RUN0_MASK           0x0100U
  #define PWM_MCTRL_RUN1_MASK           0x0200U
  #define PWM_MCTRL_RUN2_MASK           0x0400U
  #define PWM_MCTRL_RUN3_MASK           0x0800U
  #define PWM_MCTRL_IPOL0_MASK          0x1000U
  #define PWM_MCTRL_IPOL1_MASK          0x2000U
  #define PWM_MCTRL_IPOL2_MASK          0x4000U
  #define PWM_MCTRL_IPOL3_MASK          0x8000U
  #define PWM_MCTRL_LDOK_MASK           0x0FU
  #define PWM_MCTRL_LDOK_BITNUM         0x00U
  #define PWM_MCTRL_CLDOK_MASK          0xF0U
  #define PWM_MCTRL_CLDOK_BITNUM        0x04U
  #define PWM_MCTRL_RUN_MASK            0x0F00U
  #define PWM_MCTRL_RUN_BITNUM          0x08U
  #define PWM_MCTRL_IPOL_MASK           0xF000U
  #define PWM_MCTRL_IPOL_BITNUM         0x0CU
  #define PWM_MCTRL                     (*((volatile word *)0x0000F3C4))


  /*** PWM_MCTRL2 - PWM Master Control 2 Register; 0x0000F3C5 ***/
  union {
    word Word;
  } PWM_MCTRL2_STR;
  
  #define PWM_MCTRL2_MONPLL0_MASK       0x01U
  #define PWM_MCTRL2_MONPLL1_MASK       0x02U
  #define PWM_MCTRL2_MONPLL_MASK        0x03U
  #define PWM_MCTRL2_MONPLL_BITNUM      0x00U
  #define PWM_MCTRL2                    (*((volatile word *)0x0000F3C5))


  /*** PWM_FCTRL - PWM Fault Control Register; 0x0000F3C6 ***/
  union {
    word Word;
  } PWM_FCTRL_STR;
  
  #define PWM_FCTRL_FIE0_MASK           0x01U
  #define PWM_FCTRL_FIE1_MASK           0x02U
  #define PWM_FCTRL_FIE2_MASK           0x04U
  #define PWM_FCTRL_FIE3_MASK           0x08U
  #define PWM_FCTRL_FSAFE0_MASK         0x10U
  #define PWM_FCTRL_FSAFE1_MASK         0x20U
  #define PWM_FCTRL_FSAFE2_MASK         0x40U
  #define PWM_FCTRL_FSAFE3_MASK         0x80U
  #define PWM_FCTRL_FAUTO0_MASK         0x0100U
  #define PWM_FCTRL_FAUTO1_MASK         0x0200U
  #define PWM_FCTRL_FAUTO2_MASK         0x0400U
  #define PWM_FCTRL_FAUTO3_MASK         0x0800U
  #define PWM_FCTRL_FLVL0_MASK          0x1000U
  #define PWM_FCTRL_FLVL1_MASK          0x2000U
  #define PWM_FCTRL_FLVL2_MASK          0x4000U
  #define PWM_FCTRL_FLVL3_MASK          0x8000U
  #define PWM_FCTRL_FIE_MASK            0x0FU
  #define PWM_FCTRL_FIE_BITNUM          0x00U
  #define PWM_FCTRL_FSAFE_MASK          0xF0U
  #define PWM_FCTRL_FSAFE_BITNUM        0x04U
  #define PWM_FCTRL_FAUTO_MASK          0x0F00U
  #define PWM_FCTRL_FAUTO_BITNUM        0x08U
  #define PWM_FCTRL_FLVL_MASK           0xF000U
  #define PWM_FCTRL_FLVL_BITNUM         0x0CU
  #define PWM_FCTRL                     (*((volatile word *)0x0000F3C6))


  /*** PWM_FSTS - PWM Fault Status Register; 0x0000F3C7 ***/
  union {
    word Word;
  } PWM_FSTS_STR;
  
  #define PWM_FSTS_FFLAG0_MASK          0x01U
  #define PWM_FSTS_FFLAG1_MASK          0x02U
  #define PWM_FSTS_FFLAG2_MASK          0x04U
  #define PWM_FSTS_FFLAG3_MASK          0x08U
  #define PWM_FSTS_FFULL0_MASK          0x10U
  #define PWM_FSTS_FFULL1_MASK          0x20U
  #define PWM_FSTS_FFULL2_MASK          0x40U
  #define PWM_FSTS_FFULL3_MASK          0x80U
  #define PWM_FSTS_FFPIN0_MASK          0x0100U
  #define PWM_FSTS_FFPIN1_MASK          0x0200U
  #define PWM_FSTS_FFPIN2_MASK          0x0400U
  #define PWM_FSTS_FFPIN3_MASK          0x0800U
  #define PWM_FSTS_FTEST_MASK           0x1000U
  #define PWM_FSTS_FFLAG_MASK           0x0FU
  #define PWM_FSTS_FFLAG_BITNUM         0x00U
  #define PWM_FSTS_FFULL_MASK           0xF0U
  #define PWM_FSTS_FFULL_BITNUM         0x04U
  #define PWM_FSTS_FFPIN_MASK           0x0F00U
  #define PWM_FSTS_FFPIN_BITNUM         0x08U
  #define PWM_FSTS                      (*((volatile word *)0x0000F3C7))


  /*** PWM_FFILT - PWM Fault Filter Register; 0x0000F3C8 ***/
  union {
    word Word;
  } PWM_FFILT_STR;
  
  #define PWM_FFILT_FILT_PER0_MASK      0x01U
  #define PWM_FFILT_FILT_PER1_MASK      0x02U
  #define PWM_FFILT_FILT_PER2_MASK      0x04U
  #define PWM_FFILT_FILT_PER3_MASK      0x08U
  #define PWM_FFILT_FILT_PER4_MASK      0x10U
  #define PWM_FFILT_FILT_PER5_MASK      0x20U
  #define PWM_FFILT_FILT_PER6_MASK      0x40U
  #define PWM_FFILT_FILT_PER7_MASK      0x80U
  #define PWM_FFILT_FILT_CNT0_MASK      0x0100U
  #define PWM_FFILT_FILT_CNT1_MASK      0x0200U
  #define PWM_FFILT_FILT_CNT2_MASK      0x0400U
  #define PWM_FFILT_GSTR_MASK           0x8000U
  #define PWM_FFILT_FILT_PER_MASK       0xFFU
  #define PWM_FFILT_FILT_PER_BITNUM     0x00U
  #define PWM_FFILT_FILT_CNT_MASK       0x0700U
  #define PWM_FFILT_FILT_CNT_BITNUM     0x08U
  #define PWM_FFILT                     (*((volatile word *)0x0000F3C8))


  word Reserved24[55];                 /* Reserved (unused) registers */

} eFlexPWM_PRPH;

/******************************************
*** Peripheral HFM
*******************************************/
typedef volatile struct {
  /*** FM_CLKDIV - Flash Memory Clock Divider Register; 0x0000F400 ***/
  union {
    word Word;
  } FM_CLKDIV_STR;
  
  #define FM_CLKDIV_DIV0_MASK           0x01U
  #define FM_CLKDIV_DIV1_MASK           0x02U
  #define FM_CLKDIV_DIV2_MASK           0x04U
  #define FM_CLKDIV_DIV3_MASK           0x08U
  #define FM_CLKDIV_DIV4_MASK           0x10U
  #define FM_CLKDIV_DIV5_MASK           0x20U
  #define FM_CLKDIV_PRDIV8_MASK         0x40U
  #define FM_CLKDIV_DIVLD_MASK          0x80U
  #define FM_CLKDIV_DIV_MASK            0x3FU
  #define FM_CLKDIV_DIV_BITNUM          0x00U
  #define FM_CLKDIV                     (*((volatile word *)0x0000F400))


  /*** FM_CNFG - Flash Memory Configuration Register; 0x0000F401 ***/
  union {
    word Word;
  } FM_CNFG_STR;
  
  #define FM_CNFG_BTS_MASK              0x01U
  #define FM_CNFG_LBTS_MASK             0x02U
  #define FM_CNFG_KEYACC_MASK           0x20U
  #define FM_CNFG_CCIE_MASK             0x40U
  #define FM_CNFG_CBEIE_MASK            0x80U
  #define FM_CNFG_AEIE_MASK             0x0100U
  #define FM_CNFG_LOCK_MASK             0x0400U
  #define FM_CNFG                       (*((volatile word *)0x0000F401))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** FM_SECHI - Flash Memory Security High Half Register; 0x0000F403 ***/
  union {
    word Word;
  } FM_SECHI_STR;
  
  #define FM_SECHI_SECSTAT_MASK         0x4000U
  #define FM_SECHI_KEYEN_MASK           0x8000U
  #define FM_SECHI                      (*((volatile word *)0x0000F403))


  /*** FM_SECLO - Flash Memory Security Low Half Register; 0x0000F404 ***/
  union {
    word Word;
  } FM_SECLO_STR;
  
  #define FM_SECLO_SEC0_MASK            0x01U
  #define FM_SECLO_SEC1_MASK            0x02U
  #define FM_SECLO_SEC_MASK             0x03U
  #define FM_SECLO_SEC_BITNUM           0x00U
  #define FM_SECLO                      (*((volatile word *)0x0000F404))


  word Reserved1[11];                  /* Reserved (unused) registers */
  
  /*** FM_PROT - Flash Memory Protection Register; 0x0000F410 ***/
  union {
    word Word;
  } FM_PROT_STR;
  
  #define FM_PROT_PROTECT0_MASK         0x01U
  #define FM_PROT_PROTECT1_MASK         0x02U
  #define FM_PROT_PROTECT2_MASK         0x04U
  #define FM_PROT_PROTECT3_MASK         0x08U
  #define FM_PROT_PROTECT4_MASK         0x10U
  #define FM_PROT_PROTECT5_MASK         0x20U
  #define FM_PROT_PROTECT6_MASK         0x40U
  #define FM_PROT_PROTECT7_MASK         0x80U
  #define FM_PROT_PROTECT8_MASK         0x0100U
  #define FM_PROT_PROTECT9_MASK         0x0200U
  #define FM_PROT_PROTECT10_MASK        0x0400U
  #define FM_PROT_PROTECT11_MASK        0x0800U
  #define FM_PROT_PROTECT12_MASK        0x1000U
  #define FM_PROT_PROTECT13_MASK        0x2000U
  #define FM_PROT_PROTECT14_MASK        0x4000U
  #define FM_PROT_PROTECT15_MASK        0x8000U
  #define FM_PROT                       (*((volatile word *)0x0000F410))


  word Reserved2[2];                   /* Reserved (unused) registers */
  
  /*** FM_USTAT - Flash Memory User Status Register; 0x0000F413 ***/
  union {
    word Word;
  } FM_USTAT_STR;
  
  #define FM_USTAT_BLANK_MASK           0x04U
  #define FM_USTAT_ACCERR_MASK          0x10U
  #define FM_USTAT_PVIOL_MASK           0x20U
  #define FM_USTAT_CCIF_MASK            0x40U
  #define FM_USTAT_CBEIF_MASK           0x80U
  #define FM_USTAT                      (*((volatile word *)0x0000F413))


  /*** FM_CMD - Flash Memory Command and Buffer Register; 0x0000F414 ***/
  union {
    word Word;
  } FM_CMD_STR;
  
  #define FM_CMD_CMD0_MASK              0x01U
  #define FM_CMD_CMD1_MASK              0x02U
  #define FM_CMD_CMD2_MASK              0x04U
  #define FM_CMD_CMD3_MASK              0x08U
  #define FM_CMD_CMD4_MASK              0x10U
  #define FM_CMD_CMD5_MASK              0x20U
  #define FM_CMD_CMD6_MASK              0x40U
  #define FM_CMD_CMD_MASK               0x7FU
  #define FM_CMD_CMD_BITNUM             0x00U
  #define FM_CMD                        (*((volatile word *)0x0000F414))


  word Reserved3[3];                   /* Reserved (unused) registers */
  
  /*** FM_DATA - Flash Memory Data Register; 0x0000F418 ***/
  union {
    word Word;
  } FM_DATA_STR;
  
  #define FM_DATA_FMDATA0_MASK          0x01U
  #define FM_DATA_FMDATA1_MASK          0x02U
  #define FM_DATA_FMDATA2_MASK          0x04U
  #define FM_DATA_FMDATA3_MASK          0x08U
  #define FM_DATA_FMDATA4_MASK          0x10U
  #define FM_DATA_FMDATA5_MASK          0x20U
  #define FM_DATA_FMDATA6_MASK          0x40U
  #define FM_DATA_FMDATA7_MASK          0x80U
  #define FM_DATA_FMDATA8_MASK          0x0100U
  #define FM_DATA_FMDATA9_MASK          0x0200U
  #define FM_DATA_FMDATA10_MASK         0x0400U
  #define FM_DATA_FMDATA11_MASK         0x0800U
  #define FM_DATA_FMDATA12_MASK         0x1000U
  #define FM_DATA_FMDATA13_MASK         0x2000U
  #define FM_DATA_FMDATA14_MASK         0x4000U
  #define FM_DATA_FMDATA15_MASK         0x8000U
  #define FM_DATA                       (*((volatile word *)0x0000F418))


  word Reserved4[1];                   /* Reserved (unused) registers */
  
  /*** FM_OPT0 - Flash Optional Data Register 0; 0x0000F41A ***/
  union {
    word Word;
  } FM_OPT0_STR;
  
  #define FM_OPT0_IFR_OPT00_MASK        0x01U
  #define FM_OPT0_IFR_OPT01_MASK        0x02U
  #define FM_OPT0_IFR_OPT02_MASK        0x04U
  #define FM_OPT0_IFR_OPT03_MASK        0x08U
  #define FM_OPT0_IFR_OPT04_MASK        0x10U
  #define FM_OPT0_IFR_OPT05_MASK        0x20U
  #define FM_OPT0_IFR_OPT06_MASK        0x40U
  #define FM_OPT0_IFR_OPT07_MASK        0x80U
  #define FM_OPT0_IFR_OPT08_MASK        0x0100U
  #define FM_OPT0_IFR_OPT09_MASK        0x0200U
  #define FM_OPT0_IFR_OPT010_MASK       0x0400U
  #define FM_OPT0_IFR_OPT011_MASK       0x0800U
  #define FM_OPT0_IFR_OPT012_MASK       0x1000U
  #define FM_OPT0_IFR_OPT013_MASK       0x2000U
  #define FM_OPT0_IFR_OPT014_MASK       0x4000U
  #define FM_OPT0_IFR_OPT015_MASK       0x8000U
  #define FM_OPT0                       (*((volatile word *)0x0000F41A))


  /*** FM_OPT1 - Flash Optional Data Register 1; 0x0000F41B ***/
  union {
    word Word;
  } FM_OPT1_STR;
  
  #define FM_OPT1_IFR_OPT10_MASK        0x01U
  #define FM_OPT1_IFR_OPT11_MASK        0x02U
  #define FM_OPT1_IFR_OPT12_MASK        0x04U
  #define FM_OPT1_IFR_OPT13_MASK        0x08U
  #define FM_OPT1_IFR_OPT14_MASK        0x10U
  #define FM_OPT1_IFR_OPT15_MASK        0x20U
  #define FM_OPT1_IFR_OPT16_MASK        0x40U
  #define FM_OPT1_IFR_OPT17_MASK        0x80U
  #define FM_OPT1_IFR_OPT18_MASK        0x0100U
  #define FM_OPT1_IFR_OPT19_MASK        0x0200U
  #define FM_OPT1_IFR_OPT110_MASK       0x0400U
  #define FM_OPT1_IFR_OPT111_MASK       0x0800U
  #define FM_OPT1_IFR_OPT112_MASK       0x1000U
  #define FM_OPT1_IFR_OPT113_MASK       0x2000U
  #define FM_OPT1_IFR_OPT114_MASK       0x4000U
  #define FM_OPT1_IFR_OPT115_MASK       0x8000U
  #define FM_OPT1                       (*((volatile word *)0x0000F41B))


  word Reserved5[1];                   /* Reserved (unused) registers */
  
  /*** FM_TSTSIG - Flash Memory Test Array Signature Register; 0x0000F41D ***/
  union {
    word Word;
  } FM_TSTSIG_STR;
  
  #define FM_TSTSIG_TST_AREA_SIG0_MASK  0x01U
  #define FM_TSTSIG_TST_AREA_SIG1_MASK  0x02U
  #define FM_TSTSIG_TST_AREA_SIG2_MASK  0x04U
  #define FM_TSTSIG_TST_AREA_SIG3_MASK  0x08U
  #define FM_TSTSIG_TST_AREA_SIG4_MASK  0x10U
  #define FM_TSTSIG_TST_AREA_SIG5_MASK  0x20U
  #define FM_TSTSIG_TST_AREA_SIG6_MASK  0x40U
  #define FM_TSTSIG_TST_AREA_SIG7_MASK  0x80U
  #define FM_TSTSIG_TST_AREA_SIG8_MASK  0x0100U
  #define FM_TSTSIG_TST_AREA_SIG9_MASK  0x0200U
  #define FM_TSTSIG_TST_AREA_SIG10_MASK 0x0400U
  #define FM_TSTSIG_TST_AREA_SIG11_MASK 0x0800U
  #define FM_TSTSIG_TST_AREA_SIG12_MASK 0x1000U
  #define FM_TSTSIG_TST_AREA_SIG13_MASK 0x2000U
  #define FM_TSTSIG_TST_AREA_SIG14_MASK 0x4000U
  #define FM_TSTSIG_TST_AREA_SIG15_MASK 0x8000U
  #define FM_TSTSIG                     (*((volatile word *)0x0000F41D))


  word Reserved6[34];                  /* Reserved (unused) registers */

} HFM_PRPH;

/******************************************
*** Peripheral MSCAN
*******************************************/
typedef volatile struct {
  /*** MSCAN_CTRL0 - MSCAN Control Register 0; 0x0000F440 ***/
  union {
    word Word;
  } MSCAN_CTRL0_STR;
  
  #define MSCAN_CTRL0_INITRQ_MASK       0x01U
  #define MSCAN_CTRL0_SLPRQ_MASK        0x02U
  #define MSCAN_CTRL0_WUPE_MASK         0x04U
  #define MSCAN_CTRL0_TIME_MASK         0x08U
  #define MSCAN_CTRL0_SYNCH_MASK        0x10U
  #define MSCAN_CTRL0_CSWAI_MASK        0x20U
  #define MSCAN_CTRL0_RXACT_MASK        0x40U
  #define MSCAN_CTRL0_RXFRM_MASK        0x80U
  #define MSCAN_CTRL0                   (*((volatile word *)0x0000F440))


  /*** MSCAN_CTRL1 - MSCAN Control Register 1; 0x0000F441 ***/
  union {
    word Word;
  } MSCAN_CTRL1_STR;
  
  #define MSCAN_CTRL1_INITAK_MASK       0x01U
  #define MSCAN_CTRL1_SLPAK_MASK        0x02U
  #define MSCAN_CTRL1_WUPM_MASK         0x04U
  #define MSCAN_CTRL1_BORM_MASK         0x08U
  #define MSCAN_CTRL1_LISTEN_MASK       0x10U
  #define MSCAN_CTRL1_LOOPB_MASK        0x20U
  #define MSCAN_CTRL1_CLKSRC_MASK       0x40U
  #define MSCAN_CTRL1_CANE_MASK         0x80U
  #define MSCAN_CTRL1                   (*((volatile word *)0x0000F441))


  /*** MSCAN_BTR0 - MSCAN Bus Timing Register 0; 0x0000F442 ***/
  union {
    word Word;
  } MSCAN_BTR0_STR;
  
  #define MSCAN_BTR0_BRP0_MASK          0x01U
  #define MSCAN_BTR0_BRP1_MASK          0x02U
  #define MSCAN_BTR0_BRP2_MASK          0x04U
  #define MSCAN_BTR0_BRP3_MASK          0x08U
  #define MSCAN_BTR0_BRP4_MASK          0x10U
  #define MSCAN_BTR0_BRP5_MASK          0x20U
  #define MSCAN_BTR0_SJW0_MASK          0x40U
  #define MSCAN_BTR0_SJW1_MASK          0x80U
  #define MSCAN_BTR0_BRP_MASK           0x3FU
  #define MSCAN_BTR0_BRP_BITNUM         0x00U
  #define MSCAN_BTR0_SJW_MASK           0xC0U
  #define MSCAN_BTR0_SJW_BITNUM         0x06U
  #define MSCAN_BTR0                    (*((volatile word *)0x0000F442))


  /*** MSCAN_BTR1 - MSCAN Bus Timing Register 1; 0x0000F443 ***/
  union {
    word Word;
  } MSCAN_BTR1_STR;
  
  #define MSCAN_BTR1_TSEG10_MASK        0x01U
  #define MSCAN_BTR1_TSEG11_MASK        0x02U
  #define MSCAN_BTR1_TSEG12_MASK        0x04U
  #define MSCAN_BTR1_TSEG13_MASK        0x08U
  #define MSCAN_BTR1_TSEG20_MASK        0x10U
  #define MSCAN_BTR1_TSEG21_MASK        0x20U
  #define MSCAN_BTR1_TSEG22_MASK        0x40U
  #define MSCAN_BTR1_SAMP_MASK          0x80U
  #define MSCAN_BTR1_TSEG1_MASK         0x0FU
  #define MSCAN_BTR1_TSEG1_BITNUM       0x00U
  #define MSCAN_BTR1_TSEG2_MASK         0x70U
  #define MSCAN_BTR1_TSEG2_BITNUM       0x04U
  #define MSCAN_BTR1                    (*((volatile word *)0x0000F443))


  /*** MSCAN_RFLG - MSCAN Receiver Flag Register; 0x0000F444 ***/
  union {
    word Word;
  } MSCAN_RFLG_STR;
  
  #define MSCAN_RFLG_RXF_MASK           0x01U
  #define MSCAN_RFLG_OVRIF_MASK         0x02U
  #define MSCAN_RFLG_TSTAT0_MASK        0x04U
  #define MSCAN_RFLG_TSTAT1_MASK        0x08U
  #define MSCAN_RFLG_RSTAT0_MASK        0x10U
  #define MSCAN_RFLG_RSTAT1_MASK        0x20U
  #define MSCAN_RFLG_CSCIF_MASK         0x40U
  #define MSCAN_RFLG_WUPIF_MASK         0x80U
  #define MSCAN_RFLG_TSTAT_MASK         0x0CU
  #define MSCAN_RFLG_TSTAT_BITNUM       0x02U
  #define MSCAN_RFLG_RSTAT_MASK         0x30U
  #define MSCAN_RFLG_RSTAT_BITNUM       0x04U
  #define MSCAN_RFLG                    (*((volatile word *)0x0000F444))


  /*** MSCAN_RIER - MSCAN Receiver Interrupt Enable Register; 0x0000F445 ***/
  union {
    word Word;
  } MSCAN_RIER_STR;
  
  #define MSCAN_RIER_RXFIE_MASK         0x01U
  #define MSCAN_RIER_OVRIE_MASK         0x02U
  #define MSCAN_RIER_TSTATE0_MASK       0x04U
  #define MSCAN_RIER_TSTATE1_MASK       0x08U
  #define MSCAN_RIER_RSTATE0_MASK       0x10U
  #define MSCAN_RIER_RSTATE1_MASK       0x20U
  #define MSCAN_RIER_CSCIE_MASK         0x40U
  #define MSCAN_RIER_WUPIE_MASK         0x80U
  #define MSCAN_RIER_TSTATE_MASK        0x0CU
  #define MSCAN_RIER_TSTATE_BITNUM      0x02U
  #define MSCAN_RIER_RSTATE_MASK        0x30U
  #define MSCAN_RIER_RSTATE_BITNUM      0x04U
  #define MSCAN_RIER                    (*((volatile word *)0x0000F445))


  /*** MSCAN_TFLG - MSCAN Transmitter Flag Register; 0x0000F446 ***/
  union {
    word Word;
  } MSCAN_TFLG_STR;
  
  #define MSCAN_TFLG_TXE0_MASK          0x01U
  #define MSCAN_TFLG_TXE1_MASK          0x02U
  #define MSCAN_TFLG_TXE2_MASK          0x04U
  #define MSCAN_TFLG_TXE_MASK           0x07U
  #define MSCAN_TFLG_TXE_BITNUM         0x00U
  #define MSCAN_TFLG                    (*((volatile word *)0x0000F446))


  /*** MSCAN_TIER - MSCAN Transmitter Interrupt Enable Register; 0x0000F447 ***/
  union {
    word Word;
  } MSCAN_TIER_STR;
  
  #define MSCAN_TIER_TXEIE0_MASK        0x01U
  #define MSCAN_TIER_TXEIE1_MASK        0x02U
  #define MSCAN_TIER_TXEIE2_MASK        0x04U
  #define MSCAN_TIER_TXEIE_MASK         0x07U
  #define MSCAN_TIER_TXEIE_BITNUM       0x00U
  #define MSCAN_TIER                    (*((volatile word *)0x0000F447))


  /*** MSCAN_TARQ - MSCAN Transmitter Message Abort Request Register; 0x0000F448 ***/
  union {
    word Word;
  } MSCAN_TARQ_STR;
  
  #define MSCAN_TARQ_ABTRQ0_MASK        0x01U
  #define MSCAN_TARQ_ABTRQ1_MASK        0x02U
  #define MSCAN_TARQ_ABTRQ2_MASK        0x04U
  #define MSCAN_TARQ_ABTRQ_MASK         0x07U
  #define MSCAN_TARQ_ABTRQ_BITNUM       0x00U
  #define MSCAN_TARQ                    (*((volatile word *)0x0000F448))


  /*** MSCAN_TAAK - MSCAN Transmitter Message Abort Acknowledge Register; 0x0000F449 ***/
  union {
    word Word;
  } MSCAN_TAAK_STR;
  
  #define MSCAN_TAAK_ABTAK0_MASK        0x01U
  #define MSCAN_TAAK_ABTAK1_MASK        0x02U
  #define MSCAN_TAAK_ABTAK2_MASK        0x04U
  #define MSCAN_TAAK_ABTAK_MASK         0x07U
  #define MSCAN_TAAK_ABTAK_BITNUM       0x00U
  #define MSCAN_TAAK                    (*((volatile word *)0x0000F449))


  /*** MSCAN_TBSEL - MSCAN Transmitter Buffer Selection Register; 0x0000F44A ***/
  union {
    word Word;
  } MSCAN_TBSEL_STR;
  
  #define MSCAN_TBSEL_TX0_MASK          0x01U
  #define MSCAN_TBSEL_TX1_MASK          0x02U
  #define MSCAN_TBSEL_TX2_MASK          0x04U
  #define MSCAN_TBSEL_TX_MASK           0x07U
  #define MSCAN_TBSEL_TX_BITNUM         0x00U
  #define MSCAN_TBSEL                   (*((volatile word *)0x0000F44A))


  /*** MSCAN_IDAC - MSCAN Identifier Acceptance Control Register; 0x0000F44B ***/
  union {
    word Word;
  } MSCAN_IDAC_STR;
  
  #define MSCAN_IDAC_IDHIT0_MASK        0x01U
  #define MSCAN_IDAC_IDHIT1_MASK        0x02U
  #define MSCAN_IDAC_IDHIT2_MASK        0x04U
  #define MSCAN_IDAC_IDAM0_MASK         0x10U
  #define MSCAN_IDAC_IDAM1_MASK         0x20U
  #define MSCAN_IDAC_IDHIT_MASK         0x07U
  #define MSCAN_IDAC_IDHIT_BITNUM       0x00U
  #define MSCAN_IDAC_IDAM_MASK          0x30U
  #define MSCAN_IDAC_IDAM_BITNUM        0x04U
  #define MSCAN_IDAC                    (*((volatile word *)0x0000F44B))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** MSCAN_MISC - MSCAN Miscellaneous Register; 0x0000F44D ***/
  union {
    word Word;
  } MSCAN_MISC_STR;
  
  #define MSCAN_MISC_BOHOLD_MASK        0x01U
  #define MSCAN_MISC                    (*((volatile word *)0x0000F44D))


  /*** MSCAN_RXERR - MSCAN Receive Error Counter Register; 0x0000F44E ***/
  union {
    word Word;
  } MSCAN_RXERR_STR;
  
  #define MSCAN_RXERR_RXERR0_MASK       0x01U
  #define MSCAN_RXERR_RXERR1_MASK       0x02U
  #define MSCAN_RXERR_RXERR2_MASK       0x04U
  #define MSCAN_RXERR_RXERR3_MASK       0x08U
  #define MSCAN_RXERR_RXERR4_MASK       0x10U
  #define MSCAN_RXERR_RXERR5_MASK       0x20U
  #define MSCAN_RXERR_RXERR6_MASK       0x40U
  #define MSCAN_RXERR_RXERR7_MASK       0x80U
  #define MSCAN_RXERR_RXERR_MASK        0xFFU
  #define MSCAN_RXERR_RXERR_BITNUM      0x00U
  #define MSCAN_RXERR                   (*((volatile word *)0x0000F44E))


  /*** MSCAN_TXERR - MSCAN Transmit Error Counter Register; 0x0000F44F ***/
  union {
    word Word;
  } MSCAN_TXERR_STR;
  
  #define MSCAN_TXERR_TXERR0_MASK       0x01U
  #define MSCAN_TXERR_TXERR1_MASK       0x02U
  #define MSCAN_TXERR_TXERR2_MASK       0x04U
  #define MSCAN_TXERR_TXERR3_MASK       0x08U
  #define MSCAN_TXERR_TXERR4_MASK       0x10U
  #define MSCAN_TXERR_TXERR5_MASK       0x20U
  #define MSCAN_TXERR_TXERR6_MASK       0x40U
  #define MSCAN_TXERR_TXERR7_MASK       0x80U
  #define MSCAN_TXERR_TXERR_MASK        0xFFU
  #define MSCAN_TXERR_TXERR_BITNUM      0x00U
  #define MSCAN_TXERR                   (*((volatile word *)0x0000F44F))


  /*** MSCAN_IDAR0 - MSCAN Identifier Acceptance Register 0; 0x0000F450 ***/
  union {
    word Word;
  } MSCAN_IDAR0_STR;
  
  #define MSCAN_IDAR0_AC0_MASK          0x01U
  #define MSCAN_IDAR0_AC1_MASK          0x02U
  #define MSCAN_IDAR0_AC2_MASK          0x04U
  #define MSCAN_IDAR0_AC3_MASK          0x08U
  #define MSCAN_IDAR0_AC4_MASK          0x10U
  #define MSCAN_IDAR0_AC5_MASK          0x20U
  #define MSCAN_IDAR0_AC6_MASK          0x40U
  #define MSCAN_IDAR0_AC7_MASK          0x80U
  #define MSCAN_IDAR0_AC_MASK           0xFFU
  #define MSCAN_IDAR0_AC_BITNUM         0x00U
  #define MSCAN_IDAR0                   (*((volatile word *)0x0000F450))


  /*** MSCAN_IDAR1 - MSCAN Identifier Acceptance Register 1; 0x0000F451 ***/
  union {
    word Word;
  } MSCAN_IDAR1_STR;
  
  #define MSCAN_IDAR1_AC0_MASK          0x01U
  #define MSCAN_IDAR1_AC1_MASK          0x02U
  #define MSCAN_IDAR1_AC2_MASK          0x04U
  #define MSCAN_IDAR1_AC3_MASK          0x08U
  #define MSCAN_IDAR1_AC4_MASK          0x10U
  #define MSCAN_IDAR1_AC5_MASK          0x20U
  #define MSCAN_IDAR1_AC6_MASK          0x40U
  #define MSCAN_IDAR1_AC7_MASK          0x80U
  #define MSCAN_IDAR1_AC_MASK           0xFFU
  #define MSCAN_IDAR1_AC_BITNUM         0x00U
  #define MSCAN_IDAR1                   (*((volatile word *)0x0000F451))


  /*** MSCAN_IDAR2 - MSCAN Identifier Acceptance Register 2; 0x0000F452 ***/
  union {
    word Word;
  } MSCAN_IDAR2_STR;
  
  #define MSCAN_IDAR2_AC0_MASK          0x01U
  #define MSCAN_IDAR2_AC1_MASK          0x02U
  #define MSCAN_IDAR2_AC2_MASK          0x04U
  #define MSCAN_IDAR2_AC3_MASK          0x08U
  #define MSCAN_IDAR2_AC4_MASK          0x10U
  #define MSCAN_IDAR2_AC5_MASK          0x20U
  #define MSCAN_IDAR2_AC6_MASK          0x40U
  #define MSCAN_IDAR2_AC7_MASK          0x80U
  #define MSCAN_IDAR2_AC_MASK           0xFFU
  #define MSCAN_IDAR2_AC_BITNUM         0x00U
  #define MSCAN_IDAR2                   (*((volatile word *)0x0000F452))


  /*** MSCAN_IDAR3 - MSCAN Identifier Acceptance Register 3; 0x0000F453 ***/
  union {
    word Word;
  } MSCAN_IDAR3_STR;
  
  #define MSCAN_IDAR3_AC0_MASK          0x01U
  #define MSCAN_IDAR3_AC1_MASK          0x02U
  #define MSCAN_IDAR3_AC2_MASK          0x04U
  #define MSCAN_IDAR3_AC3_MASK          0x08U
  #define MSCAN_IDAR3_AC4_MASK          0x10U
  #define MSCAN_IDAR3_AC5_MASK          0x20U
  #define MSCAN_IDAR3_AC6_MASK          0x40U
  #define MSCAN_IDAR3_AC7_MASK          0x80U
  #define MSCAN_IDAR3_AC_MASK           0xFFU
  #define MSCAN_IDAR3_AC_BITNUM         0x00U
  #define MSCAN_IDAR3                   (*((volatile word *)0x0000F453))


  /*** MSCAN_IDMR0 - MSCAN Identifier Mask Register 0; 0x0000F454 ***/
  union {
    word Word;
  } MSCAN_IDMR0_STR;
  
  #define MSCAN_IDMR0_AM0_MASK          0x01U
  #define MSCAN_IDMR0_AM1_MASK          0x02U
  #define MSCAN_IDMR0_AM2_MASK          0x04U
  #define MSCAN_IDMR0_AM3_MASK          0x08U
  #define MSCAN_IDMR0_AM4_MASK          0x10U
  #define MSCAN_IDMR0_AM5_MASK          0x20U
  #define MSCAN_IDMR0_AM6_MASK          0x40U
  #define MSCAN_IDMR0_AM7_MASK          0x80U
  #define MSCAN_IDMR0_AM_MASK           0xFFU
  #define MSCAN_IDMR0_AM_BITNUM         0x00U
  #define MSCAN_IDMR0                   (*((volatile word *)0x0000F454))


  /*** MSCAN_IDMR1 - MSCAN Identifier Mask Register 1; 0x0000F455 ***/
  union {
    word Word;
  } MSCAN_IDMR1_STR;
  
  #define MSCAN_IDMR1_AM0_MASK          0x01U
  #define MSCAN_IDMR1_AM1_MASK          0x02U
  #define MSCAN_IDMR1_AM2_MASK          0x04U
  #define MSCAN_IDMR1_AM3_MASK          0x08U
  #define MSCAN_IDMR1_AM4_MASK          0x10U
  #define MSCAN_IDMR1_AM5_MASK          0x20U
  #define MSCAN_IDMR1_AM6_MASK          0x40U
  #define MSCAN_IDMR1_AM7_MASK          0x80U
  #define MSCAN_IDMR1_AM_MASK           0xFFU
  #define MSCAN_IDMR1_AM_BITNUM         0x00U
  #define MSCAN_IDMR1                   (*((volatile word *)0x0000F455))


  /*** MSCAN_IDMR2 - MSCAN Identifier Mask Register 2; 0x0000F456 ***/
  union {
    word Word;
  } MSCAN_IDMR2_STR;
  
  #define MSCAN_IDMR2_AM0_MASK          0x01U
  #define MSCAN_IDMR2_AM1_MASK          0x02U
  #define MSCAN_IDMR2_AM2_MASK          0x04U
  #define MSCAN_IDMR2_AM3_MASK          0x08U
  #define MSCAN_IDMR2_AM4_MASK          0x10U
  #define MSCAN_IDMR2_AM5_MASK          0x20U
  #define MSCAN_IDMR2_AM6_MASK          0x40U
  #define MSCAN_IDMR2_AM7_MASK          0x80U
  #define MSCAN_IDMR2_AM_MASK           0xFFU
  #define MSCAN_IDMR2_AM_BITNUM         0x00U
  #define MSCAN_IDMR2                   (*((volatile word *)0x0000F456))


  /*** MSCAN_IDMR3 - MSCAN Identifier Mask Register 3; 0x0000F457 ***/
  union {
    word Word;
  } MSCAN_IDMR3_STR;
  
  #define MSCAN_IDMR3_AM0_MASK          0x01U
  #define MSCAN_IDMR3_AM1_MASK          0x02U
  #define MSCAN_IDMR3_AM2_MASK          0x04U
  #define MSCAN_IDMR3_AM3_MASK          0x08U
  #define MSCAN_IDMR3_AM4_MASK          0x10U
  #define MSCAN_IDMR3_AM5_MASK          0x20U
  #define MSCAN_IDMR3_AM6_MASK          0x40U
  #define MSCAN_IDMR3_AM7_MASK          0x80U
  #define MSCAN_IDMR3_AM_MASK           0xFFU
  #define MSCAN_IDMR3_AM_BITNUM         0x00U
  #define MSCAN_IDMR3                   (*((volatile word *)0x0000F457))


  /*** MSCAN_IDAR4 - MSCAN Identifier Acceptance Register 4; 0x0000F458 ***/
  union {
    word Word;
  } MSCAN_IDAR4_STR;
  
  #define MSCAN_IDAR4_AC0_MASK          0x01U
  #define MSCAN_IDAR4_AC1_MASK          0x02U
  #define MSCAN_IDAR4_AC2_MASK          0x04U
  #define MSCAN_IDAR4_AC3_MASK          0x08U
  #define MSCAN_IDAR4_AC4_MASK          0x10U
  #define MSCAN_IDAR4_AC5_MASK          0x20U
  #define MSCAN_IDAR4_AC6_MASK          0x40U
  #define MSCAN_IDAR4_AC7_MASK          0x80U
  #define MSCAN_IDAR4_AC_MASK           0xFFU
  #define MSCAN_IDAR4_AC_BITNUM         0x00U
  #define MSCAN_IDAR4                   (*((volatile word *)0x0000F458))


  /*** MSCAN_IDAR5 - MSCAN Identifier Acceptance Register 5; 0x0000F459 ***/
  union {
    word Word;
  } MSCAN_IDAR5_STR;
  
  #define MSCAN_IDAR5_AC0_MASK          0x01U
  #define MSCAN_IDAR5_AC1_MASK          0x02U
  #define MSCAN_IDAR5_AC2_MASK          0x04U
  #define MSCAN_IDAR5_AC3_MASK          0x08U
  #define MSCAN_IDAR5_AC4_MASK          0x10U
  #define MSCAN_IDAR5_AC5_MASK          0x20U
  #define MSCAN_IDAR5_AC6_MASK          0x40U
  #define MSCAN_IDAR5_AC7_MASK          0x80U
  #define MSCAN_IDAR5_AC_MASK           0xFFU
  #define MSCAN_IDAR5_AC_BITNUM         0x00U
  #define MSCAN_IDAR5                   (*((volatile word *)0x0000F459))


  /*** MSCAN_IDAR6 - MSCAN Identifier Acceptance Register 6; 0x0000F45A ***/
  union {
    word Word;
  } MSCAN_IDAR6_STR;
  
  #define MSCAN_IDAR6_AC0_MASK          0x01U
  #define MSCAN_IDAR6_AC1_MASK          0x02U
  #define MSCAN_IDAR6_AC2_MASK          0x04U
  #define MSCAN_IDAR6_AC3_MASK          0x08U
  #define MSCAN_IDAR6_AC4_MASK          0x10U
  #define MSCAN_IDAR6_AC5_MASK          0x20U
  #define MSCAN_IDAR6_AC6_MASK          0x40U
  #define MSCAN_IDAR6_AC7_MASK          0x80U
  #define MSCAN_IDAR6_AC_MASK           0xFFU
  #define MSCAN_IDAR6_AC_BITNUM         0x00U
  #define MSCAN_IDAR6                   (*((volatile word *)0x0000F45A))


  /*** MSCAN_IDAR7 - MSCAN Identifier Acceptance Register 7; 0x0000F45B ***/
  union {
    word Word;
  } MSCAN_IDAR7_STR;
  
  #define MSCAN_IDAR7_AC0_MASK          0x01U
  #define MSCAN_IDAR7_AC1_MASK          0x02U
  #define MSCAN_IDAR7_AC2_MASK          0x04U
  #define MSCAN_IDAR7_AC3_MASK          0x08U
  #define MSCAN_IDAR7_AC4_MASK          0x10U
  #define MSCAN_IDAR7_AC5_MASK          0x20U
  #define MSCAN_IDAR7_AC6_MASK          0x40U
  #define MSCAN_IDAR7_AC7_MASK          0x80U
  #define MSCAN_IDAR7_AC_MASK           0xFFU
  #define MSCAN_IDAR7_AC_BITNUM         0x00U
  #define MSCAN_IDAR7                   (*((volatile word *)0x0000F45B))


  /*** MSCAN_IDMR4 - MSCAN Identifier Mask Register 4; 0x0000F45C ***/
  union {
    word Word;
  } MSCAN_IDMR4_STR;
  
  #define MSCAN_IDMR4_AM0_MASK          0x01U
  #define MSCAN_IDMR4_AM1_MASK          0x02U
  #define MSCAN_IDMR4_AM2_MASK          0x04U
  #define MSCAN_IDMR4_AM3_MASK          0x08U
  #define MSCAN_IDMR4_AM4_MASK          0x10U
  #define MSCAN_IDMR4_AM5_MASK          0x20U
  #define MSCAN_IDMR4_AM6_MASK          0x40U
  #define MSCAN_IDMR4_AM7_MASK          0x80U
  #define MSCAN_IDMR4_AM_MASK           0xFFU
  #define MSCAN_IDMR4_AM_BITNUM         0x00U
  #define MSCAN_IDMR4                   (*((volatile word *)0x0000F45C))


  /*** MSCAN_IDMR5 - MSCAN Identifier Mask Register 5; 0x0000F45D ***/
  union {
    word Word;
  } MSCAN_IDMR5_STR;
  
  #define MSCAN_IDMR5_AM0_MASK          0x01U
  #define MSCAN_IDMR5_AM1_MASK          0x02U
  #define MSCAN_IDMR5_AM2_MASK          0x04U
  #define MSCAN_IDMR5_AM3_MASK          0x08U
  #define MSCAN_IDMR5_AM4_MASK          0x10U
  #define MSCAN_IDMR5_AM5_MASK          0x20U
  #define MSCAN_IDMR5_AM6_MASK          0x40U
  #define MSCAN_IDMR5_AM7_MASK          0x80U
  #define MSCAN_IDMR5_AM_MASK           0xFFU
  #define MSCAN_IDMR5_AM_BITNUM         0x00U
  #define MSCAN_IDMR5                   (*((volatile word *)0x0000F45D))


  /*** MSCAN_IDMR6 - MSCAN Identifier Mask Register 6; 0x0000F45E ***/
  union {
    word Word;
  } MSCAN_IDMR6_STR;
  
  #define MSCAN_IDMR6_AM0_MASK          0x01U
  #define MSCAN_IDMR6_AM1_MASK          0x02U
  #define MSCAN_IDMR6_AM2_MASK          0x04U
  #define MSCAN_IDMR6_AM3_MASK          0x08U
  #define MSCAN_IDMR6_AM4_MASK          0x10U
  #define MSCAN_IDMR6_AM5_MASK          0x20U
  #define MSCAN_IDMR6_AM6_MASK          0x40U
  #define MSCAN_IDMR6_AM7_MASK          0x80U
  #define MSCAN_IDMR6_AM_MASK           0xFFU
  #define MSCAN_IDMR6_AM_BITNUM         0x00U
  #define MSCAN_IDMR6                   (*((volatile word *)0x0000F45E))


  /*** MSCAN_IDMR7 - MSCAN Identifier Mask Register 7; 0x0000F45F ***/
  union {
    word Word;
  } MSCAN_IDMR7_STR;
  
  #define MSCAN_IDMR7_AM0_MASK          0x01U
  #define MSCAN_IDMR7_AM1_MASK          0x02U
  #define MSCAN_IDMR7_AM2_MASK          0x04U
  #define MSCAN_IDMR7_AM3_MASK          0x08U
  #define MSCAN_IDMR7_AM4_MASK          0x10U
  #define MSCAN_IDMR7_AM5_MASK          0x20U
  #define MSCAN_IDMR7_AM6_MASK          0x40U
  #define MSCAN_IDMR7_AM7_MASK          0x80U
  #define MSCAN_IDMR7_AM_MASK           0xFFU
  #define MSCAN_IDMR7_AM_BITNUM         0x00U
  #define MSCAN_IDMR7                   (*((volatile word *)0x0000F45F))


} MSCAN_PRPH;

/******************************************
*** Peripheral MSCAN_RB
*******************************************/
typedef volatile struct {
  /*** MSCAN_RB_IDR0 - MSCAN Receive Buffer Identifier Register 0; 0x0000F460 ***/
  union {
    word Word;
  } MSCAN_RB_IDR0_STR;
  
  #define MSCAN_RB_IDR0_ID0_MASK        0x01U
  #define MSCAN_RB_IDR0_ID1_MASK        0x02U
  #define MSCAN_RB_IDR0_ID2_MASK        0x04U
  #define MSCAN_RB_IDR0_ID3_MASK        0x08U
  #define MSCAN_RB_IDR0_ID4_MASK        0x10U
  #define MSCAN_RB_IDR0_ID5_MASK        0x20U
  #define MSCAN_RB_IDR0_ID6_MASK        0x40U
  #define MSCAN_RB_IDR0_ID7_MASK        0x80U
  #define MSCAN_RB_IDR0_ID_MASK         0xFFU
  #define MSCAN_RB_IDR0_ID_BITNUM       0x00U
  #define MSCAN_RB_IDR0                 (*((volatile word *)0x0000F460))


  /*** MSCAN_RB_IDR1 - MSCAN Receive Buffer Identifier Register 1; 0x0000F461 ***/
  union {
    word Word;
  } MSCAN_RB_IDR1_STR;
  
  #define MSCAN_RB_IDR1_ID0_MASK        0x01U
  #define MSCAN_RB_IDR1_ID1_MASK        0x02U
  #define MSCAN_RB_IDR1_ID2_MASK        0x04U
  #define MSCAN_RB_IDR1_ID3_MASK        0x08U
  #define MSCAN_RB_IDR1_ID4_MASK        0x10U
  #define MSCAN_RB_IDR1_ID5_MASK        0x20U
  #define MSCAN_RB_IDR1_ID6_MASK        0x40U
  #define MSCAN_RB_IDR1_ID7_MASK        0x80U
  #define MSCAN_RB_IDR1_ID_MASK         0xFFU
  #define MSCAN_RB_IDR1_ID_BITNUM       0x00U
  #define MSCAN_RB_IDR1                 (*((volatile word *)0x0000F461))


  /*** MSCAN_RB_IDR2 - MSCAN Receive Buffer Identifier Register 2; 0x0000F462 ***/
  union {
    word Word;
  } MSCAN_RB_IDR2_STR;
  
  #define MSCAN_RB_IDR2_ID0_MASK        0x01U
  #define MSCAN_RB_IDR2_ID1_MASK        0x02U
  #define MSCAN_RB_IDR2_ID2_MASK        0x04U
  #define MSCAN_RB_IDR2_ID3_MASK        0x08U
  #define MSCAN_RB_IDR2_ID4_MASK        0x10U
  #define MSCAN_RB_IDR2_ID5_MASK        0x20U
  #define MSCAN_RB_IDR2_ID6_MASK        0x40U
  #define MSCAN_RB_IDR2_ID7_MASK        0x80U
  #define MSCAN_RB_IDR2_ID_MASK         0xFFU
  #define MSCAN_RB_IDR2_ID_BITNUM       0x00U
  #define MSCAN_RB_IDR2                 (*((volatile word *)0x0000F462))


  /*** MSCAN_RB_IDR3 - MSCAN Receive Buffer Identifier Register 3; 0x0000F463 ***/
  union {
    word Word;
  } MSCAN_RB_IDR3_STR;
  
  #define MSCAN_RB_IDR3_ID0_MASK        0x01U
  #define MSCAN_RB_IDR3_ID1_MASK        0x02U
  #define MSCAN_RB_IDR3_ID2_MASK        0x04U
  #define MSCAN_RB_IDR3_ID3_MASK        0x08U
  #define MSCAN_RB_IDR3_ID4_MASK        0x10U
  #define MSCAN_RB_IDR3_ID5_MASK        0x20U
  #define MSCAN_RB_IDR3_ID6_MASK        0x40U
  #define MSCAN_RB_IDR3_ID7_MASK        0x80U
  #define MSCAN_RB_IDR3_ID_MASK         0xFFU
  #define MSCAN_RB_IDR3_ID_BITNUM       0x00U
  #define MSCAN_RB_IDR3                 (*((volatile word *)0x0000F463))


  /*** MSCAN_RB_DSR0 - MSCAN Receive Buffer Data Segment Register 0; 0x0000F464 ***/
  union {
    word Word;
  } MSCAN_RB_DSR0_STR;
  
  #define MSCAN_RB_DSR0_DB0_MASK        0x01U
  #define MSCAN_RB_DSR0_DB1_MASK        0x02U
  #define MSCAN_RB_DSR0_DB2_MASK        0x04U
  #define MSCAN_RB_DSR0_DB3_MASK        0x08U
  #define MSCAN_RB_DSR0_DB4_MASK        0x10U
  #define MSCAN_RB_DSR0_DB5_MASK        0x20U
  #define MSCAN_RB_DSR0_DB6_MASK        0x40U
  #define MSCAN_RB_DSR0_DB7_MASK        0x80U
  #define MSCAN_RB_DSR0_DB_MASK         0xFFU
  #define MSCAN_RB_DSR0_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR0                 (*((volatile word *)0x0000F464))


  /*** MSCAN_RB_DSR1 - MSCAN Receive Buffer Data Segment Register 1; 0x0000F465 ***/
  union {
    word Word;
  } MSCAN_RB_DSR1_STR;
  
  #define MSCAN_RB_DSR1_DB0_MASK        0x01U
  #define MSCAN_RB_DSR1_DB1_MASK        0x02U
  #define MSCAN_RB_DSR1_DB2_MASK        0x04U
  #define MSCAN_RB_DSR1_DB3_MASK        0x08U
  #define MSCAN_RB_DSR1_DB4_MASK        0x10U
  #define MSCAN_RB_DSR1_DB5_MASK        0x20U
  #define MSCAN_RB_DSR1_DB6_MASK        0x40U
  #define MSCAN_RB_DSR1_DB7_MASK        0x80U
  #define MSCAN_RB_DSR1_DB_MASK         0xFFU
  #define MSCAN_RB_DSR1_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR1                 (*((volatile word *)0x0000F465))


  /*** MSCAN_RB_DSR2 - MSCAN Receive Buffer Data Segment Register 2; 0x0000F466 ***/
  union {
    word Word;
  } MSCAN_RB_DSR2_STR;
  
  #define MSCAN_RB_DSR2_DB0_MASK        0x01U
  #define MSCAN_RB_DSR2_DB1_MASK        0x02U
  #define MSCAN_RB_DSR2_DB2_MASK        0x04U
  #define MSCAN_RB_DSR2_DB3_MASK        0x08U
  #define MSCAN_RB_DSR2_DB4_MASK        0x10U
  #define MSCAN_RB_DSR2_DB5_MASK        0x20U
  #define MSCAN_RB_DSR2_DB6_MASK        0x40U
  #define MSCAN_RB_DSR2_DB7_MASK        0x80U
  #define MSCAN_RB_DSR2_DB_MASK         0xFFU
  #define MSCAN_RB_DSR2_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR2                 (*((volatile word *)0x0000F466))


  /*** MSCAN_RB_DSR3 - MSCAN Receive Buffer Data Segment Register 3; 0x0000F467 ***/
  union {
    word Word;
  } MSCAN_RB_DSR3_STR;
  
  #define MSCAN_RB_DSR3_DB0_MASK        0x01U
  #define MSCAN_RB_DSR3_DB1_MASK        0x02U
  #define MSCAN_RB_DSR3_DB2_MASK        0x04U
  #define MSCAN_RB_DSR3_DB3_MASK        0x08U
  #define MSCAN_RB_DSR3_DB4_MASK        0x10U
  #define MSCAN_RB_DSR3_DB5_MASK        0x20U
  #define MSCAN_RB_DSR3_DB6_MASK        0x40U
  #define MSCAN_RB_DSR3_DB7_MASK        0x80U
  #define MSCAN_RB_DSR3_DB_MASK         0xFFU
  #define MSCAN_RB_DSR3_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR3                 (*((volatile word *)0x0000F467))


  /*** MSCAN_RB_DSR4 - MSCAN Receive Buffer Data Segment Register 4; 0x0000F468 ***/
  union {
    word Word;
  } MSCAN_RB_DSR4_STR;
  
  #define MSCAN_RB_DSR4_DB0_MASK        0x01U
  #define MSCAN_RB_DSR4_DB1_MASK        0x02U
  #define MSCAN_RB_DSR4_DB2_MASK        0x04U
  #define MSCAN_RB_DSR4_DB3_MASK        0x08U
  #define MSCAN_RB_DSR4_DB4_MASK        0x10U
  #define MSCAN_RB_DSR4_DB5_MASK        0x20U
  #define MSCAN_RB_DSR4_DB6_MASK        0x40U
  #define MSCAN_RB_DSR4_DB7_MASK        0x80U
  #define MSCAN_RB_DSR4_DB_MASK         0xFFU
  #define MSCAN_RB_DSR4_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR4                 (*((volatile word *)0x0000F468))


  /*** MSCAN_RB_DSR5 - MSCAN Receive Buffer Data Segment Register 5; 0x0000F469 ***/
  union {
    word Word;
  } MSCAN_RB_DSR5_STR;
  
  #define MSCAN_RB_DSR5_DB0_MASK        0x01U
  #define MSCAN_RB_DSR5_DB1_MASK        0x02U
  #define MSCAN_RB_DSR5_DB2_MASK        0x04U
  #define MSCAN_RB_DSR5_DB3_MASK        0x08U
  #define MSCAN_RB_DSR5_DB4_MASK        0x10U
  #define MSCAN_RB_DSR5_DB5_MASK        0x20U
  #define MSCAN_RB_DSR5_DB6_MASK        0x40U
  #define MSCAN_RB_DSR5_DB7_MASK        0x80U
  #define MSCAN_RB_DSR5_DB_MASK         0xFFU
  #define MSCAN_RB_DSR5_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR5                 (*((volatile word *)0x0000F469))


  /*** MSCAN_RB_DSR6 - MSCAN Receive Buffer Data Segment Register 6; 0x0000F46A ***/
  union {
    word Word;
  } MSCAN_RB_DSR6_STR;
  
  #define MSCAN_RB_DSR6_DB0_MASK        0x01U
  #define MSCAN_RB_DSR6_DB1_MASK        0x02U
  #define MSCAN_RB_DSR6_DB2_MASK        0x04U
  #define MSCAN_RB_DSR6_DB3_MASK        0x08U
  #define MSCAN_RB_DSR6_DB4_MASK        0x10U
  #define MSCAN_RB_DSR6_DB5_MASK        0x20U
  #define MSCAN_RB_DSR6_DB6_MASK        0x40U
  #define MSCAN_RB_DSR6_DB7_MASK        0x80U
  #define MSCAN_RB_DSR6_DB_MASK         0xFFU
  #define MSCAN_RB_DSR6_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR6                 (*((volatile word *)0x0000F46A))


  /*** MSCAN_RB_DSR7 - MSCAN Receive Buffer Data Segment Register 7; 0x0000F46B ***/
  union {
    word Word;
  } MSCAN_RB_DSR7_STR;
  
  #define MSCAN_RB_DSR7_DB0_MASK        0x01U
  #define MSCAN_RB_DSR7_DB1_MASK        0x02U
  #define MSCAN_RB_DSR7_DB2_MASK        0x04U
  #define MSCAN_RB_DSR7_DB3_MASK        0x08U
  #define MSCAN_RB_DSR7_DB4_MASK        0x10U
  #define MSCAN_RB_DSR7_DB5_MASK        0x20U
  #define MSCAN_RB_DSR7_DB6_MASK        0x40U
  #define MSCAN_RB_DSR7_DB7_MASK        0x80U
  #define MSCAN_RB_DSR7_DB_MASK         0xFFU
  #define MSCAN_RB_DSR7_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR7                 (*((volatile word *)0x0000F46B))


  /*** MSCAN_RB_DLR - MSCAN Receive Buffer Data Length Register; 0x0000F46C ***/
  union {
    word Word;
  } MSCAN_RB_DLR_STR;
  
  #define MSCAN_RB_DLR_DLC0_MASK        0x01U
  #define MSCAN_RB_DLR_DLC1_MASK        0x02U
  #define MSCAN_RB_DLR_DLC2_MASK        0x04U
  #define MSCAN_RB_DLR_DLC3_MASK        0x08U
  #define MSCAN_RB_DLR_DLC_MASK         0x0FU
  #define MSCAN_RB_DLR_DLC_BITNUM       0x00U
  #define MSCAN_RB_DLR                  (*((volatile word *)0x0000F46C))


  word Reserved0[3];                   /* Reserved (unused) registers */

} MSCAN_RB_PRPH;

/******************************************
*** Peripheral MSCAN_TB
*******************************************/
typedef volatile struct {
  /*** MSCAN_TB_IDR0 - MSCAN Transmit Buffer Identifier Register 0; 0x0000F470 ***/
  union {
    word Word;
  } MSCAN_TB_IDR0_STR;
  
  #define MSCAN_TB_IDR0_ID0_MASK        0x01U
  #define MSCAN_TB_IDR0_ID1_MASK        0x02U
  #define MSCAN_TB_IDR0_ID2_MASK        0x04U
  #define MSCAN_TB_IDR0_ID3_MASK        0x08U
  #define MSCAN_TB_IDR0_ID4_MASK        0x10U
  #define MSCAN_TB_IDR0_ID5_MASK        0x20U
  #define MSCAN_TB_IDR0_ID6_MASK        0x40U
  #define MSCAN_TB_IDR0_ID7_MASK        0x80U
  #define MSCAN_TB_IDR0_ID_MASK         0xFFU
  #define MSCAN_TB_IDR0_ID_BITNUM       0x00U
  #define MSCAN_TB_IDR0                 (*((volatile word *)0x0000F470))


  /*** MSCAN_TB_IDR1 - MSCAN Transmit Buffer Identifier Register 1; 0x0000F471 ***/
  union {
    word Word;
  } MSCAN_TB_IDR1_STR;
  
  #define MSCAN_TB_IDR1_ID0_MASK        0x01U
  #define MSCAN_TB_IDR1_ID1_MASK        0x02U
  #define MSCAN_TB_IDR1_ID2_MASK        0x04U
  #define MSCAN_TB_IDR1_ID3_MASK        0x08U
  #define MSCAN_TB_IDR1_ID4_MASK        0x10U
  #define MSCAN_TB_IDR1_ID5_MASK        0x20U
  #define MSCAN_TB_IDR1_ID6_MASK        0x40U
  #define MSCAN_TB_IDR1_ID7_MASK        0x80U
  #define MSCAN_TB_IDR1_ID_MASK         0xFFU
  #define MSCAN_TB_IDR1_ID_BITNUM       0x00U
  #define MSCAN_TB_IDR1                 (*((volatile word *)0x0000F471))


  /*** MSCAN_TB_IDR2 - MSCAN Transmit Buffer Identifier Register 2; 0x0000F472 ***/
  union {
    word Word;
  } MSCAN_TB_IDR2_STR;
  
  #define MSCAN_TB_IDR2_ID0_MASK        0x01U
  #define MSCAN_TB_IDR2_ID1_MASK        0x02U
  #define MSCAN_TB_IDR2_ID2_MASK        0x04U
  #define MSCAN_TB_IDR2_ID3_MASK        0x08U
  #define MSCAN_TB_IDR2_ID4_MASK        0x10U
  #define MSCAN_TB_IDR2_ID5_MASK        0x20U
  #define MSCAN_TB_IDR2_ID6_MASK        0x40U
  #define MSCAN_TB_IDR2_ID7_MASK        0x80U
  #define MSCAN_TB_IDR2_ID_MASK         0xFFU
  #define MSCAN_TB_IDR2_ID_BITNUM       0x00U
  #define MSCAN_TB_IDR2                 (*((volatile word *)0x0000F472))


  /*** MSCAN_TB_IDR3 - MSCAN Transmit Buffer Identifier Register 3; 0x0000F473 ***/
  union {
    word Word;
  } MSCAN_TB_IDR3_STR;
  
  #define MSCAN_TB_IDR3_ID0_MASK        0x01U
  #define MSCAN_TB_IDR3_ID1_MASK        0x02U
  #define MSCAN_TB_IDR3_ID2_MASK        0x04U
  #define MSCAN_TB_IDR3_ID3_MASK        0x08U
  #define MSCAN_TB_IDR3_ID4_MASK        0x10U
  #define MSCAN_TB_IDR3_ID5_MASK        0x20U
  #define MSCAN_TB_IDR3_ID6_MASK        0x40U
  #define MSCAN_TB_IDR3_ID7_MASK        0x80U
  #define MSCAN_TB_IDR3_ID_MASK         0xFFU
  #define MSCAN_TB_IDR3_ID_BITNUM       0x00U
  #define MSCAN_TB_IDR3                 (*((volatile word *)0x0000F473))


  /*** MSCAN_TB_DSR0 - MSCAN Transmit Buffer Data Segment Register 0; 0x0000F474 ***/
  union {
    word Word;
  } MSCAN_TB_DSR0_STR;
  
  #define MSCAN_TB_DSR0_DB0_MASK        0x01U
  #define MSCAN_TB_DSR0_DB1_MASK        0x02U
  #define MSCAN_TB_DSR0_DB2_MASK        0x04U
  #define MSCAN_TB_DSR0_DB3_MASK        0x08U
  #define MSCAN_TB_DSR0_DB4_MASK        0x10U
  #define MSCAN_TB_DSR0_DB5_MASK        0x20U
  #define MSCAN_TB_DSR0_DB6_MASK        0x40U
  #define MSCAN_TB_DSR0_DB7_MASK        0x80U
  #define MSCAN_TB_DSR0_DB_MASK         0xFFU
  #define MSCAN_TB_DSR0_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR0                 (*((volatile word *)0x0000F474))


  /*** MSCAN_TB_DSR1 - MSCAN Transmit Buffer Data Segment Register 1; 0x0000F475 ***/
  union {
    word Word;
  } MSCAN_TB_DSR1_STR;
  
  #define MSCAN_TB_DSR1_DB0_MASK        0x01U
  #define MSCAN_TB_DSR1_DB1_MASK        0x02U
  #define MSCAN_TB_DSR1_DB2_MASK        0x04U
  #define MSCAN_TB_DSR1_DB3_MASK        0x08U
  #define MSCAN_TB_DSR1_DB4_MASK        0x10U
  #define MSCAN_TB_DSR1_DB5_MASK        0x20U
  #define MSCAN_TB_DSR1_DB6_MASK        0x40U
  #define MSCAN_TB_DSR1_DB7_MASK        0x80U
  #define MSCAN_TB_DSR1_DB_MASK         0xFFU
  #define MSCAN_TB_DSR1_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR1                 (*((volatile word *)0x0000F475))


  /*** MSCAN_TB_DSR2 - MSCAN Transmit Buffer Data Segment Register 2; 0x0000F476 ***/
  union {
    word Word;
  } MSCAN_TB_DSR2_STR;
  
  #define MSCAN_TB_DSR2_DB0_MASK        0x01U
  #define MSCAN_TB_DSR2_DB1_MASK        0x02U
  #define MSCAN_TB_DSR2_DB2_MASK        0x04U
  #define MSCAN_TB_DSR2_DB3_MASK        0x08U
  #define MSCAN_TB_DSR2_DB4_MASK        0x10U
  #define MSCAN_TB_DSR2_DB5_MASK        0x20U
  #define MSCAN_TB_DSR2_DB6_MASK        0x40U
  #define MSCAN_TB_DSR2_DB7_MASK        0x80U
  #define MSCAN_TB_DSR2_DB_MASK         0xFFU
  #define MSCAN_TB_DSR2_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR2                 (*((volatile word *)0x0000F476))


  /*** MSCAN_TB_DSR3 - MSCAN Transmit Buffer Data Segment Register 3; 0x0000F477 ***/
  union {
    word Word;
  } MSCAN_TB_DSR3_STR;
  
  #define MSCAN_TB_DSR3_DB0_MASK        0x01U
  #define MSCAN_TB_DSR3_DB1_MASK        0x02U
  #define MSCAN_TB_DSR3_DB2_MASK        0x04U
  #define MSCAN_TB_DSR3_DB3_MASK        0x08U
  #define MSCAN_TB_DSR3_DB4_MASK        0x10U
  #define MSCAN_TB_DSR3_DB5_MASK        0x20U
  #define MSCAN_TB_DSR3_DB6_MASK        0x40U
  #define MSCAN_TB_DSR3_DB7_MASK        0x80U
  #define MSCAN_TB_DSR3_DB_MASK         0xFFU
  #define MSCAN_TB_DSR3_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR3                 (*((volatile word *)0x0000F477))


  /*** MSCAN_TB_DSR4 - MSCAN Transmit Buffer Data Segment Register 4; 0x0000F478 ***/
  union {
    word Word;
  } MSCAN_TB_DSR4_STR;
  
  #define MSCAN_TB_DSR4_DB0_MASK        0x01U
  #define MSCAN_TB_DSR4_DB1_MASK        0x02U
  #define MSCAN_TB_DSR4_DB2_MASK        0x04U
  #define MSCAN_TB_DSR4_DB3_MASK        0x08U
  #define MSCAN_TB_DSR4_DB4_MASK        0x10U
  #define MSCAN_TB_DSR4_DB5_MASK        0x20U
  #define MSCAN_TB_DSR4_DB6_MASK        0x40U
  #define MSCAN_TB_DSR4_DB7_MASK        0x80U
  #define MSCAN_TB_DSR4_DB_MASK         0xFFU
  #define MSCAN_TB_DSR4_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR4                 (*((volatile word *)0x0000F478))


  /*** MSCAN_TB_DSR5 - MSCAN Transmit Buffer Data Segment Register 5; 0x0000F479 ***/
  union {
    word Word;
  } MSCAN_TB_DSR5_STR;
  
  #define MSCAN_TB_DSR5_DB0_MASK        0x01U
  #define MSCAN_TB_DSR5_DB1_MASK        0x02U
  #define MSCAN_TB_DSR5_DB2_MASK        0x04U
  #define MSCAN_TB_DSR5_DB3_MASK        0x08U
  #define MSCAN_TB_DSR5_DB4_MASK        0x10U
  #define MSCAN_TB_DSR5_DB5_MASK        0x20U
  #define MSCAN_TB_DSR5_DB6_MASK        0x40U
  #define MSCAN_TB_DSR5_DB7_MASK        0x80U
  #define MSCAN_TB_DSR5_DB_MASK         0xFFU
  #define MSCAN_TB_DSR5_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR5                 (*((volatile word *)0x0000F479))


  /*** MSCAN_TB_DSR6 - MSCAN Transmit Buffer Data Segment Register 6; 0x0000F47A ***/
  union {
    word Word;
  } MSCAN_TB_DSR6_STR;
  
  #define MSCAN_TB_DSR6_DB0_MASK        0x01U
  #define MSCAN_TB_DSR6_DB1_MASK        0x02U
  #define MSCAN_TB_DSR6_DB2_MASK        0x04U
  #define MSCAN_TB_DSR6_DB3_MASK        0x08U
  #define MSCAN_TB_DSR6_DB4_MASK        0x10U
  #define MSCAN_TB_DSR6_DB5_MASK        0x20U
  #define MSCAN_TB_DSR6_DB6_MASK        0x40U
  #define MSCAN_TB_DSR6_DB7_MASK        0x80U
  #define MSCAN_TB_DSR6_DB_MASK         0xFFU
  #define MSCAN_TB_DSR6_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR6                 (*((volatile word *)0x0000F47A))


  /*** MSCAN_TB_DSR7 - MSCAN Transmit Buffer Data Segment Register 7; 0x0000F47B ***/
  union {
    word Word;
  } MSCAN_TB_DSR7_STR;
  
  #define MSCAN_TB_DSR7_DB0_MASK        0x01U
  #define MSCAN_TB_DSR7_DB1_MASK        0x02U
  #define MSCAN_TB_DSR7_DB2_MASK        0x04U
  #define MSCAN_TB_DSR7_DB3_MASK        0x08U
  #define MSCAN_TB_DSR7_DB4_MASK        0x10U
  #define MSCAN_TB_DSR7_DB5_MASK        0x20U
  #define MSCAN_TB_DSR7_DB6_MASK        0x40U
  #define MSCAN_TB_DSR7_DB7_MASK        0x80U
  #define MSCAN_TB_DSR7_DB_MASK         0xFFU
  #define MSCAN_TB_DSR7_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR7                 (*((volatile word *)0x0000F47B))


  /*** MSCAN_TB_DLR - MSCAN Transmit Buffer Data Length Register; 0x0000F47C ***/
  union {
    word Word;
  } MSCAN_TB_DLR_STR;
  
  #define MSCAN_TB_DLR_DLC0_MASK        0x01U
  #define MSCAN_TB_DLR_DLC1_MASK        0x02U
  #define MSCAN_TB_DLR_DLC2_MASK        0x04U
  #define MSCAN_TB_DLR_DLC3_MASK        0x08U
  #define MSCAN_TB_DLR_DLC_MASK         0x0FU
  #define MSCAN_TB_DLR_DLC_BITNUM       0x00U
  #define MSCAN_TB_DLR                  (*((volatile word *)0x0000F47C))


  /*** MSCAN_TB_TBPR - MSCAN Transmit Buffer Priority Register; 0x0000F47D ***/
  union {
    word Word;
  } MSCAN_TB_TBPR_STR;
  
  #define MSCAN_TB_TBPR_PRIO0_MASK      0x01U
  #define MSCAN_TB_TBPR_PRIO1_MASK      0x02U
  #define MSCAN_TB_TBPR_PRIO2_MASK      0x04U
  #define MSCAN_TB_TBPR_PRIO3_MASK      0x08U
  #define MSCAN_TB_TBPR_PRIO4_MASK      0x10U
  #define MSCAN_TB_TBPR_PRIO5_MASK      0x20U
  #define MSCAN_TB_TBPR_PRIO6_MASK      0x40U
  #define MSCAN_TB_TBPR_PRIO7_MASK      0x80U
  #define MSCAN_TB_TBPR_PRIO_MASK       0xFFU
  #define MSCAN_TB_TBPR_PRIO_BITNUM     0x00U
  #define MSCAN_TB_TBPR                 (*((volatile word *)0x0000F47D))


  /*** MSCAN_TB_TSRH - MSCAN Transmit Buffer Time Stamp Register; 0x0000F47E ***/
  union {
    word Word;
  } MSCAN_TB_TSRH_STR;
  
  #define MSCAN_TB_TSRH_TSR0_MASK       0x01U
  #define MSCAN_TB_TSRH_TSR1_MASK       0x02U
  #define MSCAN_TB_TSRH_TSR2_MASK       0x04U
  #define MSCAN_TB_TSRH_TSR3_MASK       0x08U
  #define MSCAN_TB_TSRH_TSR4_MASK       0x10U
  #define MSCAN_TB_TSRH_TSR5_MASK       0x20U
  #define MSCAN_TB_TSRH_TSR6_MASK       0x40U
  #define MSCAN_TB_TSRH_TSR7_MASK       0x80U
  #define MSCAN_TB_TSRH_TSR_MASK        0xFFU
  #define MSCAN_TB_TSRH_TSR_BITNUM      0x00U
  #define MSCAN_TB_TSRH                 (*((volatile word *)0x0000F47E))


  /*** MSCAN_TB_TSRL - MSCAN Transmit Buffer Time Stamp Register; 0x0000F47F ***/
  union {
    word Word;
  } MSCAN_TB_TSRL_STR;
  
  #define MSCAN_TB_TSRL_TSR0_MASK       0x01U
  #define MSCAN_TB_TSRL_TSR1_MASK       0x02U
  #define MSCAN_TB_TSRL_TSR2_MASK       0x04U
  #define MSCAN_TB_TSRL_TSR3_MASK       0x08U
  #define MSCAN_TB_TSRL_TSR4_MASK       0x10U
  #define MSCAN_TB_TSRL_TSR5_MASK       0x20U
  #define MSCAN_TB_TSRL_TSR6_MASK       0x40U
  #define MSCAN_TB_TSRL_TSR7_MASK       0x80U
  #define MSCAN_TB_TSRL_TSR_MASK        0xFFU
  #define MSCAN_TB_TSRL_TSR_BITNUM      0x00U
  #define MSCAN_TB_TSRL                 (*((volatile word *)0x0000F47F))


} MSCAN_TB_PRPH;



/* -----------------------------------------------------------
Exceptions in bit names of timer status and control registers
due to backward compatibility with previous releases */
  #define ADC_CAL_SEL_DAC0_MASK         0x01U
  #define ADC_CAL_SEL_DAC1_MASK         0x02U
  #define ADC_CAL_SEL_VREFLO_0_MASK     0x1000U
  #define ADC_CAL_SEL_VREFH_0_MASK      0x2000U
  #define ADC_CAL_SEL_VREFLO_1_MASK     0x4000U
  #define ADC_CAL_SEL_VREFH_1_MASK      0x8000U

  #define PWM_SM0_FRCTRL_FRAC2_EN_MASK  0x04U
  #define PWM_SM0_FRCTRL_FRAC4_EN_MASK  0x10U

  #define PWM_SM1_FRCTRL_FRAC2_EN_MASK  0x04U
  #define PWM_SM1_FRCTRL_FRAC4_EN_MASK  0x10U

  #define PWM_SM2_FRCTRL_FRAC2_EN_MASK  0x04U
  #define PWM_SM2_FRCTRL_FRAC4_EN_MASK  0x10U


#endif
/* __IO_Map_H */

/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
